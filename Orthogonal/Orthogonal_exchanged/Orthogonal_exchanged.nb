(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 14.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[   1006629,      21014]
NotebookOptionsPosition[    981800,      20636]
NotebookOutlinePosition[    982197,      20652]
CellTagsIndexPosition[    982154,      20649]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Orthogonal faces of the quantum set in the CHSH scenario", "Title",
 CellChangeTimes->{{3.9519039420339603`*^9, 3.951903964476486*^9}, {
  3.954242060282805*^9, 3.95424207107801*^9}, {3.954251450521587*^9, 
  3.954251474828463*^9}},ExpressionUUID->"dcb3ea09-9dd6-4189-9e5e-\
3fa5f8524803"],

Cell[CellGroupData[{

Cell["Preliminaries", "Section",
 CellChangeTimes->{{3.950606731242412*^9, 3.9506067450218697`*^9}, {
  3.953868148261323*^9, 
  3.9538681518825703`*^9}},ExpressionUUID->"2ca0f123-cff7-42db-ad21-\
d548abc35ad7"],

Cell["\<\
We want to study the geometry of the quantum set of behaviors (correlations), \
which is convex. Specifically, we want to study the quantum set through the \
dual perspective. Since one can fully characterize a convex set in terms of \
its extremal points, it will be then sufficient to study orthogonal faces \
(faces of the dual).\
\>", "Text",
 CellChangeTimes->{{3.950606749177318*^9, 3.95060699842876*^9}, {
  3.950607033443018*^9, 3.950607066938368*^9}, {3.950607099545705*^9, 
  3.950607101625382*^9}, {3.953691368622685*^9, 3.953691368875723*^9}, {
  3.9542515180472393`*^9, 3.954251618545183*^9}, {3.9542522538727818`*^9, 
  3.954252263812339*^9}},ExpressionUUID->"c84f387f-23ac-46df-b4cd-\
c1cc27668cfb"],

Cell["One defines operators acting on the single-qubit space as", "Text",
 CellChangeTimes->{{3.95025428012119*^9, 3.950254285472444*^9}, {
  3.950254440449782*^9, 3.950254454976799*^9}, {3.950261020068242*^9, 
  3.950261064649961*^9}, {3.95386816683698*^9, 
  3.9538681692713127`*^9}},ExpressionUUID->"14a013af-677f-4368-91af-\
925178ce43d1"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"X", "=", 
   RowBox[{"PauliMatrix", "[", "1", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Y", "=", 
   RowBox[{"PauliMatrix", "[", "2", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Z", "=", 
   RowBox[{"PauliMatrix", "[", "3", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"I2", "=", 
   RowBox[{"IdentityMatrix", "[", "2", "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.950253939899938*^9, 3.95025394305982*^9}, {
   3.950254075062321*^9, 3.950254083230064*^9}, {3.950254147157544*^9, 
   3.950254219945882*^9}, {3.9502542565046*^9, 3.950254260817194*^9}, 
   3.950260995182375*^9, {3.950261046390917*^9, 3.95026104693024*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"8327d7d9-7500-4a71-9335-74a775d7c258"],

Cell["\<\
and operators acting on the 2-qubit space using the tensor product of \
single-qubit operators as\
\>", "Text",
 CellChangeTimes->{{3.950261053572982*^9, 3.950261091654953*^9}, {
  3.950261992639833*^9, 
  3.950261992947455*^9}},ExpressionUUID->"4b787d6e-0968-4f05-bae8-\
abd46b2bbe94"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ZA", "=", 
   RowBox[{"KroneckerProduct", "[", 
    RowBox[{"Z", ",", "I2"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ZB", "=", 
   RowBox[{"KroneckerProduct", "[", 
    RowBox[{"I2", ",", "Z"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"XA", "=", 
   RowBox[{"KroneckerProduct", "[", 
    RowBox[{"X", ",", "I2"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"XB", "=", 
   RowBox[{"KroneckerProduct", "[", 
    RowBox[{"I2", ",", "X"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ZZ", "=", 
   RowBox[{"KroneckerProduct", "[", 
    RowBox[{"Z", ",", "Z"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"XX", "=", 
   RowBox[{"KroneckerProduct", "[", 
    RowBox[{"X", ",", "X"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ZX", "=", 
   RowBox[{"KroneckerProduct", "[", 
    RowBox[{"Z", ",", "X"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"XZ", "=", 
   RowBox[{"KroneckerProduct", "[", 
    RowBox[{"X", ",", "Z"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"II", "=", 
   RowBox[{"KroneckerProduct", "[", 
    RowBox[{"I2", ",", "I2"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.950349461744219*^9, 3.95034949058116*^9}, {
  3.9503498991154327`*^9, 3.95034991442438*^9}, {3.950607356060226*^9, 
  3.950607356895149*^9}, {3.950674768847319*^9, 3.9506747913280077`*^9}},
 CellLabel->"In[5]:=",ExpressionUUID->"badd97e2-0a44-4ad9-b5b8-3aefa39ce14b"],

Cell[CellGroupData[{

Cell["General realization and behavior", "Subsection",
 CellChangeTimes->{{3.9506762593965073`*^9, 3.9506762683397503`*^9}, {
  3.950678005008599*^9, 3.950678013052681*^9}, {3.951991239008018*^9, 
  3.951991242454393*^9}},ExpressionUUID->"ba18c35b-6aa4-44d2-a27a-\
e73e0f227d5c"],

Cell["Now, one considers the realization given by", "Text",
 CellChangeTimes->{{3.950676324186224*^9, 3.950676330310339*^9}, {
  3.9506763660615683`*^9, 
  3.950676367968501*^9}},ExpressionUUID->"00b2c191-dbb1-47d5-97c4-\
0dbf6f53a9fb"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"phi", "[", "\[Theta]_", "]"}], ":=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", "0", ",", "0", ",", 
     RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"$Assumptions", "=", 
   RowBox[{
    RowBox[{"\[Theta]", "\[Element]", "Reals"}], "&&", 
    RowBox[{
     RowBox[{"a", "[", "0", "]"}], "\[Element]", "Reals"}], "&&", 
    RowBox[{
     RowBox[{"a", "[", "1", "]"}], "\[Element]", "Reals"}], "&&", 
    RowBox[{
     RowBox[{"b", "[", "0", "]"}], "\[Element]", "Reals"}], "&&", 
    RowBox[{
     RowBox[{"b", "[", "1", "]"}], "\[Element]", "Reals"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"A", "[", "i_", "]"}], ":=", 
   RowBox[{
    RowBox[{
     RowBox[{"Cos", "[", 
      RowBox[{"a", "[", "i", "]"}], "]"}], "ZA"}], "+", 
    RowBox[{
     RowBox[{"Sin", "[", 
      RowBox[{"a", "[", "i", "]"}], "]"}], "XA"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"B", "[", "i_", "]"}], ":=", 
   RowBox[{
    RowBox[{
     RowBox[{"Cos", "[", 
      RowBox[{"b", "[", "i", "]"}], "]"}], "ZB"}], "+", 
    RowBox[{
     RowBox[{"Sin", "[", 
      RowBox[{"b", "[", "i", "]"}], "]"}], "XB"}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.950253928178158*^9, 3.950253928180045*^9}, {
   3.950607199448575*^9, 3.950607217851942*^9}, {3.950607327833962*^9, 
   3.950607345972172*^9}, 3.950608520643573*^9, {3.950609992370187*^9, 
   3.950609996308999*^9}, {3.950676416532119*^9, 3.950676417304635*^9}, {
   3.950679140021974*^9, 3.950679140753973*^9}, 3.9506795954620337`*^9, {
   3.951884575455139*^9, 3.951884593681978*^9}, {3.951885672577722*^9, 
   3.951885705320508*^9}, {3.951885834377228*^9, 3.951885836056408*^9}, {
   3.951885873271199*^9, 3.951885908272394*^9}},
 CellLabel->"In[14]:=",ExpressionUUID->"63bde641-a49d-4e07-8961-7d02d4e2c04a"],

Cell["\<\
Such implementation gives the following probability distribution (behavior)\
\>", "Text",
 CellChangeTimes->{{3.950676447780982*^9, 3.950676480584506*^9}, {
  3.950679844990426*^9, 
  3.950679849254633*^9}},ExpressionUUID->"c627de52-ad44-48aa-ba05-\
a7b40f349194"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Here", ",", " ", 
    RowBox[{"A", " ", "and", " ", "B", " ", "are", " ", "matrices"}]}], 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"Ops", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"II", ",", " ", 
         RowBox[{"B", "[", "0", "]"}], ",", 
         RowBox[{"B", "[", "1", "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"A", "[", "0", "]"}], ",", 
         RowBox[{
          RowBox[{"A", "[", "0", "]"}], ".", 
          RowBox[{"B", "[", "0", "]"}]}], ",", 
         RowBox[{
          RowBox[{"A", "[", "0", "]"}], ".", 
          RowBox[{"B", "[", "1", "]"}]}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"A", "[", "1", "]"}], ",", 
         RowBox[{
          RowBox[{"A", "[", "1", "]"}], ".", 
          RowBox[{"B", "[", "0", "]"}]}], ",", 
         RowBox[{
          RowBox[{"A", "[", "1", "]"}], ".", 
          RowBox[{"B", "[", "1", "]"}]}]}], "}"}]}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"Pprime", "[", "\[Theta]_", "]"}], " ", ":=", " ", 
     RowBox[{"Flatten", "[", "\[IndentingNewLine]", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"FullSimplify", "[", 
         RowBox[{
          RowBox[{"ConjugateTranspose", "[", 
           RowBox[{"phi", "[", "\[Theta]", "]"}], "]"}], ".", 
          RowBox[{"Ops", "[", 
           RowBox[{"[", 
            RowBox[{"i", ",", "j"}], "]"}], "]"}], ".", 
          RowBox[{"phi", "[", "\[Theta]", "]"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", "3"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"j", ",", "1", ",", "3"}], "}"}]}], "]"}], 
      "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"P", "[", "\[Theta]_", "]"}], ":=", 
     RowBox[{"Drop", "[", 
      RowBox[{
       RowBox[{"Pprime", "[", "\[Theta]", "]"}], ",", "1"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"P", "[", "\[Theta]", "]"}], "//", "MatrixForm"}]}]}]], "Input",
 CellChangeTimes->{{3.950676842847129*^9, 3.950676889894199*^9}, {
  3.950677116714123*^9, 3.950677121428125*^9}, {3.950677206091642*^9, 
  3.950677213077318*^9}, {3.950677542870287*^9, 3.950677545094706*^9}, {
  3.95067809908618*^9, 3.950678114334466*^9}, {3.950678480869475*^9, 
  3.9506784814094763`*^9}, {3.950687973580548*^9, 3.950688003889441*^9}, {
  3.951802401754966*^9, 3.951802464110025*^9}, {3.951810255142641*^9, 
  3.951810268652952*^9}},
 CellLabel->"In[18]:=",ExpressionUUID->"36082a2a-478b-45d5-a771-917794351aa2"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", 
   TagBox[GridBox[{
      {
       RowBox[{
        RowBox[{"Cos", "[", 
         RowBox[{"2", " ", "\[Theta]"}], "]"}], " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"b", "[", "0", "]"}], "]"}]}]},
      {
       RowBox[{
        RowBox[{"Cos", "[", 
         RowBox[{"2", " ", "\[Theta]"}], "]"}], " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"b", "[", "1", "]"}], "]"}]}]},
      {
       RowBox[{
        RowBox[{"Cos", "[", 
         RowBox[{"2", " ", "\[Theta]"}], "]"}], " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"a", "[", "0", "]"}], "]"}]}]},
      {
       RowBox[{
        RowBox[{
         RowBox[{"Cos", "[", 
          RowBox[{"a", "[", "0", "]"}], "]"}], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"b", "[", "0", "]"}], "]"}]}], "+", 
        RowBox[{
         RowBox[{"Sin", "[", 
          RowBox[{"2", " ", "\[Theta]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"a", "[", "0", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"b", "[", "0", "]"}], "]"}]}]}]},
      {
       RowBox[{
        RowBox[{
         RowBox[{"Cos", "[", 
          RowBox[{"a", "[", "0", "]"}], "]"}], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"b", "[", "1", "]"}], "]"}]}], "+", 
        RowBox[{
         RowBox[{"Sin", "[", 
          RowBox[{"2", " ", "\[Theta]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"a", "[", "0", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"b", "[", "1", "]"}], "]"}]}]}]},
      {
       RowBox[{
        RowBox[{"Cos", "[", 
         RowBox[{"2", " ", "\[Theta]"}], "]"}], " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"a", "[", "1", "]"}], "]"}]}]},
      {
       RowBox[{
        RowBox[{
         RowBox[{"Cos", "[", 
          RowBox[{"a", "[", "1", "]"}], "]"}], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"b", "[", "0", "]"}], "]"}]}], "+", 
        RowBox[{
         RowBox[{"Sin", "[", 
          RowBox[{"2", " ", "\[Theta]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"a", "[", "1", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"b", "[", "0", "]"}], "]"}]}]}]},
      {
       RowBox[{
        RowBox[{
         RowBox[{"Cos", "[", 
          RowBox[{"a", "[", "1", "]"}], "]"}], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"b", "[", "1", "]"}], "]"}]}], "+", 
        RowBox[{
         RowBox[{"Sin", "[", 
          RowBox[{"2", " ", "\[Theta]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"a", "[", "1", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"b", "[", "1", "]"}], "]"}]}]}]}
     },
     GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    Column], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.951802427064888*^9, 3.95180246519267*^9, 
  3.951810525261797*^9, 3.951882338652861*^9, 3.951885881718818*^9, 
  3.951885913243937*^9, 3.951903765920424*^9, 3.951904156165009*^9, 
  3.951904302734009*^9, 3.951969145517093*^9, 3.951973612462559*^9, 
  3.95198591440591*^9, 3.9519905338925247`*^9, 3.952051414510346*^9, 
  3.952140797758893*^9, 3.953691388253493*^9, 3.953693221769681*^9, 
  3.953794729381586*^9, 3.953960333628278*^9, 3.954297467289612*^9, 
  3.9543018030931787`*^9, 3.954919610351406*^9, 3.954920068531494*^9, 
  3.954920769417156*^9},
 CellLabel->
  "Out[21]//MatrixForm=",ExpressionUUID->"761a3772-be44-4e4e-9b5a-\
abd298447e7a"]
}, Open  ]],

Cell["The behavior is correct!", "Text",
 CellChangeTimes->{{3.951972325700143*^9, 
  3.951972330867798*^9}},ExpressionUUID->"3d40848f-1b99-44fc-9f26-\
88525d0d6c65"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Bell expression and Bell operator", "Section",
 CellChangeTimes->{{3.950678033137331*^9, 3.950678050599631*^9}, {
  3.950679877159596*^9, 3.95067988279245*^9}, {3.9519859754296103`*^9, 
  3.951985979578242*^9}, {3.953868175090024*^9, 
  3.953868175466692*^9}},ExpressionUUID->"c049268a-e810-4816-a8ae-\
3af2f222e93e"],

Cell[CellGroupData[{

Cell["Background", "Subsection",
 CellChangeTimes->{{3.954920804924232*^9, 
  3.954920806628664*^9}},ExpressionUUID->"0c3b35a6-30f9-4b19-b6a9-\
28a5f5f60e90"],

Cell["\<\
Characterizing orthogonal faces means to characterize Bell expressions.\
\>", "Text",
 CellChangeTimes->{
  3.950678292708519*^9, {3.953691406155546*^9, 
   3.9536914201319942`*^9}},ExpressionUUID->"820abb7e-e243-4fba-91cb-\
9597aabde602"],

Cell["\<\
All possible Bell expressions for the {n=2, m=2, \\Delta=2} scenario can be \
parametrized by eight real coefficients:

BellExpression[A, B]  =  a[0] A[0] + a[1] A[1] + b[0] B[0] + b[1] B[1] + c[0, \
0] A[0] B[0] + c[1, 0] A[1] B[0] + c[0, 1] A[0] B[1] + c[1, 1] A[1] B[1];

Be careful: the a[i], b[i] are not the same that appears in the measurement \
operators!!
The Bell expression is related to the Bell operator by 

\\vec{\\beta}.\\vec {P} = < \\psi | S | \\psi >. 

Given a Bell expression and a given realization, we can construct a Bell \
operator. In this specific case the Bell operator (induced by such a Bell \
expression and the considered realization, in terms of projectors) is\
\>", "Text",
 CellChangeTimes->{{3.9506077134494267`*^9, 3.950607744591462*^9}, {
  3.950676296641258*^9, 3.9506763116567373`*^9}, {3.951904320223029*^9, 
  3.951904351691336*^9}, {3.9542521274721813`*^9, 
  3.95425213481044*^9}},ExpressionUUID->"dcf98ff1-e68c-47ee-ab66-\
895385e6abb2"],

Cell["\<\
(*Matrices*)
S = p[1] ZA + p[2] XA + p[3] ZB + p[4] XB + p[5] ZZ + p[6] XX + p[7] ZX + \
p[8] XZ;\
\>", "Text",
 CellChangeTimes->{{3.950607908363457*^9, 3.950607951096371*^9}, {
   3.951810336143048*^9, 3.951810345034547*^9}, 3.951972378279429*^9},
 CellLabel->"In[22]:=",ExpressionUUID->"8f74e670-70b4-41dd-acd3-318c44caee03"],

Cell["\<\
One can write the general Bell expression as a vector 

\[Beta] := {b[0], b[1], a[0], c[0, 0], c[0, 1], a[1], c[1, 0], c[1, 1]};\
\>", "Text",
 CellChangeTimes->{{3.950678217118488*^9, 3.950678253126317*^9}, {
   3.950931308934691*^9, 3.950931328282555*^9}, {3.950931378198992*^9, 
   3.950931382075411*^9}, {3.9519044516805162`*^9, 3.951904452669773*^9}, {
   3.951969181167805*^9, 3.951969182427105*^9}, {3.951972347735446*^9, 
   3.951972357225196*^9}, 
   3.954252153497652*^9},ExpressionUUID->"735a4a7d-6e5b-4d26-a963-\
ef30d6910462"]
}, Closed]],

Cell[CellGroupData[{

Cell["Conditions to restrict the Bell expression (no calculations)", \
"Subsection",
 CellChangeTimes->{{3.950607614764193*^9, 3.950607618570508*^9}, {
  3.950607659737459*^9, 3.950607666095888*^9}, {3.951882903798421*^9, 
  3.951882909512611*^9}, {3.95188617508596*^9, 3.951886178274081*^9}, {
  3.951905006434616*^9, 3.951905008515081*^9}, {3.951973644771699*^9, 
  3.9519736491512012`*^9}},ExpressionUUID->"8647fc6b-aa9f-407a-a33b-\
6c9da7311d3c"],

Cell["We define a measurement vector of operators \\vec {M} .", "Text",
 CellChangeTimes->{{3.950672939594322*^9, 3.950672954966762*^9}, {
  3.950680960021314*^9, 3.9506809609822683`*^9}, {3.950687668982671*^9, 
  3.950687674111867*^9}, {3.950931733275221*^9, 3.950931742517189*^9}, {
  3.9542518320601463`*^9, 
  3.954251832704438*^9}},ExpressionUUID->"e7c6e0d7-e6fb-49b7-9ab9-\
78318116cc4a"],

Cell["\<\
M := {B[0],  B[1], A[0], A[0].B[0], A[0].B[1], A[1], A[1].B[0], A[1].B[1]}

- |\\xi_i> is a vector of space orthogonal to |\\phi>
- \\vec{T}_i := <\\xi_i|\\vec{M}|\\phi>
- |\\phi> is an eigenstate of S with maximum eigenvalue iff \\vec{\\beta} \
\\cdot \\vec{T}_i = 0.\
\>", "Text",
 CellChangeTimes->{{3.950672764405796*^9, 3.950672851972137*^9}, {
   3.950672885743561*^9, 3.950672925663395*^9}, {3.950931746031896*^9, 
   3.95093180945524*^9}, {3.951811992692655*^9, 3.951812001031624*^9}, 
   3.952140816160289*^9, {3.954251657024996*^9, 3.954251700808756*^9}, {
   3.954251893749395*^9, 3.95425189503432*^9}, {3.954251936186474*^9, 
   3.95425193798944*^9}},ExpressionUUID->"bfc7984e-9313-4c15-8f37-\
8c686c38f223"],

Cell["\<\
To find conditions on p[i]s, we first need a basis of the orthogonal of \
\\phi[\\theta]:\
\>", "Text",
 CellChangeTimes->{{3.950607963277281*^9, 3.950608019722168*^9}, {
   3.950681081529912*^9, 3.950681099659005*^9}, 
   3.954251911558941*^9},ExpressionUUID->"d739b726-2549-4c95-972d-\
14fb395b8626"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"xi", "[", "1", "]"}], " ", "=", "  ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", 
      RowBox[{"Sin", "[", "\[Theta]", "]"}]}], ",", "0", ",", "0", ",", 
     RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"xi", "[", "2", "]"}], " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{"0", ",", "1", ",", "0", ",", "0"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"xi", "[", "3", "]"}], " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{"0", ",", " ", "0", ",", " ", "1", ",", " ", "0"}], "}"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.950608022325366*^9, 3.950608086079523*^9}, {
  3.950610054511478*^9, 3.950610059047907*^9}, {3.950687450607362*^9, 
  3.950687458757904*^9}},
 CellLabel->
  "In[265]:=",ExpressionUUID->"d16642fd-3dcb-4924-9140-e4676220a611"],

Cell["\<\
Recall that \\vec{P} = <\\psi|\\vec{M}|\\psi>, \\vec{\\beta} \\cdot \\vec{P} \
= <psi|\\vec{\\beta} \\cdot \\vec{M} |psi>, and S = \\vec{\\beta} \\cdot \
\\vec{M}.\
\>", "Text",
 CellChangeTimes->{{3.9506868784736958`*^9, 3.950686973898798*^9}, {
  3.950687027348006*^9, 3.950687077843557*^9}, {3.954251843961269*^9, 
  3.954251852302705*^9}},ExpressionUUID->"5ca00362-28a0-4a2d-b8fd-\
9f53b1cd5257"],

Cell["\<\
Then, we compute the vectors \\vec{T}_i for every \\xi_i and impose \
\\vec{\\beta}. \\vec{T}_i = 0. This condition comes from the fact that, if \
the behavior \\vec{P} that we want to characterize has to give a maximal \
quantum value (\\beta_Q, a Tsirelson bound), then the state \\phi(\\theta) \
must be an eigenstate of the Bell operator of maximum eigenvalue. We have \
then four more conditions on the parametrization of the Bell operator. The \
parameter space is then five-d!\
\>", "Text",
 CellChangeTimes->{{3.95060810086649*^9, 3.95060830634425*^9}, {
   3.950681113611753*^9, 3.950681179558985*^9}, {3.950685211985063*^9, 
   3.950685219228904*^9}, {3.9506852995719633`*^9, 3.9506853127754*^9}, {
   3.950686828781502*^9, 3.950686875250377*^9}, {3.951904776667175*^9, 
   3.951904790312232*^9}, 3.95369147350204*^9, {3.954251963780325*^9, 
   3.954251995221298*^9}, {3.954252072935601*^9, 
   3.9542520830238533`*^9}},ExpressionUUID->"91f2257a-2cab-48a7-b25d-\
f7dc28ba41e8"]
}, Closed]],

Cell[CellGroupData[{

Cell["The Nullifiers representation (just checks!)", "Subsection",
 CellChangeTimes->{{3.95067472345458*^9, 3.950674727387149*^9}, {
  3.950695377872795*^9, 3.950695382297661*^9}, {3.951886294181699*^9, 
  3.951886297367032*^9}, {3.9519725864677763`*^9, 
  3.951972606471148*^9}},ExpressionUUID->"eb67727b-3ac8-43b8-ae00-\
12dece277c9a"],

Cell["\<\
We started with 8 p[i] parameters. Then, we find 3 conditions given by the \
orthogonal states to phi[\\theta]. Then, knowing that phi[\\theta] must be an \
eigenvector of S with eigenstate 1, and that the other vectors which are \
orthogonal to phi[\\theta] must be annealed by S, we claim that the Bell \
operator must be of the form:

S = 1 + \\sum_{k=1}^5 p_k N_k,

where the N_ks form a basis of nullifiers of \\phi[\\theta]. \
\>", "Text",
 CellChangeTimes->{{3.951904948210829*^9, 
  3.9519049720315847`*^9}},ExpressionUUID->"fa2af2bc-c901-425c-be7f-\
1757e890814f"],

Cell["A basis of nullifiers for phi(\\theta) is given by", "Text",
 CellChangeTimes->{{3.950674944497241*^9, 
  3.950674958885737*^9}},ExpressionUUID->"552e86b3-5fb2-49c3-80f0-\
a476a125b516"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Nullifiers", "=", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"ZA", " ", "-", " ", "ZB"}], ",", 
     RowBox[{"II", "-", "ZZ"}], ",", 
     RowBox[{"XZ", "+", "ZX", "-", 
      RowBox[{
       FractionBox[
        RowBox[{"1", "-", 
         RowBox[{"Sin", "[", 
          RowBox[{"2", "\[Theta]"}], "]"}]}], 
        RowBox[{"Cos", "[", 
         RowBox[{"2", "\[Theta]"}], "]"}]], 
       RowBox[{"(", 
        RowBox[{"XA", "+", "XB"}], ")"}]}]}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"Sin", "[", 
          RowBox[{"2", "\[Theta]"}], "]"}]}], ")"}], 
       RowBox[{"(", 
        RowBox[{"XA", "-", "XB"}], ")"}]}], "-", 
      RowBox[{
       RowBox[{"Cos", "[", 
        RowBox[{"2", "\[Theta]"}], "]"}], 
       RowBox[{"(", 
        RowBox[{"XZ", "-", "ZX"}], ")"}]}]}], ",", 
     RowBox[{"II", "-", 
      RowBox[{
       RowBox[{"Sin", "[", 
        RowBox[{"2", "\[Theta]"}], "]"}], "XX"}], "-", 
      RowBox[{
       RowBox[{"Cos", "[", 
        RowBox[{"2", "\[Theta]"}], "]"}], "ZB"}]}]}], "\[IndentingNewLine]", 
    "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.950674734955544*^9, 3.950674757404364*^9}, {
  3.950674799589944*^9, 3.950674940822296*^9}, {3.950688459529097*^9, 
  3.950688465020447*^9}, {3.950688564280234*^9, 3.950688625940139*^9}, {
  3.950688782153347*^9, 3.950688784395789*^9}, {3.9506888175220222`*^9, 
  3.950688821136351*^9}},
 CellLabel->"In[22]:=",ExpressionUUID->"78e46aae-65e3-4e1a-8b03-878fa78203c4"],

Cell["We verify that we are dealing with nullifiers:", "Text",
 CellChangeTimes->{{3.951816457137521*^9, 
  3.9518164696854*^9}},ExpressionUUID->"f725d25b-9054-454f-8749-c35fbef6d77a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Nullifiers", "[", 
      RowBox[{"[", "k", "]"}], "]"}], ".", 
     RowBox[{"phi", "[", "\[Theta]", "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"k", ",", "1", ",", "5"}], "}"}]}], "]"}], "//", 
  "FullSimplify"}]], "Input",
 CellChangeTimes->{{3.951816471823838*^9, 3.951816529565228*^9}},
 CellLabel->"In[23]:=",ExpressionUUID->"ee982167-0814-49ea-9d4e-15acd8df6b31"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.951816506268979*^9, 3.9518165300063267`*^9}, 
   3.951882920291762*^9, 3.952140851930577*^9, 3.9539603336415977`*^9, 
   3.954297467300305*^9, 3.954919610362651*^9, 3.9549207880259857`*^9},
 CellLabel->"Out[23]=",ExpressionUUID->"058f87d9-40d1-421c-9030-cafca98c8a26"]
}, Open  ]],

Cell["\<\
It works! Achtung: they are not the same as in the cited paper! But they work!\
\>", "Text",
 CellChangeTimes->{{3.951816580488791*^9, 3.951816606880455*^9}, {
  3.9521408405452347`*^9, 
  3.9521408441794147`*^9}},ExpressionUUID->"e8961936-4b87-4355-a569-\
5208e17c655c"],

Cell["\<\
Our analysis shows that conditions \\beta.\\vec{T}_i = 0 allows to write the \
Bell operator as\
\>", "Text",
 CellChangeTimes->{{3.9506749702143097`*^9, 3.950675018282817*^9}, {
  3.951904892787448*^9, 
  3.951904895004328*^9}},ExpressionUUID->"aecf706c-5f0d-4dbd-99d6-\
fb73b84cd211"],

Cell[BoxData[
 RowBox[{"Sred", ":=", 
  RowBox[{"II", " ", "+", " ", 
   RowBox[{"Sum", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"p", "[", "k", "]"}], 
      RowBox[{"Nullifiers", "[", 
       RowBox[{"[", "k", "]"}], "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"k", ",", " ", "1", ",", "5"}], "}"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.950675020672739*^9, 3.950675075017143*^9}, {
  3.9506886316716347`*^9, 3.950688635746921*^9}, {3.950688885175397*^9, 
  3.950688887632989*^9}},
 CellLabel->"In[24]:=",ExpressionUUID->"a477ce92-ac22-4298-a288-8fc007454204"],

Cell["\<\
Note that the p[i] are different from the ones of the previous expansion of \
the Bell operator! To verify, we can determine\
\>", "Text",
 CellChangeTimes->{{3.9506790245003757`*^9, 3.9506790377569942`*^9}, {
  3.950695492333661*^9, 3.9506955081926622`*^9}, {3.950695584707828*^9, 
  3.950695596072259*^9}, {3.951816665847764*^9, 
  3.9518166666307364`*^9}},ExpressionUUID->"635becf1-7147-49c3-8288-\
00c230216ee0"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"ConjugateTranspose", "[", 
    RowBox[{"phi", "[", "\[Theta]", "]"}], "]"}], ".", "Sred", ".", 
   RowBox[{"phi", "[", "\[Theta]", "]"}]}], "//", "FullSimplify"}]], "Input",
 CellChangeTimes->{{3.950679039177325*^9, 3.950679068651554*^9}, {
  3.9506791515834827`*^9, 3.950679152307423*^9}},
 CellLabel->"In[25]:=",ExpressionUUID->"cf063eb3-4a65-40d6-a94d-d0e4510c7870"],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{{3.950679058904356*^9, 3.950679064699366*^9}, 
   3.9506791541459713`*^9, 3.9506886498731337`*^9, 3.950688796070595*^9, {
   3.950688891480742*^9, 3.950688894219001*^9}, 3.950696336845695*^9, 
   3.951817076307623*^9, 3.951882950974103*^9, 3.952140857641253*^9, 
   3.953960333653509*^9, 3.954297467304436*^9, 3.954919610368978*^9, 
   3.954920088270685*^9, 3.954920793180066*^9},
 CellLabel->"Out[25]=",ExpressionUUID->"49177f7a-9691-4684-95d9-8daa8ee52ece"]
}, Open  ]],

Cell["As it must be!", "Text",
 CellChangeTimes->{{3.950679261898429*^9, 3.950679280787363*^9}, {
  3.950688911096958*^9, 
  3.9506889194013567`*^9}},ExpressionUUID->"eddc955e-08a7-4815-8d57-\
a70f01d985a1"]
}, Closed]],

Cell[CellGroupData[{

Cell["The reduced Bell expression  ", "Subsection",
 CellChangeTimes->{{3.951817087073308*^9, 3.95181712007296*^9}, {
   3.951882258027074*^9, 3.951882261114997*^9}, {3.951886343222212*^9, 
   3.951886353104871*^9}, {3.951886812888682*^9, 3.951886814562564*^9}, 
   3.951887451390563*^9, {3.951905337073245*^9, 
   3.951905366981267*^9}},ExpressionUUID->"fe19328c-215b-4985-87cd-\
57f5173c7414"],

Cell["\<\
We now want to write the Bell expression related to the reduced Bell \
operator. We start by expanding Sred, thought as a formal polynomial \
expression\
\>", "Text",
 CellChangeTimes->{{3.950695388408586*^9, 3.950695390659975*^9}, {
  3.950695480917185*^9, 3.950695488951536*^9}, {3.9506955997950683`*^9, 
  3.950695618896802*^9}, {3.950695745573682*^9, 3.950695753645352*^9}, {
  3.95069639828827*^9, 3.950696409770029*^9}, {3.951905074489298*^9, 
  3.9519050751573343`*^9}, {3.9519063978887*^9, 
  3.951906442752261*^9}},ExpressionUUID->"a56f4cda-9def-4d76-87ec-\
d5ee7c34268d"],

Cell[BoxData[
 RowBox[{
  RowBox[{"NullifiersFormal", "=", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"ZAA", " ", "-", " ", "ZBB"}], ",", 
     RowBox[{"III", "-", 
      RowBox[{"ZAA", " ", "ZBB"}]}], ",", 
     RowBox[{
      RowBox[{"XAA", " ", "ZBB"}], "+", 
      RowBox[{"ZAA", " ", "XBB"}], "-", 
      RowBox[{
       FractionBox[
        RowBox[{"1", "-", 
         RowBox[{"Sin", "[", 
          RowBox[{"2", "\[Theta]"}], "]"}]}], 
        RowBox[{"Cos", "[", 
         RowBox[{"2", "\[Theta]"}], "]"}]], 
       RowBox[{"(", 
        RowBox[{"XAA", "+", "XBB"}], ")"}]}]}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"Sin", "[", 
          RowBox[{"2", "\[Theta]"}], "]"}]}], ")"}], 
       RowBox[{"(", 
        RowBox[{"XAA", "-", "XBB"}], ")"}]}], "-", 
      RowBox[{
       RowBox[{"Cos", "[", 
        RowBox[{"2", "\[Theta]"}], "]"}], 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"XAA", " ", "ZBB"}], "-", 
         RowBox[{"ZAA", " ", "XBB"}]}], ")"}]}]}], ",", 
     RowBox[{"III", "-", 
      RowBox[{
       RowBox[{"Sin", "[", 
        RowBox[{"2", "\[Theta]"}], "]"}], "XAA", " ", "XBB"}], "-", 
      RowBox[{
       RowBox[{"Cos", "[", 
        RowBox[{"2", "\[Theta]"}], "]"}], "ZBB"}]}]}], "\[IndentingNewLine]", 
    "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.950695757764969*^9, 3.950695758556205*^9}, {
  3.950696418820399*^9, 3.950696535455888*^9}},
 CellLabel->"In[26]:=",ExpressionUUID->"ece41761-de8a-4398-86ac-de6f67195467"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Formal", " ", "indeterminates"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"SredFormal", ":=", 
   RowBox[{"III", " ", "+", " ", 
    RowBox[{"Sum", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"p", "[", "k", "]"}], 
       RowBox[{"NullifiersFormal", "[", 
        RowBox[{"[", "k", "]"}], "]"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"k", ",", " ", "1", ",", "5"}], "}"}]}], "]"}]}]}]}]], "Input",\

 CellChangeTimes->{{3.9506966397803593`*^9, 3.950696651436246*^9}, {
  3.951906172541289*^9, 3.951906184206643*^9}},
 CellLabel->"In[27]:=",ExpressionUUID->"b319af5a-e241-4b67-b01b-ade6284a0b76"],

Cell["\<\
Following Victor, let us write projectors in terms of measurement operators:\
\>", "Text",
 CellChangeTimes->{{3.9518195871658363`*^9, 3.951819594141364*^9}, {
  3.951819625101136*^9, 3.951819635819936*^9}, {3.951819902163087*^9, 
  3.951819914494468*^9}, {3.951883205567709*^9, 3.951883210186329*^9}, {
  3.951905597113575*^9, 
  3.951905598355465*^9}},ExpressionUUID->"3640dd44-5dae-4464-b9f0-\
599ba5e69d2a"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{"A", ",", "B"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"projectors", " ", "=", " ", 
  RowBox[{
   RowBox[{
    RowBox[{"Solve", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"A", "[", "0", "]"}], "==", 
         RowBox[{
          RowBox[{
           RowBox[{"Cos", "[", 
            RowBox[{"a", "[", "0", "]"}], "]"}], "ZAA"}], "+", 
          RowBox[{
           RowBox[{"Sin", "[", 
            RowBox[{"a", "[", "0", "]"}], "]"}], "XAA"}]}]}], ",", 
        RowBox[{
         RowBox[{"A", "[", "1", "]"}], "==", 
         RowBox[{
          RowBox[{
           RowBox[{"Cos", "[", 
            RowBox[{"a", "[", "1", "]"}], "]"}], "ZAA"}], "+", 
          RowBox[{
           RowBox[{"Sin", "[", 
            RowBox[{"a", "[", "1", "]"}], "]"}], "XAA"}]}]}], ",", 
        RowBox[{
         RowBox[{"B", "[", "0", "]"}], "==", 
         RowBox[{
          RowBox[{
           RowBox[{"Cos", "[", 
            RowBox[{"b", "[", "0", "]"}], "]"}], "ZBB"}], "+", 
          RowBox[{
           RowBox[{"Sin", "[", 
            RowBox[{"b", "[", "0", "]"}], "]"}], "XBB"}]}]}], ",", 
        RowBox[{
         RowBox[{"B", "[", "1", "]"}], "==", 
         RowBox[{
          RowBox[{
           RowBox[{"Cos", "[", 
            RowBox[{"b", "[", "1", "]"}], "]"}], "ZBB"}], "+", 
          RowBox[{
           RowBox[{"Sin", "[", 
            RowBox[{"b", "[", "1", "]"}], "]"}], "XBB"}]}]}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"XAA", ",", "XBB", ",", "ZAA", ",", "ZBB"}], "}"}]}], "]"}], 
    "[", 
    RowBox[{"[", "1", "]"}], "]"}], "//", "FullSimplify"}]}]}], "Input",
 CellChangeTimes->{{3.9518197235625553`*^9, 3.951819885893042*^9}},
 CellLabel->"In[28]:=",ExpressionUUID->"6c718416-c4db-4e94-9028-83ba715d392d"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"XAA", "\[Rule]", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"-", 
         RowBox[{"A", "[", "1", "]"}]}], " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"a", "[", "0", "]"}], "]"}]}], "+", 
       RowBox[{
        RowBox[{"A", "[", "0", "]"}], " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"a", "[", "1", "]"}], "]"}]}]}], ")"}], " ", 
     RowBox[{"Csc", "[", 
      RowBox[{
       RowBox[{"a", "[", "0", "]"}], "-", 
       RowBox[{"a", "[", "1", "]"}]}], "]"}]}]}], ",", 
   RowBox[{"XBB", "\[Rule]", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"-", 
         RowBox[{"B", "[", "1", "]"}]}], " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"b", "[", "0", "]"}], "]"}]}], "+", 
       RowBox[{
        RowBox[{"B", "[", "0", "]"}], " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"b", "[", "1", "]"}], "]"}]}]}], ")"}], " ", 
     RowBox[{"Csc", "[", 
      RowBox[{
       RowBox[{"b", "[", "0", "]"}], "-", 
       RowBox[{"b", "[", "1", "]"}]}], "]"}]}]}], ",", 
   RowBox[{"ZAA", "\[Rule]", 
    RowBox[{
     RowBox[{"Csc", "[", 
      RowBox[{
       RowBox[{"a", "[", "0", "]"}], "-", 
       RowBox[{"a", "[", "1", "]"}]}], "]"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"A", "[", "1", "]"}], " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"a", "[", "0", "]"}], "]"}]}], "-", 
       RowBox[{
        RowBox[{"A", "[", "0", "]"}], " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"a", "[", "1", "]"}], "]"}]}]}], ")"}]}]}], ",", 
   RowBox[{"ZBB", "\[Rule]", 
    RowBox[{
     RowBox[{"Csc", "[", 
      RowBox[{
       RowBox[{"b", "[", "0", "]"}], "-", 
       RowBox[{"b", "[", "1", "]"}]}], "]"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"B", "[", "1", "]"}], " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"b", "[", "0", "]"}], "]"}]}], "-", 
       RowBox[{
        RowBox[{"B", "[", "0", "]"}], " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"b", "[", "1", "]"}], "]"}]}]}], ")"}]}]}]}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.9518198726746283`*^9, 3.951819888589963*^9}, 
   3.951883187066358*^9, 3.951883218441257*^9, 3.951905603459041*^9, 
   3.951969263451391*^9, 3.9519737707196903`*^9, 3.951985997649564*^9, 
   3.951990545633324*^9, 3.952051435510608*^9, 3.952140870540884*^9, 
   3.953691497141939*^9, 3.953693350323071*^9, 3.953794742138946*^9, 
   3.953960333776277*^9, 3.954297467427126*^9, 3.9543018220998707`*^9, 
   3.9549196103873177`*^9, 3.9549201003500547`*^9, 3.954920817872985*^9},
 CellLabel->"Out[29]=",ExpressionUUID->"89f0b19a-c01b-4bb8-b082-245ddfac3d70"]
}, Open  ]],

Cell["\<\
We substitute everything in the new expression of the Bell operator, \
SredFormal (which is parametrized in terms of the 5 p[i]s):\
\>", "Text",
 CellChangeTimes->{{3.9518200374750023`*^9, 3.95182006390795*^9}, {
  3.951883358941059*^9, 
  3.951883375079019*^9}},ExpressionUUID->"31db25f1-5261-468a-b193-\
51670c4b4c52"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Bellexpr", "=", 
   RowBox[{
    RowBox[{"SredFormal", "/.", "projectors"}], "//", "FullSimplify"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.951820066028148*^9, 3.951820101859774*^9}, {
   3.951820535531998*^9, 3.951820539988876*^9}, 3.951905639831545*^9, 
   3.951905762306226*^9, {3.951906753068798*^9, 3.951906753356529*^9}, {
   3.951973794727071*^9, 3.951973795257079*^9}, 3.951990465758623*^9},
 CellLabel->"In[30]:=",ExpressionUUID->"29f9dbdc-e378-47bd-b65d-45dddc4d6e16"],

Cell[BoxData[
 RowBox[{
  RowBox[{"coeffList", "=", 
   RowBox[{
    RowBox[{"Flatten", "[", 
     RowBox[{"CoefficientList", "[", 
      RowBox[{"Bellexpr", ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"A", "[", "0", "]"}], ",", 
         RowBox[{"A", "[", "1", "]"}], ",", 
         RowBox[{"B", "[", "0", "]"}], ",", 
         RowBox[{"B", "[", "1", "]"}]}], "}"}]}], "]"}], "]"}], "//", 
    "FullSimplify"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.951883470466158*^9, 3.9518834748910723`*^9}, {
   3.951906490185153*^9, 3.951906493947014*^9}, {3.9519068203216553`*^9, 
   3.951906824273491*^9}, {3.9519739592733593`*^9, 3.951973960413228*^9}, 
   3.951990474581732*^9},
 CellLabel->"In[31]:=",ExpressionUUID->"19d42016-231f-4a64-bfeb-35ceeb225578"],

Cell["\<\
The ordering used in the coefficientList function is:  
1   1, 
2   B[1], 
3   B[0], 
4   B[0]B[1], 
5   A[1], 
6   A[1]B[1],
7    A[1] B[0], 
8    ???, 
9    A[0], 
10  A[0]B[1], 
11  A[0]B[0], 
12  ???, 
13   A[0] A[1], 
??, ??, ??.\
\>", "Text",
 CellChangeTimes->{{3.951906964296166*^9, 3.951907048659818*^9}, {
   3.951972704541033*^9, 3.9519727197209997`*^9}, {3.951987087924102*^9, 
   3.951987230639784*^9}, {3.951987320300209*^9, 3.95198739900532*^9}, 
   3.95199072871327*^9},ExpressionUUID->"8972f220-ed72-4751-8d85-\
41ece0beae74"],

Cell["\<\
Then, putting the coefficients in the right ordering (B0, B1, A0, A0B0, A0B1, \
A1, A1B0, A1B1):\
\>", "Text",
 CellChangeTimes->{{3.951883494994185*^9, 3.951883502943951*^9}, {
  3.951906544168767*^9, 3.951906565745367*^9}, {3.951906623151785*^9, 
  3.951906635275588*^9}, {3.9519727673276253`*^9, 
  3.951972798384698*^9}},ExpressionUUID->"a862ac80-ebe7-48e3-b588-\
ae62762f9787"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Beta]", ":=", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"coeffList", "[", 
       RowBox[{"[", "3", "]"}], "]"}], ",", 
      RowBox[{"coeffList", "[", 
       RowBox[{"[", "2", "]"}], "]"}], ",", 
      RowBox[{"coeffList", "[", 
       RowBox[{"[", "9", "]"}], "]"}], ",", 
      RowBox[{"coeffList", "[", 
       RowBox[{"[", "11", "]"}], "]"}], ",", 
      RowBox[{"coeffList", "[", 
       RowBox[{"[", "10", "]"}], "]"}], ",", 
      RowBox[{"coeffList", "[", 
       RowBox[{"[", "5", "]"}], "]"}], ",", 
      RowBox[{"coeffList", "[", 
       RowBox[{"[", "7", "]"}], "]"}], ",", 
      RowBox[{"coeffList", "[", 
       RowBox[{"[", "6", "]"}], "]"}]}], "}"}], "//", "FullSimplify"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"\[Beta]", "//", "MatrixForm"}]}], "Input",
 CellChangeTimes->{{3.95190663895512*^9, 3.951906643114286*^9}, {
  3.951906929303502*^9, 3.951906941296687*^9}, {3.951907091333747*^9, 
  3.951907167414993*^9}, {3.95190720050482*^9, 3.951907248368931*^9}, {
  3.951969477968536*^9, 3.951969480375545*^9}, {3.951987301202594*^9, 
  3.951987309117272*^9}, {3.951987412052738*^9, 3.9519874488228292`*^9}, {
  3.952140982351632*^9, 3.952140982966255*^9}},
 CellLabel->"In[32]:=",ExpressionUUID->"9ba865e9-333d-49e6-a4de-6f760285435f"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", 
   TagBox[GridBox[{
      {
       RowBox[{
        RowBox[{"Csc", "[", 
         RowBox[{
          RowBox[{"b", "[", "0", "]"}], "-", 
          RowBox[{"b", "[", "1", "]"}]}], "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"p", "[", "1", "]"}], "+", 
             RowBox[{
              RowBox[{"Cos", "[", 
               RowBox[{"2", " ", "\[Theta]"}], "]"}], " ", 
              RowBox[{"p", "[", "5", "]"}]}]}], ")"}], " ", 
           RowBox[{"Sin", "[", 
            RowBox[{"b", "[", "1", "]"}], "]"}]}], "-", 
          RowBox[{
           RowBox[{"Cos", "[", 
            RowBox[{"b", "[", "1", "]"}], "]"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"p", "[", "4", "]"}], " ", 
              RowBox[{"(", 
               RowBox[{"1", "+", 
                RowBox[{"Sin", "[", 
                 RowBox[{"2", " ", "\[Theta]"}], "]"}]}], ")"}]}], "+", 
             RowBox[{
              RowBox[{"p", "[", "3", "]"}], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"Sec", "[", 
                 RowBox[{"2", " ", "\[Theta]"}], "]"}], "-", 
                RowBox[{"Tan", "[", 
                 RowBox[{"2", " ", "\[Theta]"}], "]"}]}], ")"}]}]}], 
            ")"}]}]}], ")"}]}]},
      {
       RowBox[{
        RowBox[{"Csc", "[", 
         RowBox[{
          RowBox[{"b", "[", "0", "]"}], "-", 
          RowBox[{"b", "[", "1", "]"}]}], "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"p", "[", "1", "]"}], "+", 
               RowBox[{
                RowBox[{"Cos", "[", 
                 RowBox[{"2", " ", "\[Theta]"}], "]"}], " ", 
                RowBox[{"p", "[", "5", "]"}]}]}], ")"}], " ", 
             RowBox[{"Sin", "[", 
              RowBox[{"b", "[", "0", "]"}], "]"}]}], ")"}]}], "+", 
          RowBox[{
           RowBox[{"Cos", "[", 
            RowBox[{"b", "[", "0", "]"}], "]"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"p", "[", "4", "]"}], " ", 
              RowBox[{"(", 
               RowBox[{"1", "+", 
                RowBox[{"Sin", "[", 
                 RowBox[{"2", " ", "\[Theta]"}], "]"}]}], ")"}]}], "+", 
             RowBox[{
              RowBox[{"p", "[", "3", "]"}], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"Sec", "[", 
                 RowBox[{"2", " ", "\[Theta]"}], "]"}], "-", 
                RowBox[{"Tan", "[", 
                 RowBox[{"2", " ", "\[Theta]"}], "]"}]}], ")"}]}]}], 
            ")"}]}]}], ")"}]}]},
      {
       RowBox[{
        RowBox[{"Csc", "[", 
         RowBox[{
          RowBox[{"a", "[", "0", "]"}], "-", 
          RowBox[{"a", "[", "1", "]"}]}], "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", 
            RowBox[{"p", "[", "1", "]"}]}], " ", 
           RowBox[{"Sin", "[", 
            RowBox[{"a", "[", "1", "]"}], "]"}]}], "+", 
          RowBox[{
           RowBox[{"Cos", "[", 
            RowBox[{"a", "[", "1", "]"}], "]"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"p", "[", "4", "]"}], " ", 
              RowBox[{"(", 
               RowBox[{"1", "+", 
                RowBox[{"Sin", "[", 
                 RowBox[{"2", " ", "\[Theta]"}], "]"}]}], ")"}]}], "+", 
             RowBox[{
              RowBox[{"p", "[", "3", "]"}], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", 
                 RowBox[{"Sec", "[", 
                  RowBox[{"2", " ", "\[Theta]"}], "]"}]}], "+", 
                RowBox[{"Tan", "[", 
                 RowBox[{"2", " ", "\[Theta]"}], "]"}]}], ")"}]}]}], 
            ")"}]}]}], ")"}]}]},
      {
       RowBox[{
        RowBox[{"-", 
         RowBox[{"Csc", "[", 
          RowBox[{
           RowBox[{"a", "[", "0", "]"}], "-", 
           RowBox[{"a", "[", "1", "]"}]}], "]"}]}], " ", 
        RowBox[{"Csc", "[", 
         RowBox[{
          RowBox[{"b", "[", "0", "]"}], "-", 
          RowBox[{"b", "[", "1", "]"}]}], "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"Cos", "[", 
            RowBox[{"2", " ", "\[Theta]"}], "]"}], " ", 
           RowBox[{"p", "[", "4", "]"}], " ", 
           RowBox[{"Sin", "[", 
            RowBox[{
             RowBox[{"a", "[", "1", "]"}], "-", 
             RowBox[{"b", "[", "1", "]"}]}], "]"}]}], "+", 
          RowBox[{
           RowBox[{"Sin", "[", 
            RowBox[{"a", "[", "1", "]"}], "]"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"Cos", "[", 
               RowBox[{"b", "[", "1", "]"}], "]"}], " ", 
              RowBox[{"p", "[", "3", "]"}]}], "+", 
             RowBox[{
              RowBox[{"p", "[", "2", "]"}], " ", 
              RowBox[{"Sin", "[", 
               RowBox[{"b", "[", "1", "]"}], "]"}]}]}], ")"}]}], "+", 
          RowBox[{
           RowBox[{"Cos", "[", 
            RowBox[{"a", "[", "1", "]"}], "]"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"Cos", "[", 
               RowBox[{"b", "[", "1", "]"}], "]"}], " ", 
              RowBox[{"p", "[", "5", "]"}], " ", 
              RowBox[{"Sin", "[", 
               RowBox[{"2", " ", "\[Theta]"}], "]"}]}], "+", 
             RowBox[{
              RowBox[{"p", "[", "3", "]"}], " ", 
              RowBox[{"Sin", "[", 
               RowBox[{"b", "[", "1", "]"}], "]"}]}]}], ")"}]}]}], ")"}]}]},
      {
       RowBox[{
        RowBox[{"Csc", "[", 
         RowBox[{
          RowBox[{"a", "[", "0", "]"}], "-", 
          RowBox[{"a", "[", "1", "]"}]}], "]"}], " ", 
        RowBox[{"Csc", "[", 
         RowBox[{
          RowBox[{"b", "[", "0", "]"}], "-", 
          RowBox[{"b", "[", "1", "]"}]}], "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"Cos", "[", 
            RowBox[{"2", " ", "\[Theta]"}], "]"}], " ", 
           RowBox[{"p", "[", "4", "]"}], " ", 
           RowBox[{"Sin", "[", 
            RowBox[{
             RowBox[{"a", "[", "1", "]"}], "-", 
             RowBox[{"b", "[", "0", "]"}]}], "]"}]}], "+", 
          RowBox[{
           RowBox[{"Sin", "[", 
            RowBox[{"a", "[", "1", "]"}], "]"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"Cos", "[", 
               RowBox[{"b", "[", "0", "]"}], "]"}], " ", 
              RowBox[{"p", "[", "3", "]"}]}], "+", 
             RowBox[{
              RowBox[{"p", "[", "2", "]"}], " ", 
              RowBox[{"Sin", "[", 
               RowBox[{"b", "[", "0", "]"}], "]"}]}]}], ")"}]}], "+", 
          RowBox[{
           RowBox[{"Cos", "[", 
            RowBox[{"a", "[", "1", "]"}], "]"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"Cos", "[", 
               RowBox[{"b", "[", "0", "]"}], "]"}], " ", 
              RowBox[{"p", "[", "5", "]"}], " ", 
              RowBox[{"Sin", "[", 
               RowBox[{"2", " ", "\[Theta]"}], "]"}]}], "+", 
             RowBox[{
              RowBox[{"p", "[", "3", "]"}], " ", 
              RowBox[{"Sin", "[", 
               RowBox[{"b", "[", "0", "]"}], "]"}]}]}], ")"}]}]}], ")"}]}]},
      {
       RowBox[{
        RowBox[{"Csc", "[", 
         RowBox[{
          RowBox[{"a", "[", "0", "]"}], "-", 
          RowBox[{"a", "[", "1", "]"}]}], "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"p", "[", "1", "]"}], " ", 
           RowBox[{"Sin", "[", 
            RowBox[{"a", "[", "0", "]"}], "]"}]}], "-", 
          RowBox[{
           RowBox[{"Cos", "[", 
            RowBox[{"a", "[", "0", "]"}], "]"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"p", "[", "4", "]"}], " ", 
              RowBox[{"(", 
               RowBox[{"1", "+", 
                RowBox[{"Sin", "[", 
                 RowBox[{"2", " ", "\[Theta]"}], "]"}]}], ")"}]}], "+", 
             RowBox[{
              RowBox[{"p", "[", "3", "]"}], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", 
                 RowBox[{"Sec", "[", 
                  RowBox[{"2", " ", "\[Theta]"}], "]"}]}], "+", 
                RowBox[{"Tan", "[", 
                 RowBox[{"2", " ", "\[Theta]"}], "]"}]}], ")"}]}]}], 
            ")"}]}]}], ")"}]}]},
      {
       RowBox[{
        RowBox[{"Csc", "[", 
         RowBox[{
          RowBox[{"a", "[", "0", "]"}], "-", 
          RowBox[{"a", "[", "1", "]"}]}], "]"}], " ", 
        RowBox[{"Csc", "[", 
         RowBox[{
          RowBox[{"b", "[", "0", "]"}], "-", 
          RowBox[{"b", "[", "1", "]"}]}], "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"Cos", "[", 
            RowBox[{"2", " ", "\[Theta]"}], "]"}], " ", 
           RowBox[{"p", "[", "4", "]"}], " ", 
           RowBox[{"Sin", "[", 
            RowBox[{
             RowBox[{"a", "[", "0", "]"}], "-", 
             RowBox[{"b", "[", "1", "]"}]}], "]"}]}], "+", 
          RowBox[{
           RowBox[{"Sin", "[", 
            RowBox[{"a", "[", "0", "]"}], "]"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"Cos", "[", 
               RowBox[{"b", "[", "1", "]"}], "]"}], " ", 
              RowBox[{"p", "[", "3", "]"}]}], "+", 
             RowBox[{
              RowBox[{"p", "[", "2", "]"}], " ", 
              RowBox[{"Sin", "[", 
               RowBox[{"b", "[", "1", "]"}], "]"}]}]}], ")"}]}], "+", 
          RowBox[{
           RowBox[{"Cos", "[", 
            RowBox[{"a", "[", "0", "]"}], "]"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"Cos", "[", 
               RowBox[{"b", "[", "1", "]"}], "]"}], " ", 
              RowBox[{"p", "[", "5", "]"}], " ", 
              RowBox[{"Sin", "[", 
               RowBox[{"2", " ", "\[Theta]"}], "]"}]}], "+", 
             RowBox[{
              RowBox[{"p", "[", "3", "]"}], " ", 
              RowBox[{"Sin", "[", 
               RowBox[{"b", "[", "1", "]"}], "]"}]}]}], ")"}]}]}], ")"}]}]},
      {
       RowBox[{
        RowBox[{"-", 
         RowBox[{"Csc", "[", 
          RowBox[{
           RowBox[{"a", "[", "0", "]"}], "-", 
           RowBox[{"a", "[", "1", "]"}]}], "]"}]}], " ", 
        RowBox[{"Csc", "[", 
         RowBox[{
          RowBox[{"b", "[", "0", "]"}], "-", 
          RowBox[{"b", "[", "1", "]"}]}], "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"Cos", "[", 
            RowBox[{"2", " ", "\[Theta]"}], "]"}], " ", 
           RowBox[{"p", "[", "4", "]"}], " ", 
           RowBox[{"Sin", "[", 
            RowBox[{
             RowBox[{"a", "[", "0", "]"}], "-", 
             RowBox[{"b", "[", "0", "]"}]}], "]"}]}], "+", 
          RowBox[{
           RowBox[{"Sin", "[", 
            RowBox[{"a", "[", "0", "]"}], "]"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"Cos", "[", 
               RowBox[{"b", "[", "0", "]"}], "]"}], " ", 
              RowBox[{"p", "[", "3", "]"}]}], "+", 
             RowBox[{
              RowBox[{"p", "[", "2", "]"}], " ", 
              RowBox[{"Sin", "[", 
               RowBox[{"b", "[", "0", "]"}], "]"}]}]}], ")"}]}], "+", 
          RowBox[{
           RowBox[{"Cos", "[", 
            RowBox[{"a", "[", "0", "]"}], "]"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"Cos", "[", 
               RowBox[{"b", "[", "0", "]"}], "]"}], " ", 
              RowBox[{"p", "[", "5", "]"}], " ", 
              RowBox[{"Sin", "[", 
               RowBox[{"2", " ", "\[Theta]"}], "]"}]}], "+", 
             RowBox[{
              RowBox[{"p", "[", "3", "]"}], " ", 
              RowBox[{"Sin", "[", 
               RowBox[{"b", "[", "0", "]"}], "]"}]}]}], ")"}]}]}], ")"}]}]}
     },
     GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    Column], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.951907252908236*^9, 3.951907297344228*^9, 3.951969483798004*^9, 
   3.951974047711059*^9, 3.951987464024884*^9, 3.951990891172826*^9, 
   3.952051442853582*^9, {3.952051541485421*^9, 3.952051552911852*^9}, {
   3.952140976304124*^9, 3.952140987793028*^9}, 3.953691588106498*^9, 
   3.95369344214298*^9, 3.953794828162239*^9, 3.953960413219177*^9, 
   3.954297542265527*^9, {3.954301909098922*^9, 3.954301910909997*^9}, 
   3.95491961722164*^9, 3.9549201974722757`*^9, 3.954920903856141*^9},
 CellLabel->
  "Out[33]//MatrixForm=",ExpressionUUID->"7b329478-6184-46cd-b437-\
ccb230a33294"]
}, Open  ]],

Cell["\<\
From the fact that the general Bell expression does not consider the identity \
operator, we get the following linear constraint (coefficient of the identity \
operator in the expansion of the Bell operator in terms of measurement \
operators):\
\>", "Text",
 CellChangeTimes->{{3.951887255192447*^9, 3.951887303574416*^9}, {
  3.9519065747137547`*^9, 3.951906592716188*^9}, {3.9519694953527822`*^9, 
  3.951969504540082*^9}, {3.951972845803672*^9, 
  3.9519729528543873`*^9}},ExpressionUUID->"0b0084f4-5c03-4be6-9192-\
420e61a39f17"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"coeffList", "[", 
   RowBox[{"[", "1", "]"}], "]"}], "==", "0"}]], "Input",
 CellChangeTimes->{{3.951990843827093*^9, 3.951990853282165*^9}},
 CellLabel->"In[34]:=",ExpressionUUID->"4bbe5081-360c-4a4c-9560-ececbbb547ce"],

Cell[BoxData[
 RowBox[{
  RowBox[{"III", " ", 
   RowBox[{"(", 
    RowBox[{"1", "+", 
     RowBox[{"p", "[", "2", "]"}], "+", 
     RowBox[{"p", "[", "5", "]"}]}], ")"}]}], "\[Equal]", "0"}]], "Output",
 CellChangeTimes->{3.951990848529872*^9, 3.951990892920969*^9, 
  3.952051556271565*^9, 3.9521409917411*^9, 3.953691595323118*^9, 
  3.953693444674322*^9, 3.953794833518769*^9, 3.9539604132220707`*^9, 
  3.954297542278219*^9, 3.954301915584411*^9, 3.954919617224205*^9, 
  3.954920200676343*^9, 3.954920907766766*^9},
 CellLabel->"Out[34]=",ExpressionUUID->"c47e9987-7357-4ec6-beeb-101fa21b9ecf"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Additional linear constraint", "Subsection",
 CellChangeTimes->{{3.951818441705763*^9, 3.9518184468113194`*^9}, {
  3.951969544273674*^9, 3.95196954741634*^9}, {3.951990910896837*^9, 
  3.95199091330707*^9}},ExpressionUUID->"e4d1b804-7729-40a7-a932-\
75cff0722664"],

Cell["\<\
Since we want that the realization of interest verify 1 = \\beta.P = \
<\\phi|S|\\phi>, we have an additional linear constraint! The constraint reads\
\>", "Text",
 CellChangeTimes->{{3.951883597618692*^9, 3.951883679645287*^9}, {
   3.951883855878127*^9, 3.951883893421826*^9}, {3.95190661901453*^9, 
   3.951906619709087*^9}, {3.951972194894396*^9, 3.951972237738898*^9}, 
   3.952141006875455*^9},ExpressionUUID->"2921443a-1b4d-49aa-89dc-\
5f71b7ca96d3"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"1", " ", "==", " ", 
   RowBox[{
    RowBox[{"Transpose", "[", "\[Beta]", "]"}], ".", 
    RowBox[{"P", "[", "\[Theta]", "]"}]}]}], "//", "FullSimplify"}]], "Input",\

 CellChangeTimes->{{3.951883683872808*^9, 3.951883732127595*^9}, 
   3.951883835944011*^9, {3.951883939064241*^9, 3.951883954913864*^9}, {
   3.951907315625994*^9, 3.951907322849551*^9}},
 CellLabel->"In[34]:=",ExpressionUUID->"0725267d-da43-4f9a-bc5b-c85d6957f20e"],

Cell[BoxData[
 RowBox[{
  RowBox[{"1", "+", 
   RowBox[{"p", "[", "2", "]"}], "+", 
   RowBox[{"p", "[", "5", "]"}]}], "\[Equal]", "0"}]], "Output",
 CellChangeTimes->{
  3.951883956775285*^9, 3.951887538182292*^9, 3.951907313812437*^9, 
   3.951914740208248*^9, 3.951972626851283*^9, {3.951990883010243*^9, 
   3.95199089558456*^9}, 3.952141008697016*^9, 3.95369160221271*^9, 
   3.953693447744269*^9, 3.95379483649971*^9, 3.9539604132745323`*^9, 
   3.9542975423304873`*^9, 3.954301920069697*^9, 3.9549196172369423`*^9, 
   3.954920204306486*^9},
 CellLabel->"Out[34]=",ExpressionUUID->"3a35e860-d4cd-4a3c-b961-cb96709458b3"]
}, Open  ]],

Cell["Up to now, everything is consistent!", "Text",
 CellChangeTimes->{{3.951990930370401*^9, 
  3.951990940065733*^9}},ExpressionUUID->"63ed88a3-0eb0-411f-a058-\
acebeaf7b21e"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Variational method", "Section",
 CellChangeTimes->{{3.950687724975175*^9, 3.950687729526989*^9}, {
  3.9519912790803337`*^9, 3.951991282756729*^9}, {3.953868194163685*^9, 
  3.953868195648243*^9}},ExpressionUUID->"f3c0755e-5d50-4250-958d-\
2d96d08fde14"],

Cell[CellGroupData[{

Cell["Variational conditions", "Subsection",
 CellChangeTimes->{{3.954920945625128*^9, 
  3.954920949701017*^9}},ExpressionUUID->"45144e33-9f85-406d-bf78-\
bf001af8674d"],

Cell["\<\
Now we can use the fact that small variations around the point of interest \
should not increase the value of the Bell expression: This conditions give a \
set of two linear equations:\
\>", "Text",
 CellChangeTimes->{{3.950687731947618*^9, 3.950687737406075*^9}, {
  3.950687873179618*^9, 3.950687915262955*^9}, {3.950689004387579*^9, 
  3.950689019173544*^9}},ExpressionUUID->"5737b7fd-a7cd-4d15-ba41-\
e494ebee6e36"],

Cell[BoxData[
 RowBox[{"Clear", "[", 
  RowBox[{"\[Theta]", ",", "a", ",", "b"}], "]"}]], "Input",
 CellChangeTimes->{{3.9519744869311953`*^9, 3.951974504159711*^9}, {
  3.951974641604007*^9, 3.951974651161599*^9}},
 CellLabel->"In[35]:=",ExpressionUUID->"7efca654-83ed-4406-948e-3f021f253960"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"D1P", "[", "\[Theta]_", "]"}], ":=", 
   RowBox[{"D", "[", 
    RowBox[{
     RowBox[{"P", "[", "\[Theta]", "]"}], ",", 
     RowBox[{"a", "[", "0", "]"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"D2P", "[", "\[Theta]_", "]"}], ":=", 
   RowBox[{"D", "[", 
    RowBox[{
     RowBox[{"P", "[", "\[Theta]", "]"}], ",", 
     RowBox[{"b", "[", "0", "]"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"D3P", "[", "\[Theta]_", "]"}], ":=", 
   RowBox[{"D", "[", 
    RowBox[{
     RowBox[{"P", "[", "\[Theta]", "]"}], ",", 
     RowBox[{"a", "[", "1", "]"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"D4P", "[", "\[Theta]_", "]"}], ":=", 
   RowBox[{"D", "[", 
    RowBox[{
     RowBox[{"P", "[", "\[Theta]", "]"}], ",", 
     RowBox[{"b", "[", "1", "]"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"D5P", "[", "\[Theta]_", "]"}], ":=", 
   RowBox[{"D", "[", 
    RowBox[{
     RowBox[{"P", "[", "\[Theta]", "]"}], ",", "\[Theta]"}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.950689029278831*^9, 3.950689058990304*^9}, {
  3.950689121464679*^9, 3.950689134818145*^9}, {3.951974317254494*^9, 
  3.951974343859849*^9}, {3.9519743783051243`*^9, 3.95197438836838*^9}},
 CellLabel->"In[36]:=",ExpressionUUID->"5f717478-6696-40e9-8b4c-b0f0004d28d9"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"eq1", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"Transpose", "[", "\[Beta]", "]"}], ".", 
     RowBox[{"D1P", "[", "\[Theta]", "]"}]}], "==", "0"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"eq2", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"Transpose", "[", "\[Beta]", "]"}], ".", 
     RowBox[{"D2P", "[", "\[Theta]", "]"}]}], "==", "0"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"eq3", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"Transpose", "[", "\[Beta]", "]"}], ".", 
     RowBox[{"D3P", "[", "\[Theta]", "]"}]}], "==", "0"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"eq4", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"Transpose", "[", "\[Beta]", "]"}], ".", 
     RowBox[{"D4P", "[", "\[Theta]", "]"}]}], "==", "0"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"eq5", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"Transpose", "[", "\[Beta]", "]"}], ".", 
     RowBox[{"D5P", "[", "\[Theta]", "]"}]}], "==", "0"}]}], ";"}]}], "Input",\

 CellChangeTimes->{{3.950689080840127*^9, 3.950689084374627*^9}, {
  3.950689141718526*^9, 3.950689142170162*^9}, {3.950689212555669*^9, 
  3.950689218412438*^9}, {3.95068931774537*^9, 3.9506893856527767`*^9}, {
  3.950689664033092*^9, 3.9506896818116713`*^9}, {3.951974299119221*^9, 
  3.9519743096405573`*^9}, {3.951974399778348*^9, 3.95197446787241*^9}},
 CellLabel->"In[41]:=",ExpressionUUID->"5e19be52-faff-4972-9d9e-2a18eba04585"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"expr1", "=", 
  RowBox[{
   RowBox[{"eq1", "[", 
    RowBox[{"[", "1", "]"}], "]"}], "//", "FullSimplify"}]}]], "Input",
 CellChangeTimes->{{3.951970575787517*^9, 3.951970578112198*^9}, {
   3.951970615857005*^9, 3.951970629648655*^9}, 3.951970683099725*^9, {
   3.951974061192238*^9, 3.951974109722096*^9}, {3.951974215846012*^9, 
   3.95197421798184*^9}, {3.951987613725896*^9, 3.9519876183058033`*^9}},
 CellLabel->"In[46]:=",ExpressionUUID->"954c0a18-de02-4f43-a1fa-f0c1f3cb610e"],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "2"], " ", 
  RowBox[{"Csc", "[", 
   RowBox[{
    RowBox[{"a", "[", "0", "]"}], "-", 
    RowBox[{"a", "[", "1", "]"}]}], "]"}], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"2", " ", 
     RowBox[{"Sin", "[", 
      RowBox[{"a", "[", "0", "]"}], "]"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"-", 
         RowBox[{"Cos", "[", 
          RowBox[{"a", "[", "1", "]"}], "]"}]}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"p", "[", "3", "]"}], "+", 
          RowBox[{
           RowBox[{"Cos", "[", 
            RowBox[{"2", " ", "\[Theta]"}], "]"}], " ", 
           RowBox[{"p", "[", "4", "]"}]}]}], ")"}], " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"2", " ", "\[Theta]"}], "]"}]}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"Cos", "[", 
            RowBox[{"2", " ", "\[Theta]"}], "]"}], " ", 
           RowBox[{"p", "[", "1", "]"}]}], "-", 
          RowBox[{"p", "[", "2", "]"}]}], ")"}], " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"a", "[", "1", "]"}], "]"}]}]}], ")"}]}], "-", 
    RowBox[{"2", " ", 
     RowBox[{"Cos", "[", 
      RowBox[{"a", "[", "0", "]"}], "]"}], " ", 
     RowBox[{"Sin", "[", 
      RowBox[{"2", " ", "\[Theta]"}], "]"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"Cos", "[", 
         RowBox[{"a", "[", "1", "]"}], "]"}], " ", 
        RowBox[{"p", "[", "5", "]"}], " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"2", " ", "\[Theta]"}], "]"}]}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"p", "[", "3", "]"}], "+", 
          RowBox[{
           RowBox[{"Cos", "[", 
            RowBox[{"2", " ", "\[Theta]"}], "]"}], " ", 
           RowBox[{"p", "[", "4", "]"}]}]}], ")"}], " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"a", "[", "1", "]"}], "]"}]}]}], ")"}]}]}], 
   ")"}]}]], "Output",
 CellChangeTimes->{{3.951970619736661*^9, 3.951970636847178*^9}, 
   3.951970689777532*^9, 3.951974070206624*^9, 3.9519741173278093`*^9, 
   3.951974225061797*^9, 3.951987511418846*^9, 3.951987621242615*^9, 
   3.951987788654117*^9, 3.9519910332497177`*^9, 3.952051600036819*^9, 
   3.952141021191676*^9, 3.9536916149394493`*^9, 3.953693459951683*^9, 
   3.953794889712589*^9, 3.953960414323181*^9, 3.954297543299885*^9, 
   3.954301941999935*^9, 3.954919617266973*^9, 3.954920226857932*^9, 
   3.954920924850737*^9},
 CellLabel->"Out[46]=",ExpressionUUID->"fe9225b2-c804-45a3-992c-5521f76c6368"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"expr2", "=", 
  RowBox[{
   RowBox[{"eq2", "[", 
    RowBox[{"[", "1", "]"}], "]"}], "//", "FullSimplify"}]}]], "Input",
 CellChangeTimes->{{3.9506897016081533`*^9, 3.950689703074267*^9}, {
  3.9518876176765413`*^9, 3.951887619964904*^9}, {3.951887968388274*^9, 
  3.951887969967668*^9}, {3.951888384473768*^9, 3.951888385700565*^9}, {
  3.951970712375722*^9, 3.951970715067352*^9}, {3.951974795165813*^9, 
  3.951974803433915*^9}},
 CellLabel->"In[47]:=",ExpressionUUID->"4cfead56-444e-479c-b0d5-60204b206256"],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "2"], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     RowBox[{"-", 
      RowBox[{"Cot", "[", 
       RowBox[{
        RowBox[{"b", "[", "0", "]"}], "-", 
        RowBox[{"b", "[", "1", "]"}]}], "]"}]}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"p", "[", "2", "]"}], "+", 
       RowBox[{"p", "[", "5", "]"}]}], ")"}]}], "+", 
    RowBox[{
     RowBox[{"Csc", "[", 
      RowBox[{
       RowBox[{"b", "[", "0", "]"}], "-", 
       RowBox[{"b", "[", "1", "]"}]}], "]"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"Cos", "[", 
         RowBox[{
          RowBox[{"b", "[", "0", "]"}], "+", 
          RowBox[{"b", "[", "1", "]"}]}], "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"p", "[", "2", "]"}], "+", 
          RowBox[{
           RowBox[{"Cos", "[", 
            RowBox[{"4", " ", "\[Theta]"}], "]"}], " ", 
           RowBox[{"p", "[", "5", "]"}]}]}], ")"}]}], "-", 
       RowBox[{"2", " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"2", " ", "\[Theta]"}], "]"}], " ", 
        RowBox[{"p", "[", "1", "]"}], " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"b", "[", "0", "]"}], "]"}], " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"b", "[", "1", "]"}], "]"}]}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "2"}], " ", 
           RowBox[{"p", "[", "3", "]"}], " ", 
           RowBox[{"Sin", "[", 
            RowBox[{"2", " ", "\[Theta]"}], "]"}]}], "+", 
          RowBox[{
           RowBox[{"p", "[", "4", "]"}], " ", 
           RowBox[{"Sin", "[", 
            RowBox[{"4", " ", "\[Theta]"}], "]"}]}]}], ")"}], " ", 
        RowBox[{"Sin", "[", 
         RowBox[{
          RowBox[{"b", "[", "0", "]"}], "+", 
          RowBox[{"b", "[", "1", "]"}]}], "]"}]}]}], ")"}]}]}], 
   ")"}]}]], "Output",
 CellChangeTimes->{3.951970758881504*^9, 3.951974832813224*^9, 
  3.951987538969922*^9, 3.951991036953974*^9, 3.952051604891835*^9, 
  3.952141025570477*^9, 3.953691619023869*^9, 3.953693463821508*^9, 
  3.953794894030164*^9, 3.953960416422058*^9, 3.954297545247203*^9, 
  3.954301946003639*^9, 3.954919617274993*^9, 3.954920231063569*^9, 
  3.9549209298089952`*^9},
 CellLabel->"Out[47]=",ExpressionUUID->"049f60ff-c7ea-4d3f-9d4f-ee5034a87196"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"expr3", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"eq3", "[", 
      RowBox[{"[", "1", "]"}], "]"}], "//", "FullSimplify"}], "//", 
    "Expand"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"expr4", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"eq4", "[", 
      RowBox[{"[", "1", "]"}], "]"}], "//", "FullSimplify"}], "//", 
    "Expand"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"expr5", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"eq5", "[", 
      RowBox[{"[", "1", "]"}], "]"}], "//", "Simplify"}], "//", "Factor"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.951974677572172*^9, 3.9519746859003353`*^9}, {
   3.951974806015602*^9, 3.951974808296407*^9}, {3.951974861796129*^9, 
   3.951974863352168*^9}, 3.951987589115876*^9, {3.951991050215788*^9, 
   3.951991050720888*^9}},
 CellLabel->"In[48]:=",ExpressionUUID->"019d0325-dfda-4e32-8259-b51363f3519d"],

Cell["\<\
Now expressions 1 and 2 are compatible with the ones obtained by Victor!\
\>", "Text",
 CellChangeTimes->{{3.9519710031665287`*^9, 3.95197101784652*^9}, {
  3.9519713602667522`*^9, 3.951971364316928*^9}, {3.951987642668401*^9, 
  3.951987675588024*^9}, {3.951991103847277*^9, 
  3.951991105383624*^9}},ExpressionUUID->"9fe0080f-839a-44f9-93ed-\
f049a4993b19"]
}, Closed]],

Cell[CellGroupData[{

Cell["Tsirelson point", "Subsection",
 CellChangeTimes->{{3.9519719883170633`*^9, 3.9519719899881563`*^9}, {
  3.951973170343443*^9, 
  3.951973180359599*^9}},ExpressionUUID->"f49be4d7-727f-4acc-a699-\
9cfc567adc8e"],

Cell["\<\
Focusing on the specific case of the Tsirelson point, the parameters are:\
\>", "Text",
 CellChangeTimes->{{3.9519734289929333`*^9, 3.951973450474436*^9}, {
  3.951973487102984*^9, 
  3.951973497498513*^9}},ExpressionUUID->"51cfc50a-d7ee-4295-b5d6-\
ba663c26415d"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Theta]", "=", 
   FractionBox["\[Pi]", "4"]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"a", "[", "0", "]"}], "=", "0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"a", "[", "1", "]"}], "=", 
   FractionBox["\[Pi]", "2"]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"b", "[", "0", "]"}], "=", 
   FractionBox["\[Pi]", "4"]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"b", "[", "1", "]"}], "=", 
   RowBox[{"-", 
    FractionBox["\[Pi]", "4"]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.951973185088477*^9, 3.951973258817643*^9}, {
  3.952052838192771*^9, 3.952052840861885*^9}, {3.952075347739537*^9, 
  3.952075357535271*^9}},
 CellLabel->"In[51]:=",ExpressionUUID->"91df54f5-7ebc-4ae8-82f9-976516356083"],

Cell["Hence, the equations reduce to:", "Text",
 CellChangeTimes->{{3.9519719937321167`*^9, 3.951972010535774*^9}, {
  3.951973500038962*^9, 
  3.95197351159599*^9}},ExpressionUUID->"25cdbac9-1fe7-481f-bf8c-\
66d81c2c5a68"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"expr1", ",", "expr2", ",", "expr3", ",", "expr4", ",", "expr5"}], 
  "}"}]], "Input",
 CellChangeTimes->{{3.951973274956451*^9, 3.951973281333519*^9}, {
  3.951974149439169*^9, 3.951974155054716*^9}, {3.951974192549848*^9, 
  3.951974194749978*^9}, {3.951974235615168*^9, 3.951974236643446*^9}, {
  3.951987836943083*^9, 3.951987837435141*^9}, {3.951988008302057*^9, 
  3.951988047210707*^9}},
 CellLabel->"In[56]:=",ExpressionUUID->"30778cd2-456c-4817-99e9-9f6f776c02d9"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"p", "[", "3", "]"}], ",", 
   RowBox[{
    FractionBox["1", "2"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"p", "[", "2", "]"}], "-", 
      RowBox[{"p", "[", "5", "]"}]}], ")"}]}], ",", 
   RowBox[{"-", 
    RowBox[{"p", "[", "3", "]"}]}], ",", 
   RowBox[{
    RowBox[{"-", 
     FractionBox[
      RowBox[{"p", "[", "2", "]"}], "2"]}], "+", 
    FractionBox[
     RowBox[{"p", "[", "5", "]"}], "2"]}], ",", "0"}], "}"}]], "Output",
 CellChangeTimes->{
  3.951973282660966*^9, 3.951974155636365*^9, 3.9519741956579857`*^9, {
   3.951974237218075*^9, 3.95197424503976*^9}, 3.951975434589744*^9, 
   3.951987683088291*^9, {3.951987831695231*^9, 3.9519878381757803`*^9}, {
   3.951988041911982*^9, 3.951988051933449*^9}, 3.951991116841069*^9, 
   3.952051648090128*^9, 3.95205284646546*^9, 3.9521410812440233`*^9, 
   3.9536916346773643`*^9, 3.953960418707253*^9, 3.954297547385091*^9, 
   3.954919617292202*^9, 3.954920272188608*^9},
 CellLabel->"Out[56]=",ExpressionUUID->"62c98c92-38d7-418c-9046-8abc4bf75400"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"expr1", ",", "expr2"}], "}"}]], "Input",
 CellChangeTimes->{{3.952052871622433*^9, 3.952052873705261*^9}},
 CellLabel->"In[57]:=",ExpressionUUID->"4b45ee6d-9e54-4fe4-9480-ee484388b5f8"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"p", "[", "3", "]"}], ",", 
   RowBox[{
    FractionBox["1", "2"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"p", "[", "2", "]"}], "-", 
      RowBox[{"p", "[", "5", "]"}]}], ")"}]}]}], "}"}]], "Output",
 CellChangeTimes->{3.952052874928131*^9, 3.95214108330308*^9, 
  3.953691636785284*^9, 3.953960418709395*^9, 3.954297547403921*^9, 
  3.954919617294496*^9, 3.95492027589635*^9},
 CellLabel->"Out[57]=",ExpressionUUID->"09fd6d70-871e-4b86-8db2-1807b2a293c2"]
}, Open  ]],

Cell["We successfully recover Victor\[CloseCurlyQuote]s equations!!", "Text",
 CellChangeTimes->{{3.9519754807650137`*^9, 3.951975533260051*^9}, {
  3.951975622116571*^9, 3.951975633358659*^9}, {3.951988087198569*^9, 
  3.9519881012560797`*^9}, {3.951991122315258*^9, 
  3.951991124885498*^9}},ExpressionUUID->"c7a6b35e-aa7f-4ae2-87c0-\
d5bf8a31918e"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Local bounds", "Section",
 CellChangeTimes->{{3.95198818933766*^9, 
  3.951988191276966*^9}},ExpressionUUID->"3cdce05c-2828-4aec-84fd-\
6004eb45cea9"],

Cell[CellGroupData[{

Cell["Local polytopes", "Subsection",
 CellChangeTimes->{{3.953868243106592*^9, 
  3.953868250923374*^9}},ExpressionUUID->"15342873-8670-4819-a881-\
8b9c83a2b7c0"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{"\[Theta]", ",", "a", ",", "b"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"a", "[", "0", "]"}], "=", "0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"a", "[", "1", "]"}], "=", 
   FractionBox["\[Pi]", "2"]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"b", "[", "0", "]"}], "=", 
   FractionBox["\[Pi]", "4"]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"b", "[", "1", "]"}], "=", 
   RowBox[{"-", 
    FractionBox["\[Pi]", "4"]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.952075329128298*^9, 3.952075341203119*^9}},
 CellLabel->"In[51]:=",ExpressionUUID->"d5a6fe5e-68a2-4982-b325-153a91c5c060"],

Cell["\<\
Formally, the set L of local behaviors is defined by the elements of P that \
can be written in the form

p(ab|xy) = \\int_\\Lambda \\de \\lambda p(a|x,\\lambda)p(b|y,\\lambda).\
\>", "Text",
 CellChangeTimes->{{3.951988765724977*^9, 
  3.951988831312886*^9}},ExpressionUUID->"3eaa7ef8-c1f3-4aa4-afa9-\
2ff24bbcefc8"],

Cell["\<\
We can rephrase the local model as follows. Let \[Lambda] = (a0, a1, b0, b1) \
define an assignment of outputs a_x and b_y for each of the inputs x=0,1 and \
y=0,1. Let d_\\lambda \\in L denote the corresponding deterministic behavior

d_\\lambda(ab|xy) = 1 if a=a_x and b=b_y and 0 otherwise

There are k^{2m} = 16 possible output assignments and therefore 16 such local \
deterministic behaviors. A behavior p is local if and only if it can be \
written as a convex combination of these deterministic points. Hence, the set \
L is a polytope. The local deterministic behaviors d_\\lambda correspond to \
the vertices.\
\>", "Text",
 CellChangeTimes->{{3.951988746963694*^9, 3.951988749578827*^9}, {
  3.951988833646756*^9, 3.95198908704451*^9}, {3.95198912746651*^9, 
  3.95198914244901*^9}, {3.954302468228806*^9, 
  3.9543025392468567`*^9}},ExpressionUUID->"4083e1ee-a4bc-4338-8a4f-\
bb1f6b73f640"],

Cell["\<\
Recall: we are working in the space dual to the behavior space (= the space \
of Bell expressions). In fact, we have a parametrized Bell expression, this \
time with 4 parameters (instead of 2, as in the Tsirelson case).  \
\>", "Text",
 CellChangeTimes->{{3.9519893470809507`*^9, 
  3.951989459659408*^9}},ExpressionUUID->"9d038e16-4c8f-4eee-a27c-\
a6ec7d00215b"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"OpsL", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", " ", "i", ",", "j"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"k", ",", 
       RowBox[{"i", " ", "k"}], ",", 
       RowBox[{"j", " ", "k"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"l", ",", 
       RowBox[{"i", " ", "l"}], ",", 
       RowBox[{"j", " ", "l"}]}], "}"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Lprime", "[", 
    RowBox[{"i_", ",", "j_", ",", "k_", ",", "l_"}], "]"}], " ", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"FullSimplify", "[", 
      RowBox[{"OpsL", "[", 
       RowBox[{"[", 
        RowBox[{"a", ",", "b"}], "]"}], "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"a", ",", "1", ",", "3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"b", ",", "1", ",", "3"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"L", "[", 
    RowBox[{"i_", ",", "j_", ",", "k_", ",", "l_"}], "]"}], ":=", 
   RowBox[{"Drop", "[", 
    RowBox[{
     RowBox[{"Flatten", "[", 
      RowBox[{"Lprime", "[", 
       RowBox[{"i", ",", "j", ",", "k", ",", "l"}], "]"}], " ", "]"}], ",", 
     "1"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"L", "[", 
   RowBox[{"i", ",", "j", ",", "k", ",", "l"}], "]"}], " ", "//", 
  "MatrixForm"}]}], "Input",
 CellLabel->"In[56]:=",ExpressionUUID->"8ae56e70-507c-4232-8223-8c03def8fa02"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", 
   TagBox[GridBox[{
      {"i"},
      {"j"},
      {"k"},
      {
       RowBox[{"i", " ", "k"}]},
      {
       RowBox[{"j", " ", "k"}]},
      {"l"},
      {
       RowBox[{"i", " ", "l"}]},
      {
       RowBox[{"j", " ", "l"}]}
     },
     GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    Column], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.951989903486763*^9, 3.9520537535271397`*^9, 
  3.952141092168804*^9, 3.953691652927645*^9, 3.953693530161178*^9, 
  3.953794941010128*^9, 3.953960418725505*^9, 3.954297547445676*^9, 
  3.954302015336604*^9, 3.954919617300723*^9, 3.9549202948323607`*^9, 
  3.9549209737886057`*^9},
 CellLabel->
  "Out[59]//MatrixForm=",ExpressionUUID->"19b777f0-fc3a-4450-bed7-\
bbd13f5f7a7d"]
}, Open  ]],

Cell["\<\
The convex region of expressions \\beta(r0, r1) with a local maximum smaller \
than 1 is thus given by all points (r0, r1) satisfying \\beta.L \\eq 1. \
\>", "Text",
 CellChangeTimes->{{3.951989938845448*^9, 
  3.9519899466674623`*^9}},ExpressionUUID->"6db1b71d-4390-454a-87d3-\
e0e2868331c0"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"p", "[", "5", "]"}], "=", 
   RowBox[{
    RowBox[{"-", "1"}], "-", 
    RowBox[{"p", "[", "2", "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"p", "[", "3", "]"}], "=", 
   RowBox[{
    RowBox[{"-", 
     RowBox[{"Cos", "[", 
      RowBox[{"2", " ", "\[Theta]"}], "]"}]}], " ", 
    RowBox[{"p", "[", "4", "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"p", "[", "2", "]"}], "=", 
   FractionBox[
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Cos", "[", 
       RowBox[{"4", " ", "\[Theta]"}], "]"}], " ", "-", 
      RowBox[{
       RowBox[{"Cos", "[", 
        RowBox[{"2", " ", "\[Theta]"}], "]"}], " ", 
       RowBox[{"p", "[", "1", "]"}]}]}], ")"}], 
    RowBox[{"1", "-", 
     RowBox[{"Cos", "[", 
      RowBox[{"4", "\[Theta]"}], "]"}]}]]}], ";"}]}], "Input",
 CellChangeTimes->{{3.951990168554822*^9, 3.9519901911701*^9}, {
  3.952052969181944*^9, 3.95205301833996*^9}, {3.9520530686994333`*^9, 
  3.952053114870193*^9}},
 CellLabel->"In[60]:=",ExpressionUUID->"8cb201d6-daaf-48b2-9fa4-31e44cdfac47"],

Cell[BoxData[
 RowBox[{
  RowBox[{"ineqs", ":=", 
   RowBox[{"Flatten", "[", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"Transpose", "[", "\[Beta]", "]"}], ".", 
        RowBox[{"L", "[", 
         RowBox[{"i", ",", "j", ",", "k", ",", "l"}], "]"}]}], "<=", "1"}], 
      ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"j", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"k", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"l", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "}"}]}], "]"}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.951989951771458*^9, 3.95199003625511*^9}, {
   3.95205269084057*^9, 3.952052695754328*^9}, {3.952053326056772*^9, 
   3.952053329708119*^9}, {3.95205351028675*^9, 3.952053523277521*^9}, 
   3.953798160596535*^9},
 CellLabel->"In[63]:=",ExpressionUUID->"30500510-e476-4e50-be6f-bba86a4bca53"],

Cell["\<\
We can consider different realizations, in order to reduce the number of \
parameters!\
\>", "Text",
 CellChangeTimes->{{3.951990281793044*^9, 
  3.951990306950076*^9}},ExpressionUUID->"5c76aad0-cb77-4530-8f90-\
d18d70baac5d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"RegionPlot", "[", 
    RowBox[{
     RowBox[{"Evaluate", "[", 
      RowBox[{"And", "@@", "ineqs"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"p", "[", "1", "]"}], ",", 
       RowBox[{"-", "0.5"}], ",", "0.5"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"p", "[", "4", "]"}], ",", 
       RowBox[{"-", "0.5"}], ",", "0.5"}], "}"}], ",", "\[IndentingNewLine]", 
     
     RowBox[{"PlotStyle", "->", 
      RowBox[{"Directive", "[", 
       RowBox[{
        RowBox[{"Opacity", "[", "0.5", "]"}], ",", "Blue"}], "]"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"PlotLabel", "->", 
      RowBox[{"Style", "[", 
       RowBox[{"\"\<Local polytope\>\"", ",", "Bold", ",", "16"}], "]"}]}]}], 
    "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Theta]", ",", " ", 
     RowBox[{
      FractionBox["\[Pi]", "8"], "+", 
      FractionBox["\[Pi]", "64"]}], ",", " ", 
     FractionBox["\[Pi]", "4"], ",", " ", 
     FractionBox["\[Pi]", "64"]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.952053988348301*^9, 3.952054021153009*^9}, {
  3.952054332076517*^9, 3.952054366791826*^9}, {3.9539650125766172`*^9, 
  3.953965017793663*^9}, {3.954302247746777*^9, 3.954302264676848*^9}},
 CellLabel->"In[64]:=",ExpressionUUID->"4649ec30-ec75-48e5-a499-50cbf191261e"],

Cell[BoxData["$Aborted"], "Output",
 CellChangeTimes->{
  3.952054025688192*^9, {3.952054347137594*^9, 3.9520543695359*^9}, 
   3.9521411493405247`*^9, 3.953691701676879*^9, 3.953693542620494*^9, 
   3.953794950453825*^9, 3.95396074051668*^9, 3.953965748198145*^9, 
   3.953965808256493*^9, 3.954297853956161*^9, 3.954302242318907*^9, 
   3.9543025710184803`*^9, 3.954919918417317*^9, 3.9549205429984717`*^9, 
   3.9549210869616623`*^9},
 CellLabel->"Out[64]=",ExpressionUUID->"a1db4ab3-c1ad-4adb-9de3-4bf4bdb19a44"]
}, Open  ]],

Cell["\<\
We notice the presence of a symmetry (p[4] -> - p[4]), probably due to the \
form of the Bell expression.\
\>", "Text",
 CellChangeTimes->{{3.952142131580903*^9, 
  3.952142176475943*^9}},ExpressionUUID->"6925d3ad-1f3f-4e6d-92eb-\
43c48a06ed4d"],

Cell["\<\
Let us see what is the form of the Bell expression parametrized by p[1] and \
p[4]:\
\>", "Text",
 CellChangeTimes->{{3.952142182369426*^9, 
  3.952142217803393*^9}},ExpressionUUID->"d1d47c43-5a0d-4bd5-af94-\
bbdd46fa2fd0"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[Beta]", " ", "//", "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.952142219507886*^9, 3.9521422326945353`*^9}},
 CellLabel->"In[65]:=",ExpressionUUID->"c122e561-cf94-4459-a4c1-bf44d206ce42"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", 
   TagBox[GridBox[{
      {
       FractionBox[
        RowBox[{
         SuperscriptBox[
          RowBox[{"Csc", "[", 
           RowBox[{"2", " ", "\[Theta]"}], "]"}], "2"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"2", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", "\[Theta]"}], "]"}]}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "3"}], "+", 
              RowBox[{"Cos", "[", 
               RowBox[{"4", " ", "\[Theta]"}], "]"}]}], ")"}], " ", 
            RowBox[{"p", "[", "1", "]"}]}], "-", 
           RowBox[{"8", " ", 
            RowBox[{"p", "[", "4", "]"}], " ", 
            SuperscriptBox[
             RowBox[{"Sin", "[", 
              RowBox[{"2", " ", "\[Theta]"}], "]"}], "3"]}]}], ")"}]}], 
        RowBox[{"4", " ", 
         SqrtBox["2"]}]]},
      {
       FractionBox[
        RowBox[{
         RowBox[{
          RowBox[{"-", 
           SuperscriptBox[
            RowBox[{"Csc", "[", "\[Theta]", "]"}], "2"]}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", 
            RowBox[{"p", "[", "1", "]"}]}], ")"}]}], "-", 
         RowBox[{"4", " ", 
          RowBox[{"p", "[", "1", "]"}]}], "-", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", "+", 
            RowBox[{"p", "[", "1", "]"}]}], ")"}], " ", 
          SuperscriptBox[
           RowBox[{"Sec", "[", "\[Theta]", "]"}], "2"]}], "+", 
         RowBox[{"32", " ", 
          RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
          RowBox[{"p", "[", "4", "]"}], " ", 
          RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], 
        RowBox[{"8", " ", 
         SqrtBox["2"]}]]},
      {
       RowBox[{"p", "[", "1", "]"}]},
      {
       RowBox[{"-", 
        FractionBox[
         RowBox[{
          SuperscriptBox[
           RowBox[{"Csc", "[", 
            RowBox[{"2", " ", "\[Theta]"}], "]"}], "2"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"Cos", "[", 
             RowBox[{"4", " ", "\[Theta]"}], "]"}], "-", 
            RowBox[{
             RowBox[{"Cos", "[", 
              RowBox[{"2", " ", "\[Theta]"}], "]"}], " ", 
             RowBox[{"p", "[", "1", "]"}]}]}], ")"}]}], 
         RowBox[{"2", " ", 
          SqrtBox["2"]}]]}]},
      {
       RowBox[{"-", 
        FractionBox[
         RowBox[{
          SuperscriptBox[
           RowBox[{"Csc", "[", 
            RowBox[{"2", " ", "\[Theta]"}], "]"}], "2"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"Cos", "[", 
             RowBox[{"4", " ", "\[Theta]"}], "]"}], "-", 
            RowBox[{
             RowBox[{"Cos", "[", 
              RowBox[{"2", " ", "\[Theta]"}], "]"}], " ", 
             RowBox[{"p", "[", "1", "]"}]}]}], ")"}]}], 
         RowBox[{"2", " ", 
          SqrtBox["2"]}]]}]},
      {
       RowBox[{"2", " ", 
        RowBox[{"p", "[", "4", "]"}]}]},
      {
       RowBox[{"-", 
        FractionBox[
         RowBox[{
          RowBox[{"Csc", "[", 
           RowBox[{"2", " ", "\[Theta]"}], "]"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", 
            RowBox[{
             RowBox[{"Cos", "[", 
              RowBox[{"2", " ", "\[Theta]"}], "]"}], " ", 
             RowBox[{"p", "[", "1", "]"}]}], "+", 
            RowBox[{"2", " ", 
             RowBox[{"p", "[", "4", "]"}], " ", 
             RowBox[{"Sin", "[", 
              RowBox[{"4", " ", "\[Theta]"}], "]"}]}]}], ")"}]}], 
         RowBox[{"2", " ", 
          SqrtBox["2"]}]]}]},
      {
       FractionBox[
        RowBox[{
         RowBox[{"Csc", "[", 
          RowBox[{"2", " ", "\[Theta]"}], "]"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", 
           RowBox[{
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", "\[Theta]"}], "]"}], " ", 
            RowBox[{"p", "[", "1", "]"}]}], "-", 
           RowBox[{"2", " ", 
            RowBox[{"p", "[", "4", "]"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"4", " ", "\[Theta]"}], "]"}]}]}], ")"}]}], 
        RowBox[{"2", " ", 
         SqrtBox["2"]}]]}
     },
     GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    Column], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.952142222103671*^9, 3.952142233591901*^9}, 
   3.953691764071924*^9, 3.953960741455488*^9, 3.954297855122304*^9, 
   3.954302605428507*^9, 3.954919919260541*^9, 3.954921090652338*^9},
 CellLabel->
  "Out[65]//MatrixForm=",ExpressionUUID->"f2bb4348-1a2b-4422-ad98-\
c4a9f1ac31f0"]
}, Open  ]],

Cell["We can define a Measurement vector operator", "Text",
 CellChangeTimes->{{3.95214226679428*^9, 
  3.9521422750582523`*^9}},ExpressionUUID->"baf73696-bbfe-4d24-91ac-\
821414605aa2"],

Cell[BoxData[
 RowBox[{"M", " ", ":=", " ", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"B", "[", "0", "]"}], ",", 
    RowBox[{"B", "[", "1", "]"}], ",", 
    RowBox[{"A", "[", "0", "]"}], ",", 
    RowBox[{
     RowBox[{"A", "[", "0", "]"}], ".", 
     RowBox[{"B", "[", "0", "]"}]}], ",", " ", 
    RowBox[{
     RowBox[{"A", "[", "0", "]"}], ".", 
     RowBox[{"B", "[", "1", "]"}]}], ",", 
    RowBox[{"A", "[", "1", "]"}], ",", 
    RowBox[{
     RowBox[{"A", "[", "1", "]"}], ".", 
     RowBox[{"B", "[", "0", "]"}]}], ",", 
    RowBox[{
     RowBox[{"A", "[", "1", "]"}], ".", 
     RowBox[{"B", "[", "1", "]"}]}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.952142304397275*^9, 3.952142356400179*^9}},
 CellLabel->"In[66]:=",ExpressionUUID->"5548170c-928c-48f4-8ec3-f0a8d4e02485"],

Cell["The parametrized Bell expression than reads", "Text",
 CellChangeTimes->{{3.952142394958798*^9, 3.952142400701838*^9}, {
  3.952142467871546*^9, 
  3.952142470174994*^9}},ExpressionUUID->"0e925c6f-c15f-4ae8-85dc-\
7b4e9cd834d6"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Collect", "[", 
  RowBox[{
   RowBox[{"Simplify", "[", 
    RowBox[{
     RowBox[{"Transpose", "[", "\[Beta]", "]"}], ".", "M"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"p", "[", "1", "]"}], ",", 
     RowBox[{"p", "[", "4", "]"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.952142380941174*^9, 3.952142405390019*^9}, {
  3.952142474438318*^9, 3.952142482918438*^9}, {3.95214256549382*^9, 
  3.952142572976355*^9}},
 CellLabel->"In[67]:=",ExpressionUUID->"9671b6b4-8739-4ceb-b341-fd6e311eba10"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   FractionBox["1", "16"], " ", 
   RowBox[{"p", "[", "1", "]"}], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"16", " ", 
      RowBox[{"A", "[", "0", "]"}]}], "-", 
     RowBox[{"4", " ", 
      SqrtBox["2"], " ", 
      RowBox[{"B", "[", "1", "]"}]}], "-", 
     RowBox[{
      SqrtBox["2"], " ", 
      RowBox[{"B", "[", "1", "]"}], " ", 
      SuperscriptBox[
       RowBox[{"Csc", "[", "\[Theta]", "]"}], "2"]}], "+", 
     RowBox[{"2", " ", 
      SqrtBox["2"], " ", 
      RowBox[{"B", "[", "0", "]"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "3"}], "+", 
        RowBox[{"Cos", "[", 
         RowBox[{"4", " ", "\[Theta]"}], "]"}]}], ")"}], " ", 
      SuperscriptBox[
       RowBox[{"Csc", "[", 
        RowBox[{"2", " ", "\[Theta]"}], "]"}], "2"]}], "+", 
     RowBox[{"4", " ", 
      SqrtBox["2"], " ", 
      RowBox[{"Cot", "[", 
       RowBox[{"2", " ", "\[Theta]"}], "]"}], " ", 
      RowBox[{"Csc", "[", 
       RowBox[{"2", " ", "\[Theta]"}], "]"}], " ", 
      RowBox[{
       RowBox[{"A", "[", "0", "]"}], ".", 
       RowBox[{"B", "[", "0", "]"}]}]}], "+", 
     RowBox[{"4", " ", 
      SqrtBox["2"], " ", 
      RowBox[{"Cot", "[", 
       RowBox[{"2", " ", "\[Theta]"}], "]"}], " ", 
      RowBox[{"Csc", "[", 
       RowBox[{"2", " ", "\[Theta]"}], "]"}], " ", 
      RowBox[{
       RowBox[{"A", "[", "0", "]"}], ".", 
       RowBox[{"B", "[", "1", "]"}]}]}], "-", 
     RowBox[{"4", " ", 
      SqrtBox["2"], " ", 
      RowBox[{"Cot", "[", 
       RowBox[{"2", " ", "\[Theta]"}], "]"}], " ", 
      RowBox[{
       RowBox[{"A", "[", "1", "]"}], ".", 
       RowBox[{"B", "[", "0", "]"}]}]}], "+", 
     RowBox[{"4", " ", 
      SqrtBox["2"], " ", 
      RowBox[{"Cot", "[", 
       RowBox[{"2", " ", "\[Theta]"}], "]"}], " ", 
      RowBox[{
       RowBox[{"A", "[", "1", "]"}], ".", 
       RowBox[{"B", "[", "1", "]"}]}]}], "-", 
     RowBox[{
      SqrtBox["2"], " ", 
      RowBox[{"B", "[", "1", "]"}], " ", 
      SuperscriptBox[
       RowBox[{"Sec", "[", "\[Theta]", "]"}], "2"]}]}], ")"}]}], "+", 
  RowBox[{
   FractionBox["1", "16"], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      SqrtBox["2"], " ", 
      RowBox[{"B", "[", "1", "]"}], " ", 
      SuperscriptBox[
       RowBox[{"Csc", "[", "\[Theta]", "]"}], "2"]}], "+", 
     RowBox[{"4", " ", 
      SqrtBox["2"], " ", 
      RowBox[{"B", "[", "0", "]"}], " ", 
      RowBox[{"Cot", "[", 
       RowBox[{"2", " ", "\[Theta]"}], "]"}], " ", 
      RowBox[{"Csc", "[", 
       RowBox[{"2", " ", "\[Theta]"}], "]"}]}], "-", 
     RowBox[{"4", " ", 
      SqrtBox["2"], " ", 
      RowBox[{"Cos", "[", 
       RowBox[{"4", " ", "\[Theta]"}], "]"}], " ", 
      SuperscriptBox[
       RowBox[{"Csc", "[", 
        RowBox[{"2", " ", "\[Theta]"}], "]"}], "2"], " ", 
      RowBox[{
       RowBox[{"A", "[", "0", "]"}], ".", 
       RowBox[{"B", "[", "0", "]"}]}]}], "-", 
     RowBox[{"4", " ", 
      SqrtBox["2"], " ", 
      RowBox[{"Cos", "[", 
       RowBox[{"4", " ", "\[Theta]"}], "]"}], " ", 
      SuperscriptBox[
       RowBox[{"Csc", "[", 
        RowBox[{"2", " ", "\[Theta]"}], "]"}], "2"], " ", 
      RowBox[{
       RowBox[{"A", "[", "0", "]"}], ".", 
       RowBox[{"B", "[", "1", "]"}]}]}], "+", 
     RowBox[{"4", " ", 
      SqrtBox["2"], " ", 
      RowBox[{"Csc", "[", 
       RowBox[{"2", " ", "\[Theta]"}], "]"}], " ", 
      RowBox[{
       RowBox[{"A", "[", "1", "]"}], ".", 
       RowBox[{"B", "[", "0", "]"}]}]}], "-", 
     RowBox[{"4", " ", 
      SqrtBox["2"], " ", 
      RowBox[{"Csc", "[", 
       RowBox[{"2", " ", "\[Theta]"}], "]"}], " ", 
      RowBox[{
       RowBox[{"A", "[", "1", "]"}], ".", 
       RowBox[{"B", "[", "1", "]"}]}]}], "-", 
     RowBox[{
      SqrtBox["2"], " ", 
      RowBox[{"B", "[", "1", "]"}], " ", 
      SuperscriptBox[
       RowBox[{"Sec", "[", "\[Theta]", "]"}], "2"]}]}], ")"}]}], "+", 
  RowBox[{
   FractionBox["1", "16"], " ", 
   RowBox[{"p", "[", "4", "]"}], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"32", " ", 
      RowBox[{"A", "[", "1", "]"}]}], "+", 
     RowBox[{"32", " ", 
      SqrtBox["2"], " ", 
      RowBox[{"B", "[", "1", "]"}], " ", 
      RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
      RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "-", 
     RowBox[{"16", " ", 
      SqrtBox["2"], " ", 
      RowBox[{"B", "[", "0", "]"}], " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"2", " ", "\[Theta]"}], "]"}]}], "-", 
     RowBox[{"8", " ", 
      SqrtBox["2"], " ", 
      RowBox[{"Csc", "[", 
       RowBox[{"2", " ", "\[Theta]"}], "]"}], " ", 
      RowBox[{
       RowBox[{"A", "[", "1", "]"}], ".", 
       RowBox[{"B", "[", "0", "]"}]}], " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"4", " ", "\[Theta]"}], "]"}]}], "-", 
     RowBox[{"8", " ", 
      SqrtBox["2"], " ", 
      RowBox[{"Csc", "[", 
       RowBox[{"2", " ", "\[Theta]"}], "]"}], " ", 
      RowBox[{
       RowBox[{"A", "[", "1", "]"}], ".", 
       RowBox[{"B", "[", "1", "]"}]}], " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"4", " ", "\[Theta]"}], "]"}]}]}], ")"}]}]}]], "Output",
 CellChangeTimes->{
  3.952142389648314*^9, {3.952142460423752*^9, 3.952142484689649*^9}, 
   3.952142574632154*^9, 3.953795039158787*^9, 3.953960742520933*^9, 
   3.954297856150544*^9, 3.954302615146338*^9, 3.954919920199165*^9, 
   3.9549210969360113`*^9},
 CellLabel->"Out[67]=",ExpressionUUID->"3f2072ec-d9f8-498d-92dd-af028befce1b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Transpose", "[", "\[Beta]", "]"}], ".", "M"}], " ", "//", 
  "FullSimplify"}]], "Input",
 CellChangeTimes->{{3.954386265924558*^9, 3.954386280514765*^9}},
 CellLabel->"In[68]:=",ExpressionUUID->"2186a0fa-f836-4bb8-a590-33915dd335d9"],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "16"], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"4", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        SqrtBox["2"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"B", "[", "0", "]"}], "+", 
          RowBox[{"B", "[", "1", "]"}]}], ")"}], " ", 
        RowBox[{"Cot", "[", 
         RowBox[{"2", " ", "\[Theta]"}], "]"}], " ", 
        RowBox[{"Csc", "[", 
         RowBox[{"2", " ", "\[Theta]"}], "]"}]}], "+", 
       RowBox[{"4", " ", 
        RowBox[{"A", "[", "0", "]"}], " ", 
        RowBox[{"p", "[", "1", "]"}]}], "+", 
       RowBox[{"8", " ", 
        RowBox[{"A", "[", "1", "]"}], " ", 
        RowBox[{"p", "[", "4", "]"}]}]}], ")"}]}], "+", 
    RowBox[{
     FractionBox["1", 
      SqrtBox["2"]], 
     RowBox[{
      SuperscriptBox[
       RowBox[{"Csc", "[", "\[Theta]", "]"}], "2"], " ", 
      SuperscriptBox[
       RowBox[{"Sec", "[", "\[Theta]", "]"}], "2"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"B", "[", "0", "]"}], "+", 
           RowBox[{"B", "[", "1", "]"}]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "3"}], "+", 
           RowBox[{"Cos", "[", 
            RowBox[{"4", " ", "\[Theta]"}], "]"}]}], ")"}], " ", 
         RowBox[{"p", "[", "1", "]"}]}], "-", 
        RowBox[{"2", " ", 
         RowBox[{
          RowBox[{"A", "[", "0", "]"}], ".", 
          RowBox[{"B", "[", "0", "]"}]}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"Cos", "[", 
            RowBox[{"4", " ", "\[Theta]"}], "]"}], "-", 
           RowBox[{
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", "\[Theta]"}], "]"}], " ", 
            RowBox[{"p", "[", "1", "]"}]}]}], ")"}]}], "-", 
        RowBox[{"2", " ", 
         RowBox[{
          RowBox[{"A", "[", "0", "]"}], ".", 
          RowBox[{"B", "[", "1", "]"}]}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"Cos", "[", 
            RowBox[{"4", " ", "\[Theta]"}], "]"}], "-", 
           RowBox[{
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", "\[Theta]"}], "]"}], " ", 
            RowBox[{"p", "[", "1", "]"}]}]}], ")"}]}], "+", 
        RowBox[{"2", " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"2", " ", "\[Theta]"}], "]"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"4", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", 
               RowBox[{"B", "[", "0", "]"}]}], "+", 
              RowBox[{"B", "[", "1", "]"}]}], ")"}], " ", 
            RowBox[{"p", "[", "4", "]"}], " ", 
            SuperscriptBox[
             RowBox[{"Sin", "[", 
              RowBox[{"2", " ", "\[Theta]"}], "]"}], "2"]}], "+", 
           RowBox[{
            RowBox[{
             RowBox[{"A", "[", "1", "]"}], ".", 
             RowBox[{"B", "[", "1", "]"}]}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              RowBox[{
               RowBox[{"Cos", "[", 
                RowBox[{"2", " ", "\[Theta]"}], "]"}], " ", 
               RowBox[{"p", "[", "1", "]"}]}], "-", 
              RowBox[{"2", " ", 
               RowBox[{"p", "[", "4", "]"}], " ", 
               RowBox[{"Sin", "[", 
                RowBox[{"4", " ", "\[Theta]"}], "]"}]}]}], ")"}]}], "-", 
           RowBox[{
            RowBox[{
             RowBox[{"A", "[", "1", "]"}], ".", 
             RowBox[{"B", "[", "0", "]"}]}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              RowBox[{
               RowBox[{"Cos", "[", 
                RowBox[{"2", " ", "\[Theta]"}], "]"}], " ", 
               RowBox[{"p", "[", "1", "]"}]}], "+", 
              RowBox[{"2", " ", 
               RowBox[{"p", "[", "4", "]"}], " ", 
               RowBox[{"Sin", "[", 
                RowBox[{"4", " ", "\[Theta]"}], "]"}]}]}], ")"}]}]}], 
          ")"}]}]}], ")"}]}]}]}], ")"}]}]], "Output",
 CellChangeTimes->{3.9543863404245462`*^9, 3.9549199737221727`*^9, 
  3.954921152361814*^9},
 CellLabel->"Out[68]=",ExpressionUUID->"24c98157-1dc2-4142-900a-fac6ff99c533"]
}, Open  ]],

Cell["From this form, we should be able to identify the symmetry!", "Text",
 CellChangeTimes->{{3.952142606274769*^9, 
  3.9521426273083973`*^9}},ExpressionUUID->"f706e85a-2579-4a99-8528-\
39a566eb1baf"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Vertices as functions of \\theta", "Subsection",
 CellChangeTimes->{{3.952141162258728*^9, 
  3.9521411751005793`*^9}},ExpressionUUID->"1d873b4a-28cb-4a63-8b2a-\
a369baad515f"],

Cell["\<\
We have now inequalities parametrized by \\theta. To characterize the \
solution as a function of \\theta, it is sufficient to know the vertices, \
since the solution of the system of inequalities is given by the Convex Hull \
of the vertices, since we know that the local set L is a polytope! To find \
the vertices, it is sufficient to find all the intersections between the \
lines, that are characterized by the equations associated to the inequalities \
we have.\
\>", "Text",
 CellChangeTimes->{{3.9520754104984837`*^9, 3.95207545437101*^9}, {
  3.952075561080564*^9, 3.95207561506008*^9}, {3.9520756589993887`*^9, 
  3.95207572144522*^9}},ExpressionUUID->"e6cffacb-5a0e-45ad-8eb7-\
63ccfbb393f3"],

Cell[BoxData[
 RowBox[{
  RowBox[{"eqns", ":=", 
   RowBox[{
    RowBox[{"ineqs", "/.", 
     RowBox[{"LessEqual", "->", "Equal"}]}], "//", "FullSimplify"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.952075927231733*^9, 3.952075929519251*^9}, 
   3.952141185418701*^9, {3.952141858968878*^9, 3.952141861310931*^9}, 
   3.9537981498391314`*^9},
 CellLabel->"In[69]:=",ExpressionUUID->"5e07a44f-14ba-409d-be1c-3c0e9f17ebf5"],

Cell["We get all unique pairs of equations:", "Text",
 CellChangeTimes->{{3.952141871251356*^9, 
  3.952141900761299*^9}},ExpressionUUID->"278c4390-8c0d-427f-978b-\
94a90338b1f3"],

Cell[BoxData[
 RowBox[{
  RowBox[{"eqnPairs", "=", 
   RowBox[{"Subsets", "[", 
    RowBox[{"eqns", ",", 
     RowBox[{"{", "2", "}"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.952075844309132*^9, 3.952075850453*^9}, 
   3.952075911317073*^9, {3.952075950565028*^9, 3.952075950861245*^9}, {
   3.952075999232755*^9, 3.952076000576092*^9}, {3.9521418670468388`*^9, 
   3.952141868317538*^9}},
 CellLabel->"In[70]:=",ExpressionUUID->"f120e47d-0ccc-46cb-b9a8-ad1a2791e9c6"],

Cell["We have 16 equations, so the possibilities are", "Text",
 CellChangeTimes->{{3.952076078131487*^9, 3.952076084178472*^9}, {
  3.952076116347843*^9, 
  3.9520761196328897`*^9}},ExpressionUUID->"dce54cf8-1ccd-49f7-a65a-\
40d3a2d72409"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Binomial", "[", 
  RowBox[{"16", ",", "2"}], "]"}]], "Input",
 CellChangeTimes->{{3.952076104418537*^9, 3.952076108340176*^9}},
 CellLabel->"In[71]:=",ExpressionUUID->"f1d2f7c2-b988-44b0-9ea0-5f80559a1ade"],

Cell[BoxData["120"], "Output",
 CellChangeTimes->{3.952076109043586*^9, 3.953691803228884*^9, 
  3.953693581874044*^9, 3.953795194160556*^9, 3.953960754286067*^9, 
  3.95429786675517*^9, 3.954302642399716*^9, 3.9549199849373007`*^9, 
  3.954921172449585*^9},
 CellLabel->"Out[71]=",ExpressionUUID->"f301e642-3aef-4397-923f-15642080260b"]
}, Open  ]],

Cell["Let\[CloseCurlyQuote]s check that everything works:", "Text",
 CellChangeTimes->{{3.952141231454423*^9, 3.952141234676755*^9}, {
  3.952141913269264*^9, 
  3.9521419255871077`*^9}},ExpressionUUID->"f8db1bcd-f1d9-484a-83e6-\
f1538bf22bfc"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Length", "[", "eqnPairs", "]"}]], "Input",
 CellChangeTimes->{{3.9521412062878428`*^9, 3.952141212521044*^9}},
 CellLabel->"In[72]:=",ExpressionUUID->"7bbf8fe3-9325-44d7-8591-4a853c51a8ae"],

Cell[BoxData["120"], "Output",
 CellChangeTimes->{3.952141218545559*^9, 3.953691805258222*^9, 
  3.953693583991777*^9, 3.953795195644525*^9, 3.953960754292735*^9, 
  3.954297866775782*^9, 3.954302653686223*^9, 3.95491998495032*^9, 
  3.9549211740123367`*^9},
 CellLabel->"Out[72]=",ExpressionUUID->"a4dc1e28-a173-4667-b318-0096648274b8"]
}, Open  ]],

Cell["\<\
We now try to solve the equations and find all the \
\[OpenCurlyDoubleQuote]candidate\[CloseCurlyDoubleQuote] for the vertices of \
the local polytopes\
\>", "Text",
 CellChangeTimes->{{3.952076123432181*^9, 3.9520761452772903`*^9}, {
  3.952076230492634*^9, 3.952076235124922*^9}, {3.954302415452834*^9, 
  3.954302439698194*^9}},ExpressionUUID->"d95ef77f-aaf0-4d2f-b250-\
1d19a00071df"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"rawVertices", "=", 
  RowBox[{"DeleteDuplicates", "[", 
   RowBox[{"Select", "[", 
    RowBox[{
     RowBox[{"Flatten", "[", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"Solve", "[", 
          RowBox[{"pair", ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"p", "[", "1", "]"}], ",", 
             RowBox[{"p", "[", "4", "]"}]}], "}"}], ",", "Reals"}], "]"}], 
         ",", 
         RowBox[{"{", 
          RowBox[{"pair", ",", "eqnPairs"}], "}"}]}], "]"}], ",", "1"}], 
      "]"}], ",", 
     RowBox[{
      RowBox[{"FreeQ", "[", 
       RowBox[{"#", ",", 
        RowBox[{"C", "[", "1", "]"}]}], "]"}], "&"}]}], "]"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.952141452606553*^9, 3.9521414537467623`*^9}, {
   3.953693616295937*^9, 3.953693620629448*^9}, 3.954302686506633*^9},
 CellLabel->"In[73]:=",ExpressionUUID->"dc7439a2-4df6-4ffb-b7d7-bcc933a4d891"],

Cell[BoxData[
 TemplateBox[<|"shortenedBoxes" -> TagBox[
     RowBox[{"{", 
       RowBox[{
         RowBox[{"{", 
           RowBox[{
             RowBox[{
               RowBox[{"p", "[", "1", "]"}], "\[Rule]", 
               FractionBox[
                RowBox[{
                  RowBox[{
                    SqrtBox["2"], " ", 
                    RowBox[{"Csc", "[", "\[Theta]", "]"}]}], "+", 
                  RowBox[{"4", " ", 
                    RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "-", 
                  RowBox[{"4", " ", 
                    SqrtBox["2"], " ", 
                    RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], 
                RowBox[{
                  RowBox[{
                    SqrtBox["2"], " ", 
                    RowBox[{"Csc", "[", "\[Theta]", "]"}]}], "-", 
                  RowBox[{"4", " ", 
                    RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
                  RowBox[{"2", " ", 
                    SqrtBox["2"], " ", 
                    RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}]]}], ",", 
             RowBox[{
               RowBox[{"p", "[", "4", "]"}], "\[Rule]", "0"}]}], "}"}], ",", 
         TemplateBox[{"118"}, "OutputSizeLimit`Skeleton"], ",", 
         RowBox[{"{", 
           RowBox[{
             RowBox[{
               RowBox[{"p", "[", "1", "]"}], "\[Rule]", 
               FractionBox[
                RowBox[{
                  RowBox[{
                    RowBox[{"-", "4"}], " ", 
                    RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
                  RowBox[{"4", " ", 
                    SqrtBox["2"], " ", 
                    RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "-", 
                  RowBox[{
                    SqrtBox["2"], " ", 
                    RowBox[{"Sec", "[", "\[Theta]", "]"}]}]}], 
                RowBox[{
                  RowBox[{
                    RowBox[{"-", "4"}], " ", 
                    RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
                  RowBox[{"2", " ", 
                    SqrtBox["2"], " ", 
                    RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
                  RowBox[{
                    SqrtBox["2"], " ", 
                    RowBox[{"Sec", "[", "\[Theta]", "]"}]}]}]]}], ",", 
             RowBox[{
               RowBox[{"p", "[", "4", "]"}], "\[Rule]", "0"}]}], "}"}]}], 
       "}"}], Short[#, 8]& ], "line" -> 73, "sessionID" -> 
   20476792839652364137, "byteCount" -> 1871672, "size" -> 8, "stored" -> 
   False, "expr" -> Missing["NotAvailable", "NewSessionID"], "wrap" -> 
   OutputSizeLimit`Defer, "version" -> 1|>,
  "OutputSizeLimitTemplate"]], "Output",
 CellChangeTimes->{3.954302694038186*^9, 3.954919992076953*^9, 
  3.954921191771378*^9},
 CellLabel->"Out[73]=",ExpressionUUID->"d4405be3-8b2d-493e-8255-0660430808bb"]
}, Open  ]],

Cell["\<\
We cannot display vertices, as they are functions of \\theta. There are 120 \
pairs of linear equations in p[1] and p[4], so we expect 120 solutions! \
Everything is working!\
\>", "Text",
 CellChangeTimes->{{3.952141463310934*^9, 3.952141487664969*^9}, {
  3.954302701667363*^9, 
  3.954302718876896*^9}},ExpressionUUID->"855c0f7b-a2e6-444a-88b4-\
43bb0c171b0a"],

Cell["\<\
But the convex polytope is determined by very few points. How to exclude \
non-relevant solutions? Let\[CloseCurlyQuote]s try a different approach. We  \
guess that (maybe!) the vertices are always described by intersections of the \
same lines! Then, for a fixed \\theta, we can try to identify the correct \
sequence of lines that describe the vertices.\
\>", "Text",
 CellChangeTimes->{{3.9521414912318707`*^9, 3.952141504186839*^9}, {
  3.952141826601776*^9, 3.952141851356627*^9}, {3.952142058539317*^9, 
  3.95214208623804*^9}, {3.9543027257459593`*^9, 
  3.954302753832749*^9}},ExpressionUUID->"46d50a7f-6313-4266-82be-\
fbb238980381"]
}, Open  ]],

Cell[CellGroupData[{

Cell["What can we learn from the Tsirelson point case", "Subsection",
 CellChangeTimes->{{3.953692932243226*^9, 3.953692936255123*^9}, {
  3.95386831467762*^9, 
  3.9538683211747932`*^9}},ExpressionUUID->"b2cfb8f3-1cea-42cd-bcb5-\
ae81403228a4"],

Cell["\<\
Which lines describe the vertices of the local polytope? For the Tsirelson \
behavior, the local polytope is given by\
\>", "Text",
 CellChangeTimes->{{3.953693044679877*^9, 3.953693078820639*^9}, {
  3.9537952601111917`*^9, 
  3.953795260887661*^9}},ExpressionUUID->"282e480e-db0e-477e-9334-\
3d9ec1325e85"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"ineqsEval", "=", 
    RowBox[{"ineqs", "/.", " ", 
     RowBox[{"\[Theta]", "->", 
      FractionBox["\[Pi]", "4"]}]}]}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
   "Label", " ", "each", " ", "inequality", " ", "so", " ", "we", " ", "can", 
    " ", "track", " ", "where", " ", "vertices", " ", "come", " ", "from"}], 
   "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"labeledIneqs", "=", 
    RowBox[{"MapIndexed", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"#1", "->", 
        RowBox[{"First", "[", "#2", "]"}]}], "&"}], ",", "ineqsEval"}], 
     "]"}]}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
   "Build", " ", "all", " ", "pairs", " ", "of", " ", "inequalities", " ", 
    "and", " ", "their", " ", "labels"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"labeledPairs", "=", 
    RowBox[{"Subsets", "[", 
     RowBox[{"labeledIneqs", ",", 
      RowBox[{"{", "2", "}"}]}], "]"}]}], ";"}], "\n", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Go", " ", "through", " ", "each", " ", "pair"}], ",", "solve", 
    ",", 
    RowBox[{
    "and", " ", "check", " ", "if", " ", "solution", " ", "lies", " ", "in", 
     " ", "region"}]}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"vertexData", "=", 
   RowBox[{
    RowBox[{"Reap", "[", 
     RowBox[{"Do", "[", 
      RowBox[{
       RowBox[{"Module", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"pair", ",", "eqs", ",", "sol"}], "}"}], ",", 
         RowBox[{
          RowBox[{"pair", "=", 
           RowBox[{"pairEntry", "[", 
            RowBox[{"[", 
             RowBox[{"All", ",", "1"}], "]"}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"eqs", "=", 
           RowBox[{"pair", "/.", " ", 
            RowBox[{"LessEqual", "->", "Equal"}]}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"sol", "=", 
           RowBox[{"Quiet", "@", 
            RowBox[{"Solve", "[", 
             RowBox[{"eqs", ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"p", "[", "1", "]"}], ",", 
                RowBox[{"p", "[", "4", "]"}]}], "}"}], ",", "Reals"}], 
             "]"}]}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"Length", "[", "sol", "]"}], ">", "0"}], "&&", 
             RowBox[{"FreeQ", "[", 
              RowBox[{
               RowBox[{"sol", "[", 
                RowBox[{"[", "1", "]"}], "]"}], ",", 
               RowBox[{"C", "[", "1", "]"}]}], "]"}], "&&", 
             RowBox[{"And", "@@", 
              RowBox[{"(", 
               RowBox[{"ineqsEval", "/.", " ", 
                RowBox[{"sol", "[", 
                 RowBox[{"[", "1", "]"}], "]"}]}], ")"}]}]}], ",", 
            RowBox[{"Sow", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"pairEntry", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", "2"}], "]"}], "]"}], ",", 
               RowBox[{"sol", "[", 
                RowBox[{"[", "1", "]"}], "]"}]}], "}"}], "]"}]}], "]"}]}]}], 
        "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"pairEntry", ",", "labeledPairs"}], "}"}]}], "]"}], "]"}], 
    "[", 
    RowBox[{"[", 
     RowBox[{"2", ",", "1"}], "]"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.9536931406612873`*^9, 3.953693162474976*^9}, {
  3.953693800429058*^9, 3.953693808402745*^9}, {3.95386748354206*^9, 
  3.953867487391861*^9}},
 CellLabel->"In[74]:=",ExpressionUUID->"cc80f7b2-c258-4c13-a6cb-aa463b75fa2f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"vertexData", "//", "Table"}]], "Input",
 CellChangeTimes->{{3.953693829115398*^9, 3.95369385255634*^9}},
 CellLabel->"In[78]:=",ExpressionUUID->"bd529405-ecb4-4c56-aa84-acfcdc852e6a"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "12"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"p", "[", "1", "]"}], "\[Rule]", 
        RowBox[{"-", 
         FractionBox[
          RowBox[{
           RowBox[{"-", "3"}], "+", 
           RowBox[{"2", " ", 
            SqrtBox["2"]}]}], 
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             SqrtBox["2"]}], ")"}]}]]}]}], ",", 
       RowBox[{
        RowBox[{"p", "[", "4", "]"}], "\[Rule]", 
        RowBox[{"-", 
         FractionBox[
          RowBox[{"3", "-", 
           RowBox[{"2", " ", 
            SqrtBox["2"]}]}], 
          RowBox[{"4", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             SqrtBox["2"]}], ")"}]}]]}]}]}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "15"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"p", "[", "1", "]"}], "\[Rule]", "0"}], ",", 
       RowBox[{
        RowBox[{"p", "[", "4", "]"}], "\[Rule]", 
        RowBox[{
         FractionBox["1", "4"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "2"}], "+", 
           SqrtBox["2"]}], ")"}]}]}]}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"2", ",", "7"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"p", "[", "1", "]"}], "\[Rule]", 
        RowBox[{"-", 
         FractionBox[
          RowBox[{
           RowBox[{"-", "3"}], "+", 
           RowBox[{"2", " ", 
            SqrtBox["2"]}]}], 
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             SqrtBox["2"]}], ")"}]}]]}]}], ",", 
       RowBox[{
        RowBox[{"p", "[", "4", "]"}], "\[Rule]", 
        RowBox[{"-", 
         FractionBox[
          RowBox[{
           RowBox[{"-", "3"}], "+", 
           RowBox[{"2", " ", 
            SqrtBox["2"]}]}], 
          RowBox[{"4", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             SqrtBox["2"]}], ")"}]}]]}]}]}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"2", ",", "16"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"p", "[", "1", "]"}], "\[Rule]", "0"}], ",", 
       RowBox[{
        RowBox[{"p", "[", "4", "]"}], "\[Rule]", 
        RowBox[{
         FractionBox["1", "4"], " ", 
         RowBox[{"(", 
          RowBox[{"2", "-", 
           SqrtBox["2"]}], ")"}]}]}]}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"5", ",", "10"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"p", "[", "1", "]"}], "\[Rule]", 
        RowBox[{"-", 
         FractionBox[
          RowBox[{
           RowBox[{"-", "4"}], "+", 
           RowBox[{"3", " ", 
            SqrtBox["2"]}]}], 
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             SqrtBox["2"]}], ")"}]}]]}]}], ",", 
       RowBox[{
        RowBox[{"p", "[", "4", "]"}], "\[Rule]", "0"}]}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"5", ",", "16"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"p", "[", "1", "]"}], "\[Rule]", 
        RowBox[{"-", 
         FractionBox[
          RowBox[{"3", "-", 
           RowBox[{"2", " ", 
            SqrtBox["2"]}]}], 
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             SqrtBox["2"]}], ")"}]}]]}]}], ",", 
       RowBox[{
        RowBox[{"p", "[", "4", "]"}], "\[Rule]", 
        RowBox[{"-", 
         FractionBox[
          RowBox[{
           RowBox[{"-", "3"}], "+", 
           RowBox[{"2", " ", 
            SqrtBox["2"]}]}], 
          RowBox[{"4", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             SqrtBox["2"]}], ")"}]}]]}]}]}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"7", ",", "12"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"p", "[", "1", "]"}], "\[Rule]", 
        RowBox[{"-", 
         FractionBox[
          RowBox[{"4", "-", 
           RowBox[{"3", " ", 
            SqrtBox["2"]}]}], 
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             SqrtBox["2"]}], ")"}]}]]}]}], ",", 
       RowBox[{
        RowBox[{"p", "[", "4", "]"}], "\[Rule]", "0"}]}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"10", ",", "15"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"p", "[", "1", "]"}], "\[Rule]", 
        RowBox[{"-", 
         FractionBox[
          RowBox[{"3", "-", 
           RowBox[{"2", " ", 
            SqrtBox["2"]}]}], 
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             SqrtBox["2"]}], ")"}]}]]}]}], ",", 
       RowBox[{
        RowBox[{"p", "[", "4", "]"}], "\[Rule]", 
        RowBox[{"-", 
         FractionBox[
          RowBox[{"3", "-", 
           RowBox[{"2", " ", 
            SqrtBox["2"]}]}], 
          RowBox[{"4", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             SqrtBox["2"]}], ")"}]}]]}]}]}], "}"}]}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.953693832624236*^9, 3.95369385311285*^9}, 
   3.95379534487284*^9, 3.953960762845916*^9, 3.954297874486257*^9, 
   3.954302774860967*^9, 3.954919992753613*^9, 3.954921202483374*^9},
 CellLabel->"Out[78]=",ExpressionUUID->"4ec91af8-d94c-4939-9da7-54bf4c1930f8"]
}, Open  ]],

Cell["\<\
So, we got the list of lines describing the vertices! Then, we extract the \
data:\
\>", "Text",
 CellChangeTimes->{{3.953693873643442*^9, 3.953693895448441*^9}, {
  3.953795324818709*^9, 3.953795332906375*^9}, {3.954302791711959*^9, 
  3.95430279843184*^9}},ExpressionUUID->"b9c7b048-46ee-4400-b630-\
0fa7ee90e68d"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"vertexCoords", "=", 
   RowBox[{"vertexData", "[", 
    RowBox[{"[", 
     RowBox[{"All", ",", "2"}], "]"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"contributingPairs", "=", 
   RowBox[{"vertexData", "[", 
    RowBox[{"[", 
     RowBox[{"All", ",", "1"}], "]"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.953693928163577*^9, 3.953693928165114*^9}},
 CellLabel->"In[79]:=",ExpressionUUID->"75048449-3328-4a41-a708-37bdfae1363b"],

Cell["\<\
The couples of lines whose intersections describe the vertices of the dual \
local polytope for the Tsirelson behavior are \
\>", "Text",
 CellChangeTimes->{{3.953795352582807*^9, 
  3.953795393230433*^9}},ExpressionUUID->"dddfcc28-7eac-4980-88f6-\
be8c71d90a25"],

Cell[CellGroupData[{

Cell[BoxData["contributingPairs"], "Input",
 CellChangeTimes->{{3.9536939313703823`*^9, 3.953693934299234*^9}},
 CellLabel->"In[81]:=",ExpressionUUID->"bb45f993-fc35-4502-8238-c1e8f79b775a"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "12"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "15"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "16"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "10"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "16"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "12"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"10", ",", "15"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.953693934795857*^9, 3.953960762854287*^9, 
  3.9542978745172033`*^9, 3.954302781877037*^9, 3.9549199927634478`*^9, 
  3.954921209312024*^9},
 CellLabel->"Out[81]=",ExpressionUUID->"69f5be76-a379-4797-9136-831f2ad233ec"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["vertexCoords"], "Input",
 CellChangeTimes->{{3.95369394784442*^9, 3.953693950788943*^9}},
 CellLabel->"In[82]:=",ExpressionUUID->"13881eff-aaa1-4828-ac45-bd11f87875ce"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"p", "[", "1", "]"}], "\[Rule]", 
      RowBox[{"-", 
       FractionBox[
        RowBox[{
         RowBox[{"-", "3"}], "+", 
         RowBox[{"2", " ", 
          SqrtBox["2"]}]}], 
        RowBox[{"2", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", 
           SqrtBox["2"]}], ")"}]}]]}]}], ",", 
     RowBox[{
      RowBox[{"p", "[", "4", "]"}], "\[Rule]", 
      RowBox[{"-", 
       FractionBox[
        RowBox[{"3", "-", 
         RowBox[{"2", " ", 
          SqrtBox["2"]}]}], 
        RowBox[{"4", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", 
           SqrtBox["2"]}], ")"}]}]]}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"p", "[", "1", "]"}], "\[Rule]", "0"}], ",", 
     RowBox[{
      RowBox[{"p", "[", "4", "]"}], "\[Rule]", 
      RowBox[{
       FractionBox["1", "4"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "2"}], "+", 
         SqrtBox["2"]}], ")"}]}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"p", "[", "1", "]"}], "\[Rule]", 
      RowBox[{"-", 
       FractionBox[
        RowBox[{
         RowBox[{"-", "3"}], "+", 
         RowBox[{"2", " ", 
          SqrtBox["2"]}]}], 
        RowBox[{"2", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", 
           SqrtBox["2"]}], ")"}]}]]}]}], ",", 
     RowBox[{
      RowBox[{"p", "[", "4", "]"}], "\[Rule]", 
      RowBox[{"-", 
       FractionBox[
        RowBox[{
         RowBox[{"-", "3"}], "+", 
         RowBox[{"2", " ", 
          SqrtBox["2"]}]}], 
        RowBox[{"4", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", 
           SqrtBox["2"]}], ")"}]}]]}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"p", "[", "1", "]"}], "\[Rule]", "0"}], ",", 
     RowBox[{
      RowBox[{"p", "[", "4", "]"}], "\[Rule]", 
      RowBox[{
       FractionBox["1", "4"], " ", 
       RowBox[{"(", 
        RowBox[{"2", "-", 
         SqrtBox["2"]}], ")"}]}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"p", "[", "1", "]"}], "\[Rule]", 
      RowBox[{"-", 
       FractionBox[
        RowBox[{
         RowBox[{"-", "4"}], "+", 
         RowBox[{"3", " ", 
          SqrtBox["2"]}]}], 
        RowBox[{"2", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", 
           SqrtBox["2"]}], ")"}]}]]}]}], ",", 
     RowBox[{
      RowBox[{"p", "[", "4", "]"}], "\[Rule]", "0"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"p", "[", "1", "]"}], "\[Rule]", 
      RowBox[{"-", 
       FractionBox[
        RowBox[{"3", "-", 
         RowBox[{"2", " ", 
          SqrtBox["2"]}]}], 
        RowBox[{"2", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", 
           SqrtBox["2"]}], ")"}]}]]}]}], ",", 
     RowBox[{
      RowBox[{"p", "[", "4", "]"}], "\[Rule]", 
      RowBox[{"-", 
       FractionBox[
        RowBox[{
         RowBox[{"-", "3"}], "+", 
         RowBox[{"2", " ", 
          SqrtBox["2"]}]}], 
        RowBox[{"4", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", 
           SqrtBox["2"]}], ")"}]}]]}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"p", "[", "1", "]"}], "\[Rule]", 
      RowBox[{"-", 
       FractionBox[
        RowBox[{"4", "-", 
         RowBox[{"3", " ", 
          SqrtBox["2"]}]}], 
        RowBox[{"2", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", 
           SqrtBox["2"]}], ")"}]}]]}]}], ",", 
     RowBox[{
      RowBox[{"p", "[", "4", "]"}], "\[Rule]", "0"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"p", "[", "1", "]"}], "\[Rule]", 
      RowBox[{"-", 
       FractionBox[
        RowBox[{"3", "-", 
         RowBox[{"2", " ", 
          SqrtBox["2"]}]}], 
        RowBox[{"2", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", 
           SqrtBox["2"]}], ")"}]}]]}]}], ",", 
     RowBox[{
      RowBox[{"p", "[", "4", "]"}], "\[Rule]", 
      RowBox[{"-", 
       FractionBox[
        RowBox[{"3", "-", 
         RowBox[{"2", " ", 
          SqrtBox["2"]}]}], 
        RowBox[{"4", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", 
           SqrtBox["2"]}], ")"}]}]]}]}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.953693953287927*^9, 3.953960762857194*^9, 
  3.954297874539505*^9, 3.954302801445105*^9, 3.954919992773262*^9, 
  3.954921210930925*^9},
 CellLabel->"Out[82]=",ExpressionUUID->"4737fb9c-74c7-48f0-92b2-d2b1ff5aec74"]
}, Open  ]],

Cell["\<\
Now, consider the equations corresponding to these couples of lines in the \
partially entangled case. We can then recover some reasonable candidates for \
the vertices of the local polytopes in the general case:\
\>", "Text",
 CellChangeTimes->{{3.95379543119098*^9, 
  3.953795501578649*^9}},ExpressionUUID->"15593545-397b-44c8-98e6-\
dbac9c5c4924"],

Cell[BoxData[
 RowBox[{
  RowBox[{"vertexDataTheta", " ", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"eq1", ",", "eq2", ",", "sol"}], "}"}], ",", 
       RowBox[{
        RowBox[{"eq1", "=", 
         RowBox[{
          RowBox[{"ineqs", "[", 
           RowBox[{"[", 
            RowBox[{"pair", "[", 
             RowBox[{"[", "1", "]"}], "]"}], "]"}], "]"}], "/.", " ", 
          RowBox[{"LessEqual", "->", "Equal"}]}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"eq2", "=", 
         RowBox[{
          RowBox[{"ineqs", "[", 
           RowBox[{"[", 
            RowBox[{"pair", "[", 
             RowBox[{"[", "2", "]"}], "]"}], "]"}], "]"}], "/.", " ", 
          RowBox[{"LessEqual", "->", "Equal"}]}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"sol", "=", 
         RowBox[{"Quiet", "@", 
          RowBox[{"Solve", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"eq1", ",", "eq2"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"p", "[", "1", "]"}], ",", 
              RowBox[{"p", "[", "4", "]"}]}], "}"}]}], "]"}]}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"pair", "->", "sol"}]}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"pair", ",", "contributingPairs"}], "}"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.953694078756907*^9, 3.953694078758515*^9}, {
   3.953694148504277*^9, 3.953694149096196*^9}, {3.953698669532876*^9, 
   3.953698674875536*^9}, 3.953707731731883*^9, {3.954302837820907*^9, 
   3.9543029008111153`*^9}},
 CellLabel->"In[83]:=",ExpressionUUID->"8334bb8d-9bea-4bf8-b9d9-b5db1cfec58e"],

Cell["\<\
We then store the coordinates of this candidate in a vector v\
\>", "Text",
 CellChangeTimes->{{3.953795545607588*^9, 
  3.9537955672212267`*^9}},ExpressionUUID->"e686655c-41e2-49ef-a8cf-\
6860fce54766"],

Cell[BoxData[
 RowBox[{
  RowBox[{"v", " ", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"p", "[", "1", "]"}], ",", 
        RowBox[{"p", "[", "4", "]"}]}], "}"}], "/.", 
      RowBox[{"vertexDataTheta", "[", 
       RowBox[{"[", 
        RowBox[{"i", ",", "2", ",", " ", "1"}], "]"}], "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", " ", "1", ",", " ", "8"}], "}"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.953699003953953*^9, 3.953699035720593*^9}, {
   3.953699070013761*^9, 3.953699118893392*^9}, 3.9537076901867037`*^9, {
   3.954302880018847*^9, 3.954302882760605*^9}, {3.954302925087193*^9, 
   3.954302927077812*^9}},
 CellLabel->"In[84]:=",ExpressionUUID->"a4eb2055-2375-45a2-82d2-8d1a30458dac"],

Cell["For the Tsirelson point, we recover the known vertices:", "Text",
 CellChangeTimes->{{3.95379557580637*^9, 
  3.953795590728685*^9}},ExpressionUUID->"547f98a4-8f1a-4dc1-8e6f-\
49426bba70ad"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"v", "/.", 
   RowBox[{"{", 
    RowBox[{"\[Theta]", "->", 
     FractionBox["\[Pi]", "4"]}], "}"}]}], "//", "FullSimplify"}]], "Input",
 CellChangeTimes->{{3.9536990396493187`*^9, 3.953699054683337*^9}, {
  3.9536991338973*^9, 3.953699135678219*^9}},
 CellLabel->"In[85]:=",ExpressionUUID->"85f3a786-a50a-4590-a063-e0098705e70e"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"-", 
       FractionBox["1", "2"]}], "+", 
      FractionBox["1", 
       SqrtBox["2"]]}], ",", 
     RowBox[{
      FractionBox["1", "4"], " ", 
      RowBox[{"(", 
       RowBox[{"1", "-", 
        SqrtBox["2"]}], ")"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     RowBox[{
      FractionBox["1", "4"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "2"}], "+", 
        SqrtBox["2"]}], ")"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"-", 
       FractionBox["1", "2"]}], "+", 
      FractionBox["1", 
       SqrtBox["2"]]}], ",", 
     RowBox[{
      FractionBox["1", "4"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        SqrtBox["2"]}], ")"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     RowBox[{
      FractionBox["1", "4"], " ", 
      RowBox[{"(", 
       RowBox[{"2", "-", 
        SqrtBox["2"]}], ")"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "1"}], "+", 
      FractionBox["1", 
       SqrtBox["2"]]}], ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      FractionBox["1", "2"], "-", 
      FractionBox["1", 
       SqrtBox["2"]]}], ",", 
     RowBox[{
      FractionBox["1", "4"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        SqrtBox["2"]}], ")"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"1", "-", 
      FractionBox["1", 
       SqrtBox["2"]]}], ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      FractionBox["1", "2"], "-", 
      FractionBox["1", 
       SqrtBox["2"]]}], ",", 
     RowBox[{
      FractionBox["1", "4"], " ", 
      RowBox[{"(", 
       RowBox[{"1", "-", 
        SqrtBox["2"]}], ")"}]}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.953699040087235*^9, 3.953699055618823*^9}, {
   3.953699131120359*^9, 3.9536991363196507`*^9}, 3.953795593317313*^9, 
   3.953960764062557*^9, 3.954297875666971*^9, 3.954302938630262*^9, 
   3.954919993639565*^9, 3.9549212214562798`*^9},
 CellLabel->"Out[85]=",ExpressionUUID->"f2c38f95-cebc-407b-bb00-eee506fe0484"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"ListPlot", "[", 
    RowBox[{"v", ",", " ", 
     RowBox[{"PlotStyle", "->", 
      RowBox[{"{", 
       RowBox[{"Red", ",", 
        RowBox[{"PointSize", "[", "Medium", "]"}]}], "}"}]}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Theta]", ",", " ", 
     RowBox[{
      FractionBox["\[Pi]", "8"], "+", 
      FractionBox["\[Pi]", "64"]}], ",", " ", 
     FractionBox["\[Pi]", "4"], ",", " ", 
     FractionBox["\[Pi]", "64"]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.953699140405384*^9, 3.953699225883299*^9}, {
  3.9536992951546288`*^9, 3.9536992957437553`*^9}, {3.953699338683374*^9, 
  3.953699383497177*^9}, {3.953795615881871*^9, 3.953795629773575*^9}, {
  3.953795665727851*^9, 3.9537956661956673`*^9}, {3.954302948922488*^9, 
  3.954302953650218*^9}},
 CellLabel->"In[86]:=",ExpressionUUID->"244d6a3b-3738-4bb0-93cf-b9dbf55c0014"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   GraphicsBox[{{}, 
     InterpretationBox[{
       TagBox[
        TagBox[
         {RGBColor[1, 0, 0], PointSize[Medium], AbsoluteThickness[2], 
          PointBox[{{0.03123394777341315, -0.38704808938497415`}, {
           0.2796284089123977, -0.27960957666737696`}, {0.03123394777341315, 
           0.38704808938497415`}, {0.2796284089123977, 
           0.27960957666737696`}, {-0.05394890518121984, 
           0.}, {-0.04715967991782626, 0.05755820246540245}, {
           0.20313889165984333`, 
           0.}, {-0.04715967991782626, -0.05755820246540245}}]},
         Annotation[#, "Charting`Private`Tag#1"]& ],
        {"WolframDynamicHighlight", <|
         "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>}], 
       StyleBox[
        DynamicBox[(Charting`HighlightActionBox["DynamicHighlight", {}, 
          Slot["HighlightElements"], 
          Slot["LayoutOptions"], 
          Slot["Meta"], 
          Charting`HighlightActionFunction["DynamicHighlight", {{
             Annotation[{
               Directive[
                AbsoluteThickness[2], 
                RGBColor[1, 0, 0], 
                PointSize[Medium]], 
               
               Point[{{0.03123394777341315, -0.38704808938497415`}, {
                0.2796284089123977, -0.27960957666737696`}, {
                0.03123394777341315, 0.38704808938497415`}, {
                0.2796284089123977, 
                0.27960957666737696`}, {-0.05394890518121984, 
                0.}, {-0.04715967991782626, 0.05755820246540245}, {
                0.20313889165984333`, 
                0.}, {-0.04715967991782626, -0.05755820246540245}}]}, 
              "Charting`Private`Tag#1"]}}, <|
           "HighlightElements" -> <|
             "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>, 
            "LayoutOptions" -> <|
             "PanelPlotLayout" -> <||>, 
              "PlotRange" -> {{-0.05394890518121984, 
               0.2796284089123977}, {-0.38704808938497415`, 
               0.38704808938497415`}}, 
              "Frame" -> {{False, False}, {False, False}}, 
              "AxesOrigin" -> {0, 0}, "ImageSize" -> {360, 360/GoldenRatio}, 
              "Axes" -> {True, True}, "LabelStyle" -> {}, "AspectRatio" -> 
              GoldenRatio^(-1), "DefaultStyle" -> {
                Directive[
                 AbsoluteThickness[2], 
                 RGBColor[1, 0, 0], 
                 PointSize[Medium]]}, 
              "HighlightLabelingFunctions" -> <|
               "CoordinatesToolOptions" -> ({
                  Identity[
                   Part[#, 1]], 
                  Identity[
                   Part[#, 2]]}& ), 
                "ScalingFunctions" -> {{Identity, Identity}, {
                  Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
              False|>, 
            "Meta" -> <|
             "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, 
              "Function" -> ListPlot, "GroupHighlight" -> False|>|>]]& )[<|
          "HighlightElements" -> <|
            "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>, 
           "LayoutOptions" -> <|
            "PanelPlotLayout" -> <||>, 
             "PlotRange" -> {{-0.05394890518121984, 
              0.2796284089123977}, {-0.38704808938497415`, 
              0.38704808938497415`}}, 
             "Frame" -> {{False, False}, {False, False}}, 
             "AxesOrigin" -> {0, 0}, "ImageSize" -> {360, 360/GoldenRatio}, 
             "Axes" -> {True, True}, "LabelStyle" -> {}, "AspectRatio" -> 
             GoldenRatio^(-1), "DefaultStyle" -> {
               Directive[
                AbsoluteThickness[2], 
                RGBColor[1, 0, 0], 
                PointSize[Medium]]}, 
             "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
                 Identity[
                  Part[#, 1]], 
                 Identity[
                  Part[#, 2]]}& ), 
               "ScalingFunctions" -> {{Identity, Identity}, {
                 Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
             False|>, 
           "Meta" -> <|
            "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, 
             "Function" -> ListPlot, "GroupHighlight" -> False|>|>],
         ImageSizeCache->{{4.503599627370496*^15, -4.503599627370496*^15}, {
          4.503599627370496*^15, -4.503599627370496*^15}}],
        Selectable->False]},
      Annotation[{{
         Annotation[{
           Directive[
            AbsoluteThickness[2], 
            RGBColor[1, 0, 0], 
            PointSize[Medium]], 
           
           Point[{{0.03123394777341315, -0.38704808938497415`}, {
            0.2796284089123977, -0.27960957666737696`}, {0.03123394777341315, 
            0.38704808938497415`}, {0.2796284089123977, 
            0.27960957666737696`}, {-0.05394890518121984, 
            0.}, {-0.04715967991782626, 0.05755820246540245}, {
            0.20313889165984333`, 
            0.}, {-0.04715967991782626, -0.05755820246540245}}]}, 
          "Charting`Private`Tag#1"]}}, <|
       "HighlightElements" -> <|
         "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>, 
        "LayoutOptions" -> <|
         "PanelPlotLayout" -> <||>, 
          "PlotRange" -> {{-0.05394890518121984, 
           0.2796284089123977}, {-0.38704808938497415`, 
           0.38704808938497415`}}, 
          "Frame" -> {{False, False}, {False, False}}, "AxesOrigin" -> {0, 0},
           "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {True, True}, 
          "LabelStyle" -> {}, "AspectRatio" -> GoldenRatio^(-1), 
          "DefaultStyle" -> {
            Directive[
             AbsoluteThickness[2], 
             RGBColor[1, 0, 0], 
             PointSize[Medium]]}, 
          "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
              Identity[
               Part[#, 1]], 
              Identity[
               Part[#, 2]]}& ), 
            "ScalingFunctions" -> {{Identity, Identity}, {
              Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>,
         "Meta" -> <|
         "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
          ListPlot, "GroupHighlight" -> False|>|>, 
       "DynamicHighlight"]], {{}, {}}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{None, None},
    AxesOrigin->{0, 0},
    DisplayFunction->Identity,
    Frame->{{False, False}, {False, False}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    Method->{
     "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
      "DefaultGraphicsInteraction" -> {
       "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
        "Effects" -> {
         "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
          "Droplines" -> {
           "freeformCursorMode" -> True, 
            "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
      "DefaultMeshStyle" -> AbsolutePointSize[6], "DefaultPlotStyle" -> {
        Directive[
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[2]], 
        Directive[
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[2]], 
        Directive[
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[2]], 
        Directive[
         RGBColor[0.922526, 0.385626, 0.209179], 
         AbsoluteThickness[2]], 
        Directive[
         RGBColor[0.528488, 0.470624, 0.701351], 
         AbsoluteThickness[2]], 
        Directive[
         RGBColor[0.772079, 0.431554, 0.102387], 
         AbsoluteThickness[2]], 
        Directive[
         RGBColor[0.363898, 0.618501, 0.782349], 
         AbsoluteThickness[2]], 
        Directive[
         RGBColor[1, 0.75, 0], 
         AbsoluteThickness[2]], 
        Directive[
         RGBColor[0.647624, 0.37816, 0.614037], 
         AbsoluteThickness[2]], 
        Directive[
         RGBColor[0.571589, 0.586483, 0.], 
         AbsoluteThickness[2]], 
        Directive[
         RGBColor[0.915, 0.3325, 0.2125], 
         AbsoluteThickness[2]], 
        Directive[
         RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
         AbsoluteThickness[2]], 
        Directive[
         RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
         AbsoluteThickness[2]], 
        Directive[
         RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
         AbsoluteThickness[2]], 
        Directive[
         RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
         AbsoluteThickness[2]]}, "DomainPadding" -> Scaled[0.02], 
      "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> Scaled[0.05],
       "OptimizePlotMarkers" -> True, "IncludeHighlighting" -> "CurrentPoint",
       "HighlightStyle" -> Automatic, "OptimizePlotMarkers" -> True, 
      "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
          Identity[
           Part[#, 1]], 
          Identity[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          Identity[
           Part[#, 1]], 
          Identity[
           Part[#, 2]]}& )}},
    PlotRange->{{-0.05394890518121984, 
     0.2796284089123977}, {-0.38704808938497415`, 0.38704808938497415`}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.05], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}], ",", 
   GraphicsBox[{{}, 
     InterpretationBox[{
       TagBox[
        TagBox[
         {RGBColor[1, 0, 0], PointSize[Medium], AbsoluteThickness[2], 
          PointBox[{{0.08422538735696866, -0.29890101945003433`}, {
           0.3177768789101845, -0.21400836471833404`}, {0.08422538735696866, 
           0.29890101945003433`}, {0.3177768789101845, 
           0.21400836471833404`}, {-0.10157730540543894`, 
           0.}, {-0.08692000551159278, 0.06135725341404979}, {
           0.2835306787518963, 
           0.}, {-0.08692000551159278, -0.06135725341404979}}]},
         Annotation[#, "Charting`Private`Tag#1"]& ],
        {"WolframDynamicHighlight", <|
         "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>}], 
       StyleBox[
        DynamicBox[(Charting`HighlightActionBox["DynamicHighlight", {}, 
          Slot["HighlightElements"], 
          Slot["LayoutOptions"], 
          Slot["Meta"], 
          Charting`HighlightActionFunction["DynamicHighlight", {{
             Annotation[{
               Directive[
                AbsoluteThickness[2], 
                RGBColor[1, 0, 0], 
                PointSize[Medium]], 
               
               Point[{{0.08422538735696866, -0.29890101945003433`}, {
                0.3177768789101845, -0.21400836471833404`}, {
                0.08422538735696866, 0.29890101945003433`}, {
                0.3177768789101845, 
                0.21400836471833404`}, {-0.10157730540543894`, 
                0.}, {-0.08692000551159278, 0.06135725341404979}, {
                0.2835306787518963, 
                0.}, {-0.08692000551159278, -0.06135725341404979}}]}, 
              "Charting`Private`Tag#1"]}}, <|
           "HighlightElements" -> <|
             "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>, 
            "LayoutOptions" -> <|
             "PanelPlotLayout" -> <||>, 
              "PlotRange" -> {{-0.10157730540543894`, 
               0.3177768789101845}, {-0.29890101945003433`, 
               0.29890101945003433`}}, 
              "Frame" -> {{False, False}, {False, False}}, 
              "AxesOrigin" -> {0, 0}, "ImageSize" -> {360, 360/GoldenRatio}, 
              "Axes" -> {True, True}, "LabelStyle" -> {}, "AspectRatio" -> 
              GoldenRatio^(-1), "DefaultStyle" -> {
                Directive[
                 AbsoluteThickness[2], 
                 RGBColor[1, 0, 0], 
                 PointSize[Medium]]}, 
              "HighlightLabelingFunctions" -> <|
               "CoordinatesToolOptions" -> ({
                  Identity[
                   Part[#, 1]], 
                  Identity[
                   Part[#, 2]]}& ), 
                "ScalingFunctions" -> {{Identity, Identity}, {
                  Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
              False|>, 
            "Meta" -> <|
             "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, 
              "Function" -> ListPlot, "GroupHighlight" -> False|>|>]]& )[<|
          "HighlightElements" -> <|
            "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>, 
           "LayoutOptions" -> <|
            "PanelPlotLayout" -> <||>, 
             "PlotRange" -> {{-0.10157730540543894`, 
              0.3177768789101845}, {-0.29890101945003433`, 
              0.29890101945003433`}}, 
             "Frame" -> {{False, False}, {False, False}}, 
             "AxesOrigin" -> {0, 0}, "ImageSize" -> {360, 360/GoldenRatio}, 
             "Axes" -> {True, True}, "LabelStyle" -> {}, "AspectRatio" -> 
             GoldenRatio^(-1), "DefaultStyle" -> {
               Directive[
                AbsoluteThickness[2], 
                RGBColor[1, 0, 0], 
                PointSize[Medium]]}, 
             "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
                 Identity[
                  Part[#, 1]], 
                 Identity[
                  Part[#, 2]]}& ), 
               "ScalingFunctions" -> {{Identity, Identity}, {
                 Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
             False|>, 
           "Meta" -> <|
            "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, 
             "Function" -> ListPlot, "GroupHighlight" -> False|>|>],
         ImageSizeCache->{{4.503599627370496*^15, -4.503599627370496*^15}, {
          4.503599627370496*^15, -4.503599627370496*^15}}],
        Selectable->False]},
      Annotation[{{
         Annotation[{
           Directive[
            AbsoluteThickness[2], 
            RGBColor[1, 0, 0], 
            PointSize[Medium]], 
           
           Point[{{0.08422538735696866, -0.29890101945003433`}, {
            0.3177768789101845, -0.21400836471833404`}, {0.08422538735696866, 
            0.29890101945003433`}, {0.3177768789101845, 
            0.21400836471833404`}, {-0.10157730540543894`, 
            0.}, {-0.08692000551159278, 0.06135725341404979}, {
            0.2835306787518963, 
            0.}, {-0.08692000551159278, -0.06135725341404979}}]}, 
          "Charting`Private`Tag#1"]}}, <|
       "HighlightElements" -> <|
         "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>, 
        "LayoutOptions" -> <|
         "PanelPlotLayout" -> <||>, 
          "PlotRange" -> {{-0.10157730540543894`, 
           0.3177768789101845}, {-0.29890101945003433`, 
           0.29890101945003433`}}, 
          "Frame" -> {{False, False}, {False, False}}, "AxesOrigin" -> {0, 0},
           "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {True, True}, 
          "LabelStyle" -> {}, "AspectRatio" -> GoldenRatio^(-1), 
          "DefaultStyle" -> {
            Directive[
             AbsoluteThickness[2], 
             RGBColor[1, 0, 0], 
             PointSize[Medium]]}, 
          "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
              Identity[
               Part[#, 1]], 
              Identity[
               Part[#, 2]]}& ), 
            "ScalingFunctions" -> {{Identity, Identity}, {
              Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>,
         "Meta" -> <|
         "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
          ListPlot, "GroupHighlight" -> False|>|>, 
       "DynamicHighlight"]], {{}, {}}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{None, None},
    AxesOrigin->{0, 0},
    DisplayFunction->Identity,
    Frame->{{False, False}, {False, False}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    Method->{
     "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
      "DefaultGraphicsInteraction" -> {
       "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
        "Effects" -> {
         "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
          "Droplines" -> {
           "freeformCursorMode" -> True, 
            "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
      "DefaultMeshStyle" -> AbsolutePointSize[6], "DefaultPlotStyle" -> {
        Directive[
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[2]], 
        Directive[
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[2]], 
        Directive[
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[2]], 
        Directive[
         RGBColor[0.922526, 0.385626, 0.209179], 
         AbsoluteThickness[2]], 
        Directive[
         RGBColor[0.528488, 0.470624, 0.701351], 
         AbsoluteThickness[2]], 
        Directive[
         RGBColor[0.772079, 0.431554, 0.102387], 
         AbsoluteThickness[2]], 
        Directive[
         RGBColor[0.363898, 0.618501, 0.782349], 
         AbsoluteThickness[2]], 
        Directive[
         RGBColor[1, 0.75, 0], 
         AbsoluteThickness[2]], 
        Directive[
         RGBColor[0.647624, 0.37816, 0.614037], 
         AbsoluteThickness[2]], 
        Directive[
         RGBColor[0.571589, 0.586483, 0.], 
         AbsoluteThickness[2]], 
        Directive[
         RGBColor[0.915, 0.3325, 0.2125], 
         AbsoluteThickness[2]], 
        Directive[
         RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
         AbsoluteThickness[2]], 
        Directive[
         RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
         AbsoluteThickness[2]], 
        Directive[
         RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
         AbsoluteThickness[2]], 
        Directive[
         RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
         AbsoluteThickness[2]]}, "DomainPadding" -> Scaled[0.02], 
      "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> Scaled[0.05],
       "OptimizePlotMarkers" -> True, "IncludeHighlighting" -> "CurrentPoint",
       "HighlightStyle" -> Automatic, "OptimizePlotMarkers" -> True, 
      "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
          Identity[
           Part[#, 1]], 
          Identity[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          Identity[
           Part[#, 1]], 
          Identity[
           Part[#, 2]]}& )}},
    PlotRange->{{-0.10157730540543894`, 
     0.3177768789101845}, {-0.29890101945003433`, 0.29890101945003433`}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.05], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}], ",", 
   GraphicsBox[{{}, 
     InterpretationBox[{
       TagBox[
        TagBox[
         {RGBColor[1, 0, 0], PointSize[Medium], AbsoluteThickness[2], 
          PointBox[{{0.13110746880922272`, -0.23595003589334473`}, {
           0.2983733005702336, -0.1835220979898622}, {0.13110746880922272`, 
           0.23595003589334473`}, {0.2983733005702336, 
           0.1835220979898622}, {-0.1438507414523405, 
           0.}, {-0.12028730745899054`, 0.06566767948749361}, {
           0.31865945156073566`, 
           0.}, {-0.12028730745899054`, -0.06566767948749361}}]},
         Annotation[#, "Charting`Private`Tag#1"]& ],
        {"WolframDynamicHighlight", <|
         "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>}], 
       StyleBox[
        DynamicBox[(Charting`HighlightActionBox["DynamicHighlight", {}, 
          Slot["HighlightElements"], 
          Slot["LayoutOptions"], 
          Slot["Meta"], 
          Charting`HighlightActionFunction["DynamicHighlight", {{
             Annotation[{
               Directive[
                AbsoluteThickness[2], 
                RGBColor[1, 0, 0], 
                PointSize[Medium]], 
               
               Point[{{0.13110746880922272`, -0.23595003589334473`}, {
                0.2983733005702336, -0.1835220979898622}, {
                0.13110746880922272`, 0.23595003589334473`}, {
                0.2983733005702336, 0.1835220979898622}, {-0.1438507414523405,
                 0.}, {-0.12028730745899054`, 0.06566767948749361}, {
                0.31865945156073566`, 
                0.}, {-0.12028730745899054`, -0.06566767948749361}}]}, 
              "Charting`Private`Tag#1"]}}, <|
           "HighlightElements" -> <|
             "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>, 
            "LayoutOptions" -> <|
             "PanelPlotLayout" -> <||>, 
              "PlotRange" -> {{-0.1438507414523405, 
               0.31865945156073566`}, {-0.23595003589334473`, 
               0.23595003589334473`}}, 
              "Frame" -> {{False, False}, {False, False}}, 
              "AxesOrigin" -> {0, 0}, "ImageSize" -> {360, 360/GoldenRatio}, 
              "Axes" -> {True, True}, "LabelStyle" -> {}, "AspectRatio" -> 
              GoldenRatio^(-1), "DefaultStyle" -> {
                Directive[
                 AbsoluteThickness[2], 
                 RGBColor[1, 0, 0], 
                 PointSize[Medium]]}, 
              "HighlightLabelingFunctions" -> <|
               "CoordinatesToolOptions" -> ({
                  Identity[
                   Part[#, 1]], 
                  Identity[
                   Part[#, 2]]}& ), 
                "ScalingFunctions" -> {{Identity, Identity}, {
                  Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
              False|>, 
            "Meta" -> <|
             "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, 
              "Function" -> ListPlot, "GroupHighlight" -> False|>|>]]& )[<|
          "HighlightElements" -> <|
            "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>, 
           "LayoutOptions" -> <|
            "PanelPlotLayout" -> <||>, 
             "PlotRange" -> {{-0.1438507414523405, 
              0.31865945156073566`}, {-0.23595003589334473`, 
              0.23595003589334473`}}, 
             "Frame" -> {{False, False}, {False, False}}, 
             "AxesOrigin" -> {0, 0}, "ImageSize" -> {360, 360/GoldenRatio}, 
             "Axes" -> {True, True}, "LabelStyle" -> {}, "AspectRatio" -> 
             GoldenRatio^(-1), "DefaultStyle" -> {
               Directive[
                AbsoluteThickness[2], 
                RGBColor[1, 0, 0], 
                PointSize[Medium]]}, 
             "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
                 Identity[
                  Part[#, 1]], 
                 Identity[
                  Part[#, 2]]}& ), 
               "ScalingFunctions" -> {{Identity, Identity}, {
                 Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
             False|>, 
           "Meta" -> <|
            "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, 
             "Function" -> ListPlot, "GroupHighlight" -> False|>|>],
         ImageSizeCache->{{4.503599627370496*^15, -4.503599627370496*^15}, {
          4.503599627370496*^15, -4.503599627370496*^15}}],
        Selectable->False]},
      Annotation[{{
         Annotation[{
           Directive[
            AbsoluteThickness[2], 
            RGBColor[1, 0, 0], 
            PointSize[Medium]], 
           
           Point[{{0.13110746880922272`, -0.23595003589334473`}, {
            0.2983733005702336, -0.1835220979898622}, {0.13110746880922272`, 
            0.23595003589334473`}, {0.2983733005702336, 
            0.1835220979898622}, {-0.1438507414523405, 
            0.}, {-0.12028730745899054`, 0.06566767948749361}, {
            0.31865945156073566`, 
            0.}, {-0.12028730745899054`, -0.06566767948749361}}]}, 
          "Charting`Private`Tag#1"]}}, <|
       "HighlightElements" -> <|
         "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>, 
        "LayoutOptions" -> <|
         "PanelPlotLayout" -> <||>, 
          "PlotRange" -> {{-0.1438507414523405, 
           0.31865945156073566`}, {-0.23595003589334473`, 
           0.23595003589334473`}}, 
          "Frame" -> {{False, False}, {False, False}}, "AxesOrigin" -> {0, 0},
           "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {True, True}, 
          "LabelStyle" -> {}, "AspectRatio" -> GoldenRatio^(-1), 
          "DefaultStyle" -> {
            Directive[
             AbsoluteThickness[2], 
             RGBColor[1, 0, 0], 
             PointSize[Medium]]}, 
          "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
              Identity[
               Part[#, 1]], 
              Identity[
               Part[#, 2]]}& ), 
            "ScalingFunctions" -> {{Identity, Identity}, {
              Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>,
         "Meta" -> <|
         "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
          ListPlot, "GroupHighlight" -> False|>|>, 
       "DynamicHighlight"]], {{}, {}}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{None, None},
    AxesOrigin->{0, 0},
    DisplayFunction->Identity,
    Frame->{{False, False}, {False, False}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    Method->{
     "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
      "DefaultGraphicsInteraction" -> {
       "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
        "Effects" -> {
         "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
          "Droplines" -> {
           "freeformCursorMode" -> True, 
            "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
      "DefaultMeshStyle" -> AbsolutePointSize[6], "DefaultPlotStyle" -> {
        Directive[
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[2]], 
        Directive[
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[2]], 
        Directive[
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[2]], 
        Directive[
         RGBColor[0.922526, 0.385626, 0.209179], 
         AbsoluteThickness[2]], 
        Directive[
         RGBColor[0.528488, 0.470624, 0.701351], 
         AbsoluteThickness[2]], 
        Directive[
         RGBColor[0.772079, 0.431554, 0.102387], 
         AbsoluteThickness[2]], 
        Directive[
         RGBColor[0.363898, 0.618501, 0.782349], 
         AbsoluteThickness[2]], 
        Directive[
         RGBColor[1, 0.75, 0], 
         AbsoluteThickness[2]], 
        Directive[
         RGBColor[0.647624, 0.37816, 0.614037], 
         AbsoluteThickness[2]], 
        Directive[
         RGBColor[0.571589, 0.586483, 0.], 
         AbsoluteThickness[2]], 
        Directive[
         RGBColor[0.915, 0.3325, 0.2125], 
         AbsoluteThickness[2]], 
        Directive[
         RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
         AbsoluteThickness[2]], 
        Directive[
         RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
         AbsoluteThickness[2]], 
        Directive[
         RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
         AbsoluteThickness[2]], 
        Directive[
         RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
         AbsoluteThickness[2]]}, "DomainPadding" -> Scaled[0.02], 
      "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> Scaled[0.05],
       "OptimizePlotMarkers" -> True, "IncludeHighlighting" -> "CurrentPoint",
       "HighlightStyle" -> Automatic, "OptimizePlotMarkers" -> True, 
      "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
          Identity[
           Part[#, 1]], 
          Identity[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          Identity[
           Part[#, 1]], 
          Identity[
           Part[#, 2]]}& )}},
    PlotRange->{{-0.1438507414523405, 
     0.31865945156073566`}, {-0.23595003589334473`, 0.23595003589334473`}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.05], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}], ",", 
   GraphicsBox[{{}, 
     InterpretationBox[{
       TagBox[
        TagBox[
         {RGBColor[1, 0, 0], PointSize[Medium], AbsoluteThickness[2], 
          PointBox[{{0.16591068104035053`, -0.1913417161825449}, {
           0.25512228824339317`, -0.16666666666666666`}, {
           0.16591068104035053`, 0.1913417161825449}, {0.25512228824339317`, 
           0.16666666666666666`}, {-0.1814791290228547, 
           0.}, {-0.14796010969859463`, 0.07068125923672587}, {
           0.33182136208070107`, 
           0.}, {-0.14796010969859463`, -0.07068125923672587}}]},
         Annotation[#, "Charting`Private`Tag#1"]& ],
        {"WolframDynamicHighlight", <|
         "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>}], 
       StyleBox[
        DynamicBox[(Charting`HighlightActionBox["DynamicHighlight", {}, 
          Slot["HighlightElements"], 
          Slot["LayoutOptions"], 
          Slot["Meta"], 
          Charting`HighlightActionFunction["DynamicHighlight", {{
             Annotation[{
               Directive[
                AbsoluteThickness[2], 
                RGBColor[1, 0, 0], 
                PointSize[Medium]], 
               
               Point[{{0.16591068104035053`, -0.1913417161825449}, {
                0.25512228824339317`, -0.16666666666666666`}, {
                0.16591068104035053`, 0.1913417161825449}, {
                0.25512228824339317`, 
                0.16666666666666666`}, {-0.1814791290228547, 
                0.}, {-0.14796010969859463`, 0.07068125923672587}, {
                0.33182136208070107`, 
                0.}, {-0.14796010969859463`, -0.07068125923672587}}]}, 
              "Charting`Private`Tag#1"]}}, <|
           "HighlightElements" -> <|
             "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>, 
            "LayoutOptions" -> <|
             "PanelPlotLayout" -> <||>, 
              "PlotRange" -> {{-0.1814791290228547, 
               0.33182136208070107`}, {-0.1913417161825449, 
               0.1913417161825449}}, 
              "Frame" -> {{False, False}, {False, False}}, 
              "AxesOrigin" -> {0, 0}, "ImageSize" -> {360, 360/GoldenRatio}, 
              "Axes" -> {True, True}, "LabelStyle" -> {}, "AspectRatio" -> 
              GoldenRatio^(-1), "DefaultStyle" -> {
                Directive[
                 AbsoluteThickness[2], 
                 RGBColor[1, 0, 0], 
                 PointSize[Medium]]}, 
              "HighlightLabelingFunctions" -> <|
               "CoordinatesToolOptions" -> ({
                  Identity[
                   Part[#, 1]], 
                  Identity[
                   Part[#, 2]]}& ), 
                "ScalingFunctions" -> {{Identity, Identity}, {
                  Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
              False|>, 
            "Meta" -> <|
             "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, 
              "Function" -> ListPlot, "GroupHighlight" -> False|>|>]]& )[<|
          "HighlightElements" -> <|
            "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>, 
           "LayoutOptions" -> <|
            "PanelPlotLayout" -> <||>, 
             "PlotRange" -> {{-0.1814791290228547, 
              0.33182136208070107`}, {-0.1913417161825449, 
              0.1913417161825449}}, 
             "Frame" -> {{False, False}, {False, False}}, 
             "AxesOrigin" -> {0, 0}, "ImageSize" -> {360, 360/GoldenRatio}, 
             "Axes" -> {True, True}, "LabelStyle" -> {}, "AspectRatio" -> 
             GoldenRatio^(-1), "DefaultStyle" -> {
               Directive[
                AbsoluteThickness[2], 
                RGBColor[1, 0, 0], 
                PointSize[Medium]]}, 
             "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
                 Identity[
                  Part[#, 1]], 
                 Identity[
                  Part[#, 2]]}& ), 
               "ScalingFunctions" -> {{Identity, Identity}, {
                 Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
             False|>, 
           "Meta" -> <|
            "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, 
             "Function" -> ListPlot, "GroupHighlight" -> False|>|>],
         ImageSizeCache->{{4.503599627370496*^15, -4.503599627370496*^15}, {
          4.503599627370496*^15, -4.503599627370496*^15}}],
        Selectable->False]},
      Annotation[{{
         Annotation[{
           Directive[
            AbsoluteThickness[2], 
            RGBColor[1, 0, 0], 
            PointSize[Medium]], 
           
           Point[{{0.16591068104035053`, -0.1913417161825449}, {
            0.25512228824339317`, -0.16666666666666666`}, {
            0.16591068104035053`, 0.1913417161825449}, {0.25512228824339317`, 
            0.16666666666666666`}, {-0.1814791290228547, 
            0.}, {-0.14796010969859463`, 0.07068125923672587}, {
            0.33182136208070107`, 
            0.}, {-0.14796010969859463`, -0.07068125923672587}}]}, 
          "Charting`Private`Tag#1"]}}, <|
       "HighlightElements" -> <|
         "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>, 
        "LayoutOptions" -> <|
         "PanelPlotLayout" -> <||>, 
          "PlotRange" -> {{-0.1814791290228547, 
           0.33182136208070107`}, {-0.1913417161825449, 0.1913417161825449}}, 
          "Frame" -> {{False, False}, {False, False}}, "AxesOrigin" -> {0, 0},
           "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {True, True}, 
          "LabelStyle" -> {}, "AspectRatio" -> GoldenRatio^(-1), 
          "DefaultStyle" -> {
            Directive[
             AbsoluteThickness[2], 
             RGBColor[1, 0, 0], 
             PointSize[Medium]]}, 
          "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
              Identity[
               Part[#, 1]], 
              Identity[
               Part[#, 2]]}& ), 
            "ScalingFunctions" -> {{Identity, Identity}, {
              Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>,
         "Meta" -> <|
         "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
          ListPlot, "GroupHighlight" -> False|>|>, 
       "DynamicHighlight"]], {{}, {}}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{None, None},
    AxesOrigin->{0, 0},
    DisplayFunction->Identity,
    Frame->{{False, False}, {False, False}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    Method->{
     "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
      "DefaultGraphicsInteraction" -> {
       "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
        "Effects" -> {
         "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
          "Droplines" -> {
           "freeformCursorMode" -> True, 
            "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
      "DefaultMeshStyle" -> AbsolutePointSize[6], "DefaultPlotStyle" -> {
        Directive[
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[2]], 
        Directive[
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[2]], 
        Directive[
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[2]], 
        Directive[
         RGBColor[0.922526, 0.385626, 0.209179], 
         AbsoluteThickness[2]], 
        Directive[
         RGBColor[0.528488, 0.470624, 0.701351], 
         AbsoluteThickness[2]], 
        Directive[
         RGBColor[0.772079, 0.431554, 0.102387], 
         AbsoluteThickness[2]], 
        Directive[
         RGBColor[0.363898, 0.618501, 0.782349], 
         AbsoluteThickness[2]], 
        Directive[
         RGBColor[1, 0.75, 0], 
         AbsoluteThickness[2]], 
        Directive[
         RGBColor[0.647624, 0.37816, 0.614037], 
         AbsoluteThickness[2]], 
        Directive[
         RGBColor[0.571589, 0.586483, 0.], 
         AbsoluteThickness[2]], 
        Directive[
         RGBColor[0.915, 0.3325, 0.2125], 
         AbsoluteThickness[2]], 
        Directive[
         RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
         AbsoluteThickness[2]], 
        Directive[
         RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
         AbsoluteThickness[2]], 
        Directive[
         RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
         AbsoluteThickness[2]], 
        Directive[
         RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
         AbsoluteThickness[2]]}, "DomainPadding" -> Scaled[0.02], 
      "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> Scaled[0.05],
       "OptimizePlotMarkers" -> True, "IncludeHighlighting" -> "CurrentPoint",
       "HighlightStyle" -> Automatic, "OptimizePlotMarkers" -> True, 
      "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
          Identity[
           Part[#, 1]], 
          Identity[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          Identity[
           Part[#, 1]], 
          Identity[
           Part[#, 2]]}& )}},
    PlotRange->{{-0.1814791290228547, 
     0.33182136208070107`}, {-0.1913417161825449, 0.1913417161825449}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.05], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}], ",", 
   GraphicsBox[{{}, 
     InterpretationBox[{
       TagBox[
        TagBox[
         {RGBColor[1, 0, 0], PointSize[Medium], AbsoluteThickness[2], 
          PointBox[{{0.18917438484041743`, -0.15917474971775553`}, {
           0.19934505851118434`, -0.15663868241925963`}, {
           0.18917438484041743`, 0.15917474971775553`}, {0.19934505851118434`,
            0.15663868241925963`}, {-0.21496557885394987`, 
           0.}, {-0.17038068461855593`, 0.07662825961190016}, {
           0.3323677567054131, 
           0.}, {-0.17038068461855593`, -0.07662825961190016}}]},
         Annotation[#, "Charting`Private`Tag#1"]& ],
        {"WolframDynamicHighlight", <|
         "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>}], 
       StyleBox[
        DynamicBox[(Charting`HighlightActionBox["DynamicHighlight", {}, 
          Slot["HighlightElements"], 
          Slot["LayoutOptions"], 
          Slot["Meta"], 
          Charting`HighlightActionFunction["DynamicHighlight", {{
             Annotation[{
               Directive[
                AbsoluteThickness[2], 
                RGBColor[1, 0, 0], 
                PointSize[Medium]], 
               
               Point[{{0.18917438484041743`, -0.15917474971775553`}, {
                0.19934505851118434`, -0.15663868241925963`}, {
                0.18917438484041743`, 0.15917474971775553`}, {
                0.19934505851118434`, 
                0.15663868241925963`}, {-0.21496557885394987`, 
                0.}, {-0.17038068461855593`, 0.07662825961190016}, {
                0.3323677567054131, 
                0.}, {-0.17038068461855593`, -0.07662825961190016}}]}, 
              "Charting`Private`Tag#1"]}}, <|
           "HighlightElements" -> <|
             "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>, 
            "LayoutOptions" -> <|
             "PanelPlotLayout" -> <||>, 
              "PlotRange" -> {{-0.21496557885394987`, 
               0.3323677567054131}, {-0.15917474971775553`, 
               0.15917474971775553`}}, 
              "Frame" -> {{False, False}, {False, False}}, 
              "AxesOrigin" -> {0, 0}, "ImageSize" -> {360, 360/GoldenRatio}, 
              "Axes" -> {True, True}, "LabelStyle" -> {}, "AspectRatio" -> 
              GoldenRatio^(-1), "DefaultStyle" -> {
                Directive[
                 AbsoluteThickness[2], 
                 RGBColor[1, 0, 0], 
                 PointSize[Medium]]}, 
              "HighlightLabelingFunctions" -> <|
               "CoordinatesToolOptions" -> ({
                  Identity[
                   Part[#, 1]], 
                  Identity[
                   Part[#, 2]]}& ), 
                "ScalingFunctions" -> {{Identity, Identity}, {
                  Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
              False|>, 
            "Meta" -> <|
             "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, 
              "Function" -> ListPlot, "GroupHighlight" -> False|>|>]]& )[<|
          "HighlightElements" -> <|
            "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>, 
           "LayoutOptions" -> <|
            "PanelPlotLayout" -> <||>, 
             "PlotRange" -> {{-0.21496557885394987`, 
              0.3323677567054131}, {-0.15917474971775553`, 
              0.15917474971775553`}}, 
             "Frame" -> {{False, False}, {False, False}}, 
             "AxesOrigin" -> {0, 0}, "ImageSize" -> {360, 360/GoldenRatio}, 
             "Axes" -> {True, True}, "LabelStyle" -> {}, "AspectRatio" -> 
             GoldenRatio^(-1), "DefaultStyle" -> {
               Directive[
                AbsoluteThickness[2], 
                RGBColor[1, 0, 0], 
                PointSize[Medium]]}, 
             "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
                 Identity[
                  Part[#, 1]], 
                 Identity[
                  Part[#, 2]]}& ), 
               "ScalingFunctions" -> {{Identity, Identity}, {
                 Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
             False|>, 
           "Meta" -> <|
            "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, 
             "Function" -> ListPlot, "GroupHighlight" -> False|>|>],
         ImageSizeCache->{{4.503599627370496*^15, -4.503599627370496*^15}, {
          4.503599627370496*^15, -4.503599627370496*^15}}],
        Selectable->False]},
      Annotation[{{
         Annotation[{
           Directive[
            AbsoluteThickness[2], 
            RGBColor[1, 0, 0], 
            PointSize[Medium]], 
           
           Point[{{0.18917438484041743`, -0.15917474971775553`}, {
            0.19934505851118434`, -0.15663868241925963`}, {
            0.18917438484041743`, 0.15917474971775553`}, {
            0.19934505851118434`, 
            0.15663868241925963`}, {-0.21496557885394987`, 
            0.}, {-0.17038068461855593`, 0.07662825961190016}, {
            0.3323677567054131, 
            0.}, {-0.17038068461855593`, -0.07662825961190016}}]}, 
          "Charting`Private`Tag#1"]}}, <|
       "HighlightElements" -> <|
         "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>, 
        "LayoutOptions" -> <|
         "PanelPlotLayout" -> <||>, 
          "PlotRange" -> {{-0.21496557885394987`, 
           0.3323677567054131}, {-0.15917474971775553`, 
           0.15917474971775553`}}, 
          "Frame" -> {{False, False}, {False, False}}, "AxesOrigin" -> {0, 0},
           "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {True, True}, 
          "LabelStyle" -> {}, "AspectRatio" -> GoldenRatio^(-1), 
          "DefaultStyle" -> {
            Directive[
             AbsoluteThickness[2], 
             RGBColor[1, 0, 0], 
             PointSize[Medium]]}, 
          "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
              Identity[
               Part[#, 1]], 
              Identity[
               Part[#, 2]]}& ), 
            "ScalingFunctions" -> {{Identity, Identity}, {
              Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>,
         "Meta" -> <|
         "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
          ListPlot, "GroupHighlight" -> False|>|>, 
       "DynamicHighlight"]], {{}, {}}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{None, None},
    AxesOrigin->{0, 0},
    DisplayFunction->Identity,
    Frame->{{False, False}, {False, False}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    Method->{
     "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
      "DefaultGraphicsInteraction" -> {
       "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
        "Effects" -> {
         "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
          "Droplines" -> {
           "freeformCursorMode" -> True, 
            "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
      "DefaultMeshStyle" -> AbsolutePointSize[6], "DefaultPlotStyle" -> {
        Directive[
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[2]], 
        Directive[
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[2]], 
        Directive[
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[2]], 
        Directive[
         RGBColor[0.922526, 0.385626, 0.209179], 
         AbsoluteThickness[2]], 
        Directive[
         RGBColor[0.528488, 0.470624, 0.701351], 
         AbsoluteThickness[2]], 
        Directive[
         RGBColor[0.772079, 0.431554, 0.102387], 
         AbsoluteThickness[2]], 
        Directive[
         RGBColor[0.363898, 0.618501, 0.782349], 
         AbsoluteThickness[2]], 
        Directive[
         RGBColor[1, 0.75, 0], 
         AbsoluteThickness[2]], 
        Directive[
         RGBColor[0.647624, 0.37816, 0.614037], 
         AbsoluteThickness[2]], 
        Directive[
         RGBColor[0.571589, 0.586483, 0.], 
         AbsoluteThickness[2]], 
        Directive[
         RGBColor[0.915, 0.3325, 0.2125], 
         AbsoluteThickness[2]], 
        Directive[
         RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
         AbsoluteThickness[2]], 
        Directive[
         RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
         AbsoluteThickness[2]], 
        Directive[
         RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
         AbsoluteThickness[2]], 
        Directive[
         RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
         AbsoluteThickness[2]]}, "DomainPadding" -> Scaled[0.02], 
      "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> Scaled[0.05],
       "OptimizePlotMarkers" -> True, "IncludeHighlighting" -> "CurrentPoint",
       "HighlightStyle" -> Automatic, "OptimizePlotMarkers" -> True, 
      "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
          Identity[
           Part[#, 1]], 
          Identity[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          Identity[
           Part[#, 1]], 
          Identity[
           Part[#, 2]]}& )}},
    PlotRange->{{-0.21496557885394987`, 
     0.3323677567054131}, {-0.15917474971775553`, 0.15917474971775553`}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.05], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}], ",", 
   GraphicsBox[{{}, 
     InterpretationBox[{
       TagBox[
        TagBox[
         {RGBColor[1, 0, 0], PointSize[Medium], AbsoluteThickness[2], 
          PointBox[{{0.20273017010969008`, -0.13541818830630567`}, {
           0.13630502525008253`, -0.15066174518176742`}, {
           0.20273017010969008`, 0.13541818830630567`}, {0.13630502525008253`,
            0.15066174518176742`}, {-0.24463211264929655`, 
           0.}, {-0.187761274920686, 0.08380254865595828}, {
           0.32471160712296326`, 
           0.}, {-0.187761274920686, -0.08380254865595828}}]},
         Annotation[#, "Charting`Private`Tag#1"]& ],
        {"WolframDynamicHighlight", <|
         "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>}], 
       StyleBox[
        DynamicBox[(Charting`HighlightActionBox["DynamicHighlight", {}, 
          Slot["HighlightElements"], 
          Slot["LayoutOptions"], 
          Slot["Meta"], 
          Charting`HighlightActionFunction["DynamicHighlight", {{
             Annotation[{
               Directive[
                AbsoluteThickness[2], 
                RGBColor[1, 0, 0], 
                PointSize[Medium]], 
               
               Point[{{0.20273017010969008`, -0.13541818830630567`}, {
                0.13630502525008253`, -0.15066174518176742`}, {
                0.20273017010969008`, 0.13541818830630567`}, {
                0.13630502525008253`, 
                0.15066174518176742`}, {-0.24463211264929655`, 
                0.}, {-0.187761274920686, 0.08380254865595828}, {
                0.32471160712296326`, 
                0.}, {-0.187761274920686, -0.08380254865595828}}]}, 
              "Charting`Private`Tag#1"]}}, <|
           "HighlightElements" -> <|
             "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>, 
            "LayoutOptions" -> <|
             "PanelPlotLayout" -> <||>, 
              "PlotRange" -> {{-0.24463211264929655`, 
               0.32471160712296326`}, {-0.15066174518176742`, 
               0.15066174518176742`}}, 
              "Frame" -> {{False, False}, {False, False}}, 
              "AxesOrigin" -> {0, 0}, "ImageSize" -> {360, 360/GoldenRatio}, 
              "Axes" -> {True, True}, "LabelStyle" -> {}, "AspectRatio" -> 
              GoldenRatio^(-1), "DefaultStyle" -> {
                Directive[
                 AbsoluteThickness[2], 
                 RGBColor[1, 0, 0], 
                 PointSize[Medium]]}, 
              "HighlightLabelingFunctions" -> <|
               "CoordinatesToolOptions" -> ({
                  Identity[
                   Part[#, 1]], 
                  Identity[
                   Part[#, 2]]}& ), 
                "ScalingFunctions" -> {{Identity, Identity}, {
                  Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
              False|>, 
            "Meta" -> <|
             "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, 
              "Function" -> ListPlot, "GroupHighlight" -> False|>|>]]& )[<|
          "HighlightElements" -> <|
            "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>, 
           "LayoutOptions" -> <|
            "PanelPlotLayout" -> <||>, 
             "PlotRange" -> {{-0.24463211264929655`, 
              0.32471160712296326`}, {-0.15066174518176742`, 
              0.15066174518176742`}}, 
             "Frame" -> {{False, False}, {False, False}}, 
             "AxesOrigin" -> {0, 0}, "ImageSize" -> {360, 360/GoldenRatio}, 
             "Axes" -> {True, True}, "LabelStyle" -> {}, "AspectRatio" -> 
             GoldenRatio^(-1), "DefaultStyle" -> {
               Directive[
                AbsoluteThickness[2], 
                RGBColor[1, 0, 0], 
                PointSize[Medium]]}, 
             "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
                 Identity[
                  Part[#, 1]], 
                 Identity[
                  Part[#, 2]]}& ), 
               "ScalingFunctions" -> {{Identity, Identity}, {
                 Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
             False|>, 
           "Meta" -> <|
            "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, 
             "Function" -> ListPlot, "GroupHighlight" -> False|>|>],
         ImageSizeCache->{{4.503599627370496*^15, -4.503599627370496*^15}, {
          4.503599627370496*^15, -4.503599627370496*^15}}],
        Selectable->False]},
      Annotation[{{
         Annotation[{
           Directive[
            AbsoluteThickness[2], 
            RGBColor[1, 0, 0], 
            PointSize[Medium]], 
           
           Point[{{0.20273017010969008`, -0.13541818830630567`}, {
            0.13630502525008253`, -0.15066174518176742`}, {
            0.20273017010969008`, 0.13541818830630567`}, {
            0.13630502525008253`, 
            0.15066174518176742`}, {-0.24463211264929655`, 
            0.}, {-0.187761274920686, 0.08380254865595828}, {
            0.32471160712296326`, 
            0.}, {-0.187761274920686, -0.08380254865595828}}]}, 
          "Charting`Private`Tag#1"]}}, <|
       "HighlightElements" -> <|
         "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>, 
        "LayoutOptions" -> <|
         "PanelPlotLayout" -> <||>, 
          "PlotRange" -> {{-0.24463211264929655`, 
           0.32471160712296326`}, {-0.15066174518176742`, 
           0.15066174518176742`}}, 
          "Frame" -> {{False, False}, {False, False}}, "AxesOrigin" -> {0, 0},
           "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {True, True}, 
          "LabelStyle" -> {}, "AspectRatio" -> GoldenRatio^(-1), 
          "DefaultStyle" -> {
            Directive[
             AbsoluteThickness[2], 
             RGBColor[1, 0, 0], 
             PointSize[Medium]]}, 
          "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
              Identity[
               Part[#, 1]], 
              Identity[
               Part[#, 2]]}& ), 
            "ScalingFunctions" -> {{Identity, Identity}, {
              Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>,
         "Meta" -> <|
         "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
          ListPlot, "GroupHighlight" -> False|>|>, 
       "DynamicHighlight"]], {{}, {}}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{None, None},
    AxesOrigin->{0, 0},
    DisplayFunction->Identity,
    Frame->{{False, False}, {False, False}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    Method->{
     "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
      "DefaultGraphicsInteraction" -> {
       "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
        "Effects" -> {
         "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
          "Droplines" -> {
           "freeformCursorMode" -> True, 
            "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
      "DefaultMeshStyle" -> AbsolutePointSize[6], "DefaultPlotStyle" -> {
        Directive[
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[2]], 
        Directive[
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[2]], 
        Directive[
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[2]], 
        Directive[
         RGBColor[0.922526, 0.385626, 0.209179], 
         AbsoluteThickness[2]], 
        Directive[
         RGBColor[0.528488, 0.470624, 0.701351], 
         AbsoluteThickness[2]], 
        Directive[
         RGBColor[0.772079, 0.431554, 0.102387], 
         AbsoluteThickness[2]], 
        Directive[
         RGBColor[0.363898, 0.618501, 0.782349], 
         AbsoluteThickness[2]], 
        Directive[
         RGBColor[1, 0.75, 0], 
         AbsoluteThickness[2]], 
        Directive[
         RGBColor[0.647624, 0.37816, 0.614037], 
         AbsoluteThickness[2]], 
        Directive[
         RGBColor[0.571589, 0.586483, 0.], 
         AbsoluteThickness[2]], 
        Directive[
         RGBColor[0.915, 0.3325, 0.2125], 
         AbsoluteThickness[2]], 
        Directive[
         RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
         AbsoluteThickness[2]], 
        Directive[
         RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
         AbsoluteThickness[2]], 
        Directive[
         RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
         AbsoluteThickness[2]], 
        Directive[
         RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
         AbsoluteThickness[2]]}, "DomainPadding" -> Scaled[0.02], 
      "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> Scaled[0.05],
       "OptimizePlotMarkers" -> True, "IncludeHighlighting" -> "CurrentPoint",
       "HighlightStyle" -> Automatic, "OptimizePlotMarkers" -> True, 
      "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
          Identity[
           Part[#, 1]], 
          Identity[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          Identity[
           Part[#, 1]], 
          Identity[
           Part[#, 2]]}& )}},
    PlotRange->{{-0.24463211264929655`, 
     0.32471160712296326`}, {-0.15066174518176742`, 0.15066174518176742`}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.05], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}], ",", 
   GraphicsBox[{{}, 
     InterpretationBox[{
       TagBox[
        TagBox[
         {RGBColor[1, 0, 0], PointSize[Medium], AbsoluteThickness[2], 
          PointBox[{{0.20827961037936354`, -0.11744815376381562`}, {
           0.06911030308364147, -0.14745807288769286`}, {0.20827961037936354`,
            0.11744815376381562`}, {0.06911030308364147, 
           0.14745807288769286`}, {-0.27062447686165797`, 
           0.}, {-0.2000885167457542, 0.09259655138646705}, {
           0.3111409101013909, 
           0.}, {-0.2000885167457542, -0.09259655138646705}}]},
         Annotation[#, "Charting`Private`Tag#1"]& ],
        {"WolframDynamicHighlight", <|
         "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>}], 
       StyleBox[
        DynamicBox[(Charting`HighlightActionBox["DynamicHighlight", {}, 
          Slot["HighlightElements"], 
          Slot["LayoutOptions"], 
          Slot["Meta"], 
          Charting`HighlightActionFunction["DynamicHighlight", {{
             Annotation[{
               Directive[
                AbsoluteThickness[2], 
                RGBColor[1, 0, 0], 
                PointSize[Medium]], 
               
               Point[{{0.20827961037936354`, -0.11744815376381562`}, {
                0.06911030308364147, -0.14745807288769286`}, {
                0.20827961037936354`, 0.11744815376381562`}, {
                0.06911030308364147, 
                0.14745807288769286`}, {-0.27062447686165797`, 
                0.}, {-0.2000885167457542, 0.09259655138646705}, {
                0.3111409101013909, 
                0.}, {-0.2000885167457542, -0.09259655138646705}}]}, 
              "Charting`Private`Tag#1"]}}, <|
           "HighlightElements" -> <|
             "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>, 
            "LayoutOptions" -> <|
             "PanelPlotLayout" -> <||>, 
              "PlotRange" -> {{-0.27062447686165797`, 
               0.3111409101013909}, {-0.14745807288769286`, 
               0.14745807288769286`}}, 
              "Frame" -> {{False, False}, {False, False}}, 
              "AxesOrigin" -> {0, 0}, "ImageSize" -> {360, 360/GoldenRatio}, 
              "Axes" -> {True, True}, "LabelStyle" -> {}, "AspectRatio" -> 
              GoldenRatio^(-1), "DefaultStyle" -> {
                Directive[
                 AbsoluteThickness[2], 
                 RGBColor[1, 0, 0], 
                 PointSize[Medium]]}, 
              "HighlightLabelingFunctions" -> <|
               "CoordinatesToolOptions" -> ({
                  Identity[
                   Part[#, 1]], 
                  Identity[
                   Part[#, 2]]}& ), 
                "ScalingFunctions" -> {{Identity, Identity}, {
                  Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
              False|>, 
            "Meta" -> <|
             "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, 
              "Function" -> ListPlot, "GroupHighlight" -> False|>|>]]& )[<|
          "HighlightElements" -> <|
            "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>, 
           "LayoutOptions" -> <|
            "PanelPlotLayout" -> <||>, 
             "PlotRange" -> {{-0.27062447686165797`, 
              0.3111409101013909}, {-0.14745807288769286`, 
              0.14745807288769286`}}, 
             "Frame" -> {{False, False}, {False, False}}, 
             "AxesOrigin" -> {0, 0}, "ImageSize" -> {360, 360/GoldenRatio}, 
             "Axes" -> {True, True}, "LabelStyle" -> {}, "AspectRatio" -> 
             GoldenRatio^(-1), "DefaultStyle" -> {
               Directive[
                AbsoluteThickness[2], 
                RGBColor[1, 0, 0], 
                PointSize[Medium]]}, 
             "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
                 Identity[
                  Part[#, 1]], 
                 Identity[
                  Part[#, 2]]}& ), 
               "ScalingFunctions" -> {{Identity, Identity}, {
                 Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
             False|>, 
           "Meta" -> <|
            "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, 
             "Function" -> ListPlot, "GroupHighlight" -> False|>|>],
         ImageSizeCache->{{4.503599627370496*^15, -4.503599627370496*^15}, {
          4.503599627370496*^15, -4.503599627370496*^15}}],
        Selectable->False]},
      Annotation[{{
         Annotation[{
           Directive[
            AbsoluteThickness[2], 
            RGBColor[1, 0, 0], 
            PointSize[Medium]], 
           
           Point[{{0.20827961037936354`, -0.11744815376381562`}, {
            0.06911030308364147, -0.14745807288769286`}, {
            0.20827961037936354`, 0.11744815376381562`}, {0.06911030308364147,
             0.14745807288769286`}, {-0.27062447686165797`, 
            0.}, {-0.2000885167457542, 0.09259655138646705}, {
            0.3111409101013909, 
            0.}, {-0.2000885167457542, -0.09259655138646705}}]}, 
          "Charting`Private`Tag#1"]}}, <|
       "HighlightElements" -> <|
         "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>, 
        "LayoutOptions" -> <|
         "PanelPlotLayout" -> <||>, 
          "PlotRange" -> {{-0.27062447686165797`, 
           0.3111409101013909}, {-0.14745807288769286`, 
           0.14745807288769286`}}, 
          "Frame" -> {{False, False}, {False, False}}, "AxesOrigin" -> {0, 0},
           "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {True, True}, 
          "LabelStyle" -> {}, "AspectRatio" -> GoldenRatio^(-1), 
          "DefaultStyle" -> {
            Directive[
             AbsoluteThickness[2], 
             RGBColor[1, 0, 0], 
             PointSize[Medium]]}, 
          "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
              Identity[
               Part[#, 1]], 
              Identity[
               Part[#, 2]]}& ), 
            "ScalingFunctions" -> {{Identity, Identity}, {
              Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>,
         "Meta" -> <|
         "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
          ListPlot, "GroupHighlight" -> False|>|>, 
       "DynamicHighlight"]], {{}, {}}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{None, None},
    AxesOrigin->{0, 0},
    DisplayFunction->Identity,
    Frame->{{False, False}, {False, False}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    Method->{
     "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
      "DefaultGraphicsInteraction" -> {
       "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
        "Effects" -> {
         "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
          "Droplines" -> {
           "freeformCursorMode" -> True, 
            "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
      "DefaultMeshStyle" -> AbsolutePointSize[6], "DefaultPlotStyle" -> {
        Directive[
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[2]], 
        Directive[
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[2]], 
        Directive[
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[2]], 
        Directive[
         RGBColor[0.922526, 0.385626, 0.209179], 
         AbsoluteThickness[2]], 
        Directive[
         RGBColor[0.528488, 0.470624, 0.701351], 
         AbsoluteThickness[2]], 
        Directive[
         RGBColor[0.772079, 0.431554, 0.102387], 
         AbsoluteThickness[2]], 
        Directive[
         RGBColor[0.363898, 0.618501, 0.782349], 
         AbsoluteThickness[2]], 
        Directive[
         RGBColor[1, 0.75, 0], 
         AbsoluteThickness[2]], 
        Directive[
         RGBColor[0.647624, 0.37816, 0.614037], 
         AbsoluteThickness[2]], 
        Directive[
         RGBColor[0.571589, 0.586483, 0.], 
         AbsoluteThickness[2]], 
        Directive[
         RGBColor[0.915, 0.3325, 0.2125], 
         AbsoluteThickness[2]], 
        Directive[
         RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
         AbsoluteThickness[2]], 
        Directive[
         RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
         AbsoluteThickness[2]], 
        Directive[
         RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
         AbsoluteThickness[2]], 
        Directive[
         RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
         AbsoluteThickness[2]]}, "DomainPadding" -> Scaled[0.02], 
      "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> Scaled[0.05],
       "OptimizePlotMarkers" -> True, "IncludeHighlighting" -> "CurrentPoint",
       "HighlightStyle" -> Automatic, "OptimizePlotMarkers" -> True, 
      "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
          Identity[
           Part[#, 1]], 
          Identity[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          Identity[
           Part[#, 1]], 
          Identity[
           Part[#, 2]]}& )}},
    PlotRange->{{-0.27062447686165797`, 
     0.3111409101013909}, {-0.14745807288769286`, 0.14745807288769286`}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.05], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}], ",", 
   GraphicsBox[{{}, 
     InterpretationBox[{
       TagBox[
        TagBox[
         {RGBColor[1, 0, 0], PointSize[Medium], AbsoluteThickness[2], 
          PointBox[{{0.20710678118654752`, -0.10355339059327376`}, {
           0., -0.14644660940672624`}, {0.20710678118654752`, 
           0.10355339059327376`}, {0., 
           0.14644660940672624`}, {-0.2928932188134525, 
           0.}, {-0.20710678118654752`, 0.10355339059327376`}, {
           0.2928932188134525, 
           0.}, {-0.20710678118654752`, -0.10355339059327376`}}]},
         Annotation[#, "Charting`Private`Tag#1"]& ],
        {"WolframDynamicHighlight", <|
         "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>}], 
       StyleBox[
        DynamicBox[(Charting`HighlightActionBox["DynamicHighlight", {}, 
          Slot["HighlightElements"], 
          Slot["LayoutOptions"], 
          Slot["Meta"], 
          Charting`HighlightActionFunction["DynamicHighlight", {{
             Annotation[{
               Directive[
                AbsoluteThickness[2], 
                RGBColor[1, 0, 0], 
                PointSize[Medium]], 
               
               Point[{{0.20710678118654752`, -0.10355339059327376`}, {
                0., -0.14644660940672624`}, {0.20710678118654752`, 
                0.10355339059327376`}, {0., 
                0.14644660940672624`}, {-0.2928932188134525, 
                0.}, {-0.20710678118654752`, 0.10355339059327376`}, {
                0.2928932188134525, 
                0.}, {-0.20710678118654752`, -0.10355339059327376`}}]}, 
              "Charting`Private`Tag#1"]}}, <|
           "HighlightElements" -> <|
             "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>, 
            "LayoutOptions" -> <|
             "PanelPlotLayout" -> <||>, 
              "PlotRange" -> {{-0.2928932188134525, 
               0.2928932188134525}, {-0.14644660940672624`, 
               0.14644660940672624`}}, 
              "Frame" -> {{False, False}, {False, False}}, 
              "AxesOrigin" -> {0, 0}, "ImageSize" -> {360, 360/GoldenRatio}, 
              "Axes" -> {True, True}, "LabelStyle" -> {}, "AspectRatio" -> 
              GoldenRatio^(-1), "DefaultStyle" -> {
                Directive[
                 AbsoluteThickness[2], 
                 RGBColor[1, 0, 0], 
                 PointSize[Medium]]}, 
              "HighlightLabelingFunctions" -> <|
               "CoordinatesToolOptions" -> ({
                  Identity[
                   Part[#, 1]], 
                  Identity[
                   Part[#, 2]]}& ), 
                "ScalingFunctions" -> {{Identity, Identity}, {
                  Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
              False|>, 
            "Meta" -> <|
             "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, 
              "Function" -> ListPlot, "GroupHighlight" -> False|>|>]]& )[<|
          "HighlightElements" -> <|
            "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>, 
           "LayoutOptions" -> <|
            "PanelPlotLayout" -> <||>, 
             "PlotRange" -> {{-0.2928932188134525, 
              0.2928932188134525}, {-0.14644660940672624`, 
              0.14644660940672624`}}, 
             "Frame" -> {{False, False}, {False, False}}, 
             "AxesOrigin" -> {0, 0}, "ImageSize" -> {360, 360/GoldenRatio}, 
             "Axes" -> {True, True}, "LabelStyle" -> {}, "AspectRatio" -> 
             GoldenRatio^(-1), "DefaultStyle" -> {
               Directive[
                AbsoluteThickness[2], 
                RGBColor[1, 0, 0], 
                PointSize[Medium]]}, 
             "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
                 Identity[
                  Part[#, 1]], 
                 Identity[
                  Part[#, 2]]}& ), 
               "ScalingFunctions" -> {{Identity, Identity}, {
                 Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
             False|>, 
           "Meta" -> <|
            "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, 
             "Function" -> ListPlot, "GroupHighlight" -> False|>|>],
         ImageSizeCache->{{4.503599627370496*^15, -4.503599627370496*^15}, {
          4.503599627370496*^15, -4.503599627370496*^15}}],
        Selectable->False]},
      Annotation[{{
         Annotation[{
           Directive[
            AbsoluteThickness[2], 
            RGBColor[1, 0, 0], 
            PointSize[Medium]], 
           
           Point[{{0.20710678118654752`, -0.10355339059327376`}, {
            0., -0.14644660940672624`}, {0.20710678118654752`, 
            0.10355339059327376`}, {0., 
            0.14644660940672624`}, {-0.2928932188134525, 
            0.}, {-0.20710678118654752`, 0.10355339059327376`}, {
            0.2928932188134525, 
            0.}, {-0.20710678118654752`, -0.10355339059327376`}}]}, 
          "Charting`Private`Tag#1"]}}, <|
       "HighlightElements" -> <|
         "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>, 
        "LayoutOptions" -> <|
         "PanelPlotLayout" -> <||>, 
          "PlotRange" -> {{-0.2928932188134525, 
           0.2928932188134525}, {-0.14644660940672624`, 
           0.14644660940672624`}}, 
          "Frame" -> {{False, False}, {False, False}}, "AxesOrigin" -> {0, 0},
           "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {True, True}, 
          "LabelStyle" -> {}, "AspectRatio" -> GoldenRatio^(-1), 
          "DefaultStyle" -> {
            Directive[
             AbsoluteThickness[2], 
             RGBColor[1, 0, 0], 
             PointSize[Medium]]}, 
          "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
              Identity[
               Part[#, 1]], 
              Identity[
               Part[#, 2]]}& ), 
            "ScalingFunctions" -> {{Identity, Identity}, {
              Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>,
         "Meta" -> <|
         "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
          ListPlot, "GroupHighlight" -> False|>|>, 
       "DynamicHighlight"]], {{}, {}}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{None, None},
    AxesOrigin->{0, 0},
    DisplayFunction->Identity,
    Frame->{{False, False}, {False, False}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    Method->{
     "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
      "DefaultGraphicsInteraction" -> {
       "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
        "Effects" -> {
         "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
          "Droplines" -> {
           "freeformCursorMode" -> True, 
            "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
      "DefaultMeshStyle" -> AbsolutePointSize[6], "DefaultPlotStyle" -> {
        Directive[
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[2]], 
        Directive[
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[2]], 
        Directive[
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[2]], 
        Directive[
         RGBColor[0.922526, 0.385626, 0.209179], 
         AbsoluteThickness[2]], 
        Directive[
         RGBColor[0.528488, 0.470624, 0.701351], 
         AbsoluteThickness[2]], 
        Directive[
         RGBColor[0.772079, 0.431554, 0.102387], 
         AbsoluteThickness[2]], 
        Directive[
         RGBColor[0.363898, 0.618501, 0.782349], 
         AbsoluteThickness[2]], 
        Directive[
         RGBColor[1, 0.75, 0], 
         AbsoluteThickness[2]], 
        Directive[
         RGBColor[0.647624, 0.37816, 0.614037], 
         AbsoluteThickness[2]], 
        Directive[
         RGBColor[0.571589, 0.586483, 0.], 
         AbsoluteThickness[2]], 
        Directive[
         RGBColor[0.915, 0.3325, 0.2125], 
         AbsoluteThickness[2]], 
        Directive[
         RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
         AbsoluteThickness[2]], 
        Directive[
         RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
         AbsoluteThickness[2]], 
        Directive[
         RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
         AbsoluteThickness[2]], 
        Directive[
         RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
         AbsoluteThickness[2]]}, "DomainPadding" -> Scaled[0.02], 
      "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> Scaled[0.05],
       "OptimizePlotMarkers" -> True, "IncludeHighlighting" -> "CurrentPoint",
       "HighlightStyle" -> Automatic, "OptimizePlotMarkers" -> True, 
      "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
          Identity[
           Part[#, 1]], 
          Identity[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          Identity[
           Part[#, 1]], 
          Identity[
           Part[#, 2]]}& )}},
    PlotRange->{{-0.2928932188134525, 
     0.2928932188134525}, {-0.14644660940672624`, 0.14644660940672624`}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.05], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.953699162082074*^9, {3.9536991980520697`*^9, 3.953699229549612*^9}, 
   3.953699299876345*^9, {3.953699378606764*^9, 3.953699384558449*^9}, {
   3.953795599623657*^9, 3.953795669593433*^9}, 3.953795744803856*^9, 
   3.953960764504125*^9, 3.954297876091224*^9, 3.954302956680448*^9, 
   3.954919993852473*^9, 3.9549212255301647`*^9},
 CellLabel->"Out[86]=",ExpressionUUID->"0d2e764b-c55f-42df-b491-1259cc28c149"]
}, Open  ]],

Cell["\<\
Putting everything together, we verify if the considered points are good \
candidates for vertices:\
\>", "Text",
 CellChangeTimes->{{3.9537957535937*^9, 
  3.9537957788754683`*^9}},ExpressionUUID->"8a650025-6076-42cf-91f3-\
8f0be5c5a762"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"region", ",", "vertexPlot"}], "}"}], ",", 
     RowBox[{
      RowBox[{"region", "=", 
       RowBox[{"RegionPlot", "[", 
        RowBox[{
         RowBox[{"Evaluate", "[", 
          RowBox[{
           RowBox[{"And", "@@", "ineqs"}], "/.", " ", 
           RowBox[{"\[Theta]", "->", "th"}]}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"p", "[", "1", "]"}], ",", 
           RowBox[{"-", "0.5"}], ",", "0.5"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"p", "[", "4", "]"}], ",", 
           RowBox[{"-", "0.5"}], ",", "0.5"}], "}"}], ",", 
         RowBox[{"PlotStyle", "->", 
          RowBox[{"Directive", "[", 
           RowBox[{
            RowBox[{"Opacity", "[", "0.3", "]"}], ",", "Blue"}], "]"}]}], ",", 
         RowBox[{"AxesLabel", "->", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Style", "[", 
             RowBox[{"\"\<p[1]\>\"", ",", "Bold", ",", "14"}], "]"}], ",", 
            RowBox[{"Style", "[", 
             RowBox[{"\"\<p[4]\>\"", ",", "Bold", ",", "14"}], "]"}]}], 
           "}"}]}], ",", 
         RowBox[{"PlotLabel", "->", 
          RowBox[{"Style", "[", 
           RowBox[{
            RowBox[{"\"\<\[Theta] = \>\"", "<>", 
             RowBox[{"ToString", "[", 
              RowBox[{"N", "[", "th", "]"}], "]"}]}], ",", "Bold", ",", 
            "16"}], "]"}]}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"vertexPlot", "=", 
       RowBox[{"ListPlot", "[", 
        RowBox[{
         RowBox[{"v", "/.", " ", 
          RowBox[{"\[Theta]", "->", "th"}]}], ",", 
         RowBox[{"(*", 
          RowBox[{
          "assuming", " ", "v", " ", "is", " ", "a", " ", "list", " ", "of", 
           " ", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"p", "[", "1", "]"}], ",", 
             RowBox[{"p", "[", "4", "]"}]}], "}"}], " ", "functions", " ", 
           "of", " ", "\[Theta]"}], "*)"}], 
         RowBox[{"PlotStyle", "->", 
          RowBox[{"{", 
           RowBox[{"Red", ",", 
            RowBox[{"PointSize", "[", "Medium", "]"}]}], "}"}]}], ",", 
         RowBox[{"PlotRange", "->", "All"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Show", "[", 
       RowBox[{"region", ",", "vertexPlot"}], "]"}]}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"th", ",", 
     RowBox[{
      FractionBox["\[Pi]", "8"], "+", 
      FractionBox["\[Pi]", "64"]}], ",", 
     FractionBox["\[Pi]", "4"], ",", 
     FractionBox["\[Pi]", "64"]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.9537073642945232`*^9, 3.9537073642961817`*^9}, {
  3.953707641786176*^9, 3.953707667106737*^9}, {3.953795697836527*^9, 
  3.953795705086952*^9}, {3.9543029668924026`*^9, 3.954302990214089*^9}},
 CellLabel->"In[87]:=",ExpressionUUID->"d6b3f41c-ca53-468e-afab-7e30af2007b0"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   GraphicsBox[{{GraphicsComplexBox[CompressedData["
1:eJx1VQ1M1GUYP6Rgg641E2SXXOgSzjm0QJa5ycOSPsacEqMwrAthbQkCyUCD
1cCYV6E4mhcBHV8D8viIE0M4uPPeg7vje+Mw4jZMmXa4cA4dUUZaV9673+v2
d7CxZ7//+3z8ns/bmJ6b9OEamUxm+f//odzw1MiCO6abJrrDQ7QuK7NzKbC5
P6Bcs1RDW7kegz4w9IH/4vpCwh4Y9sCwBy7KOGyK0Q7Tan6kEv6A4Q8Y/laz
k0rYr/ZdKi97/fVThFfPzsa9uI1u8O+CN7DM+1dnXuB67HluR8DIFxgSdpCI
A3tgSPCChB54SzH4wz/6CT1pfxEH+qgT9KV9AY86rywjjbcvvSzKq9cs5ERv
VZJ83kEDXl7nKdjk1WdOjsU7MOzWcSn0YY94x3k8wQP9QP7AeWn3SsyaQdq9
tkPtSrQIDL7ID3ljvoCldZfOCfyBD3Akjyf0sH/QK+J6Ij76gHqgDuAjrSfm
CH1BvqgT8pXOGeIAwy/qDIw6gx/6jvjoD+IjT8SX5o+6rVYn1AP6wIgHftI8
8B0S+nhvqv05WmUwPHYPM5YPpC/V2MU+74zOnfQUm1jFpP+sp9jx2H70lpcE
aVMusJTUoMseT6v4Diy9T/4/BE4oxloI/lAn8JHepeTbnfaY5EFKr5LrNHkX
qHXRl/b0DbA3uyKS5JuHyHgufr02pYteOmy55i7opz93LFpj8u0soM3io/3i
Etl8NzVnlTiYsj3eGjPdTMbB7N87fSxswb8jY2nWRom2V6uz9CamDh362PWM
ndKu+n2Xpe9nM5+UjijGvn1031Kb4lS5enGnbhesPWrWtLN30h/2I0ngSrUX
087kqDiVQc8UXJKu4TV9lqqUjH5rQgrLjbSpcMzT6TMs7hjiJ/L4BH5xnB+B
v57zF/ku8nxF3Q7y/tGOm+NRat+Bx+7Ue7ye4q41Nx46afazMujjPh5xPxFR
KK9g6Dfma7h2OlE+3yP2s3PuYFChvF/UpT7kjFzr0oj93Mz7zZCv9N5HcH0x
l+f4PBHqDZ7ggzzAx8j5iDzrOB+xlyo+v4R+Yo/gV8fzpxzWfaLR3Cf8oF9D
vF8M/YRcvvuuLuu3VnZj35Ecs18t889tnneXD1HlaaV7NNBAU/F/X/d4Gki3
zTHrvmhmYWcz812yQVJxyfYeq38wunWAGhL2P2m4bmP6auOYoqySzZRGr4w+
96OY7xE+38J/N/fPvswPC9S+PEIGL/8Gwed7zofw/jV/J/gf4f4Fv9Ocn9iv
Rr5fBL6Q4FvF+Yo6Yt6AcT9qpoJl2uMWUh741ccw5WA+VcWRal+72Cfr8k2n
IsBGV3ad+vdsCmMrux+8vVTTLuYs58x2XZZsTPT5hVpPW2LsKL1xpStMvecU
c2Z/9JOHRqmh5W5xo7mM4X1y1vtOeFfxd0J88ET8cR6fcC9M/F4Q+Adz/qR8
8R+tJq+Hwosi12nX2xjmBfuC+522ZaNTUWRjttDkOU/xoLivuOuheaXHXE4r
S/pmPkK9fZj2fn4/VvVBK7ulfXrGwx79nr1/wjTtKR4RewGMuYZ/7D38B3H/
VPXsQI55poOqlH31GrWVzaSdvOP+w0qvGMMHYpLtTNcdcb+zsZoyPy09an7d
xGTGua8aNzjoVsa9LWrfHrZ/scCpSGhi11o+CzQcOs8y/fJbE5VtbOWtqw5F
QrXAlzgm5LON50Pw9wv3J/hUcD6inkpeT6rYlROrMhSyiTud2S7nRQZs4ZjA
x8n5EPincv70H9ULLWY=
       "], {{
         {RGBColor[0, 0, 1], AbsoluteThickness[2.], Opacity[0.3], EdgeForm[
          None], GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJwBEgLt/SFib1JiAgAAAKsAAAADAAAAQUAWGAMHCAMEREMbMTACCQQFQgcM
HAwQDQcIEQwNIigDEg0ONzYSQ0ILFxYDQDAEAwgHIB8UTjU0GhgGSB4RBw0M
CA4NGQkFBAkIDggJNA4JLiQcTUw6KRoGDBwLSDYTJRwQHRIOKBcDIxkFPTwZ
KyIYAxYEGisYRh0OHSYSS0ofGCIDDBEQER4QLyUQKiYdMyMFHicQHCQLDRIR
TCECTxgHIywZR0YPJS4cJy8QOjABBDAFMjECEjYRRjQPNDUPMTMFMDEFFkAE
SjYUODcSJjgSNzkUOzoBMDoCPDQJGTwJUU48Pz0ZUT0KPT4KNjcULD8ZMEAB
e70kC0IMRUMLQ0QGUE9CQEEBUEMGNkgRRkcdSUgTNEYOQ0UbJC0LSEkeGE8G
IUwVOkwCO006SksTH0oUTE0VNkoTQk8HT1AGPE40NU4KQ1BCPVE8TlEKm2Yb
sXMhslQXnpw1vXwkYXIWvoEnlm4ftFYaTTsVpl8Vpac7u3Uioq85rJ0KiagC
rZAPgm0eemcbbKI5jI0scG8geKs+Ul0Bs1UjqZoymFMhhoUph14qXXEBl2AV
uH8maI8tlXAgvH0lrpQUXJMTkoAnU7EhVIgXgL4nkFkPnKA1o5YfmmIyb6Qg
ZbQan60PboMfX5cVdrMjfrwlWrgmdLsic4ohZ5sbk1sTZncbjqwKZLIXGUd6
JA==
             "]], 
            PolygonBox[{{91, 185, 73, 19}, {161, 108, 57, 55}, {164, 163, 31, 
             32}, {145, 123, 36, 46}, {127, 107, 56, 38}, {94, 90, 38, 42}, {
             88, 182, 69, 11}, {117, 132, 40, 34}, {138, 137, 2, 33}, {139, 
             116, 34, 43}, {157, 158, 53, 10}, {153, 99, 51, 49}, {175, 174, 
             20, 57}, {131, 186, 75, 31}, {113, 165, 59, 1}, {107, 161, 55, 
             56}, {96, 152, 33, 21}, {87, 134, 41, 6}, {160, 159, 15, 53}, {
             89, 183, 71, 15}, {85, 140, 44, 35}, {143, 88, 11, 45}, {182, 
             122, 27, 69}, {181, 87, 6, 68}, {183, 106, 29, 71}, {167, 166, 
             21, 59}, {121, 170, 61, 63}, {141, 121, 63, 44}, {170, 120, 62, 
             61}, {176, 82, 1, 65}, {168, 169, 50, 2}, {185, 130, 30, 73}, {
             171, 142, 10, 62}, {132, 100, 23, 40}, {133, 101, 26, 41}, {129, 
             105, 47, 39}, {86, 139, 43, 26}, {114, 176, 65, 22}, {105, 126, 
             37, 47}, {99, 118, 35, 51}, {124, 104, 45, 36}, {148, 149, 32, 
             20}, {125, 145, 46, 37}, {106, 135, 42, 29}, {119, 181, 68, 
             27}, {109, 146, 39, 30}, {136, 97, 22, 23}, {98, 153, 49, 50}, {
             186, 92, 19, 75}}]}]}, {}, {}, {}, {}}, 
        {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[2.], 
         LineBox[{187, 117, 132, 100, 178, 84, 136, 97, 114, 176, 82, 93, 113,
           165, 167, 166, 95, 151, 96, 152, 83, 177, 115, 138, 137, 168, 169, 
          154, 98, 153, 99, 118, 179, 85, 140, 141, 121, 170, 120, 171, 142, 
          172, 157, 158, 156, 160, 159, 173, 144, 89, 183, 106, 135, 94, 90, 
          184, 127, 107, 161, 108, 162, 175, 174, 148, 149, 112, 111, 164, 
          163, 150, 110, 131, 186, 92, 147, 91, 185, 130, 109, 146, 128, 190, 
          129, 105, 126, 188, 125, 145, 123, 189, 124, 104, 143, 88, 182, 122,
           103, 155, 102, 119, 181, 87, 134, 133, 101, 180, 86, 139, 116, 
          187}]}}], {}}, {{}, 
      InterpretationBox[{
        TagBox[
         TagBox[
          {RGBColor[1, 0, 0], PointSize[Medium], AbsoluteThickness[2], 
           PointBox[{{0.03123394777341315, -0.38704808938497415`}, {
            0.2796284089123977, -0.27960957666737696`}, {0.03123394777341315, 
            0.38704808938497415`}, {0.2796284089123977, 
            0.27960957666737696`}, {-0.05394890518121984, 
            0.}, {-0.04715967991782626, 0.05755820246540245}, {
            0.20313889165984333`, 
            0.}, {-0.04715967991782626, -0.05755820246540245}}]},
          Annotation[#, "Charting`Private`Tag#1"]& ],
         {
         "WolframDynamicHighlight", <|
          "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>}], 
        StyleBox[
         DynamicBox[(Charting`HighlightActionBox["DynamicHighlight", {}, 
           Slot["HighlightElements"], 
           Slot["LayoutOptions"], 
           Slot["Meta"], 
           Charting`HighlightActionFunction["DynamicHighlight", {{
              Annotation[{
                Directive[
                 AbsoluteThickness[2], 
                 RGBColor[1, 0, 0], 
                 PointSize[Medium]], 
                
                Point[{{0.03123394777341315, -0.38704808938497415`}, {
                 0.2796284089123977, -0.27960957666737696`}, {
                 0.03123394777341315, 0.38704808938497415`}, {
                 0.2796284089123977, 
                 0.27960957666737696`}, {-0.05394890518121984, 
                 0.}, {-0.04715967991782626, 0.05755820246540245}, {
                 0.20313889165984333`, 
                 0.}, {-0.04715967991782626, -0.05755820246540245}}]}, 
               "Charting`Private`Tag#1"]}}, <|
            "HighlightElements" -> <|
              "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>, 
             "LayoutOptions" -> <|
              "PanelPlotLayout" -> <||>, 
               "PlotRange" -> {{-0.05394890518121984, 
                0.2796284089123977}, {-0.38704808938497415`, 
                0.38704808938497415`}}, 
               "Frame" -> {{False, False}, {False, False}}, 
               "AxesOrigin" -> {0, 0}, "ImageSize" -> {360, 360/GoldenRatio}, 
               "Axes" -> {True, True}, "LabelStyle" -> {}, "AspectRatio" -> 
               GoldenRatio^(-1), "DefaultStyle" -> {
                 Directive[
                  AbsoluteThickness[2], 
                  RGBColor[1, 0, 0], 
                  PointSize[Medium]]}, 
               "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
                   Identity[
                    Part[#, 1]], 
                   Identity[
                    Part[#, 2]]}& ), 
                 "ScalingFunctions" -> {{Identity, Identity}, {
                   Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
               False|>, 
             "Meta" -> <|
              "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, 
               "Function" -> ListPlot, "GroupHighlight" -> False|>|>]]& )[<|
           "HighlightElements" -> <|
             "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>, 
            "LayoutOptions" -> <|
             "PanelPlotLayout" -> <||>, 
              "PlotRange" -> {{-0.05394890518121984, 
               0.2796284089123977}, {-0.38704808938497415`, 
               0.38704808938497415`}}, 
              "Frame" -> {{False, False}, {False, False}}, 
              "AxesOrigin" -> {0, 0}, "ImageSize" -> {360, 360/GoldenRatio}, 
              "Axes" -> {True, True}, "LabelStyle" -> {}, "AspectRatio" -> 
              GoldenRatio^(-1), "DefaultStyle" -> {
                Directive[
                 AbsoluteThickness[2], 
                 RGBColor[1, 0, 0], 
                 PointSize[Medium]]}, 
              "HighlightLabelingFunctions" -> <|
               "CoordinatesToolOptions" -> ({
                  Identity[
                   Part[#, 1]], 
                  Identity[
                   Part[#, 2]]}& ), 
                "ScalingFunctions" -> {{Identity, Identity}, {
                  Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
              False|>, 
            "Meta" -> <|
             "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, 
              "Function" -> ListPlot, "GroupHighlight" -> False|>|>],
          
          ImageSizeCache->{{4.503599627370496*^15, -4.503599627370496*^15}, {
           4.503599627370496*^15, -4.503599627370496*^15}}],
         Selectable->False]},
       Annotation[{{
          Annotation[{
            Directive[
             AbsoluteThickness[2], 
             RGBColor[1, 0, 0], 
             PointSize[Medium]], 
            
            Point[{{0.03123394777341315, -0.38704808938497415`}, {
             0.2796284089123977, -0.27960957666737696`}, {0.03123394777341315,
              0.38704808938497415`}, {0.2796284089123977, 
             0.27960957666737696`}, {-0.05394890518121984, 
             0.}, {-0.04715967991782626, 0.05755820246540245}, {
             0.20313889165984333`, 
             0.}, {-0.04715967991782626, -0.05755820246540245}}]}, 
           "Charting`Private`Tag#1"]}}, <|
        "HighlightElements" -> <|
          "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>, 
         "LayoutOptions" -> <|
          "PanelPlotLayout" -> <||>, 
           "PlotRange" -> {{-0.05394890518121984, 
            0.2796284089123977}, {-0.38704808938497415`, 
            0.38704808938497415`}}, 
           "Frame" -> {{False, False}, {False, False}}, 
           "AxesOrigin" -> {0, 0}, "ImageSize" -> {360, 360/GoldenRatio}, 
           "Axes" -> {True, True}, "LabelStyle" -> {}, "AspectRatio" -> 
           GoldenRatio^(-1), "DefaultStyle" -> {
             Directive[
              AbsoluteThickness[2], 
              RGBColor[1, 0, 0], 
              PointSize[Medium]]}, 
           "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
               Identity[
                Part[#, 1]], 
               Identity[
                Part[#, 2]]}& ), 
             "ScalingFunctions" -> {{Identity, Identity}, {
               Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
           False|>, 
         "Meta" -> <|
          "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
           ListPlot, "GroupHighlight" -> False|>|>, 
        "DynamicHighlight"]], {{}, {}}}},
    AspectRatio->1,
    Axes->{False, False},
    AxesLabel->{
      FormBox[
       TagBox[
        StyleBox["\"p[1]\"", Bold, 14, StripOnInput -> False], HoldForm], 
       TraditionalForm], 
      FormBox[
       TagBox[
        StyleBox["\"p[4]\"", Bold, 14, StripOnInput -> False], HoldForm], 
       TraditionalForm]},
    AxesOrigin->{0, 0},
    DisplayFunction->Identity,
    Frame->{{True, True}, {True, True}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    ImagePadding->All,
    Method->{
     "DefaultGraphicsInteraction" -> {
       "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
        "Effects" -> {
         "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
          "Droplines" -> {
           "freeformCursorMode" -> True, 
            "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
      "ScalingFunctions" -> None, "TransparentPolygonMesh" -> True, 
      "AxesInFront" -> True},
    PlotLabel->FormBox[
      StyleBox["\"\[Theta] = 0.441786\"", Bold, 16, StripOnInput -> False], 
      TraditionalForm],
    PlotRange->{{-0.5, 0.5}, {-0.5, 0.5}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.02], 
       Scaled[0.02]}},
    Ticks->{Automatic, Automatic}], ",", 
   GraphicsBox[{{GraphicsComplexBox[CompressedData["
1:eJx1VgtMU1cYJuLEoA1EnBPmIy6MdTrFoFVg6O/WBJWBdkQnbqQaDEYtkw1n
sAw3ddohEzSIjzEHdqLAEIpKAeHKAcrE8pCHIRjQxrDi5mNMMUON2zp3T75D
co1Nmj/fPed+//c/zvnvjLjE6PhRbm5ufzz//28bywMmZ/fUUSu3LGXD5hpN
dpPAT6o9M0xDOWzW+Ct3nJpyJnFMwFO4FRh8wOADhgWv0oIfGPzA4AcGP/Dc
CWf1Pbqr9DLdSj9KC3/A8AcMf8Dw9zLdSl6lBT8w+JXrsFgH7pL5q6mfW9Yt
22aB78j2Z2FbuBXr8KN8H/uRP+DLst8OcpN/uZKSF+8DIz/KdejGc+CXWfQj
3ocu8Cv1oQ7Ayr5V6lHWRekf+TbJ+a9kQfK+fLZnY99fpeZWqpfXyyiZr9Mi
WVct6+DPhcV+YMel1CaXq53AB/6JHBPWgfGe0t9s7o+my/saRT2BkT9l3YCV
dVY+B4a+XHlfOiWtf7xLMjVQCrdCF+LH/kk18n7Bg/wDI+/gRVzQjzoAox7w
D9taeTxaNfDLCxj6cH6UGPlSe4X667V2oR96EAfiQ76hGxh80As+rKMvkWfU
HXXFOvKDdfjFc6WFDvQJ8of4EQ/2K8+t8p7EOuKHPjyHTjxHfREv8gWM/CIO
rCNP4EUcwNgPP9gPvYgT6xveSdwpmfKZcj5turWj22llLH7vbC9jRtsL8+h9
r5D3tMYy5jb/u7M6fRVTzpOWuMhn9nvn2ILbLUF6905RR+xH3rAODD3QAf/K
uRY2ofhLyWQV70UaWmfoT43cO2N9mmJU8Q2ivxIXpif1eNtoT86SlUNbGK2c
UjLW8rSePV36qetwTy5LsKwPVwda2WJ39+ih3jYKGdze4RdxgfpziqLUXudo
xZM52Ya0Whrse1BgiLHRMLfsZPDaOdq3WyiloqDdta6GpT0K22eWCmhv7kNv
Y4bE9Lp8td5WIfpgRx8dNJ2/yAIel9xwubYxf3Vyck94B91YnfmtOeEMC4ss
jlTndVLwn1mHTENpLGh+16/OI5UsoeT7UG1IPmF/Ld8/Mk95vmmisaXf3tIu
+vzZiYhQtUcrmYbTg7T2KpqUN36cxbyLfg8oKtY5qgh6v+B6RXywYw74X/XL
aaTgA4ZXLJ02CstTDdoNF8X9iP5akTXT0zKjXtwPyTzfTN+c9vxM28V+MXe8
kxwu13nRB7G8fizWY/p1pyZX9D/iUc6rgSSzr16bJ3ARx6JP5/P+JORfeY6r
uH+CP8SB+JTfC+E8PrJejz2jc9RQra3d3xhVL+qTzuvDHKPfHZ99rJJ9Y/df
pg7MZ6fX9Z0yFFrJY9zUGt20Orbmx/B+5/YrVDToTtqL9Wz/0fBD5tRzwmY2
BEh+zaVs7djQLr+I86Ifl/F+FPzxnJ/wXgq3hPcj+PuE/o7l/U3Q4/KU9Yjz
sJSfBxFfBY+PoNfM9Y7Ml8MbCgyFNjGfOnyck42qKlY+dXWDX0SLqB/6L5v3
H2u84zNcuruVPLf01mhWVbIzDcs39rhVCx6cjwXD8vmgx7xPmY9hr4fFnEWZ
vsFrVW92iTmI81I3KJ8XGmTXrvnFddI8Of4scQ52Ltr6m33WJYI+1BXndws/
v5QZ3f1q9lsNpN/qe9850MASOQ+7Gpx63bWugm19ctsomUxs7r3RRmlMpeir
DM7PcF/o+X3BrPfD5ultZbS894hWFV/LEM9KHg+DXvhRRe7fZwpqp8U/fa3W
GkvF98xGVr7bLBUR8vf3Zjl/Ig91PP+Cp5brJeh9g+slh5yn49TbdD/DlDTy
fdDM6yni/4jHT2mr6kp105pozj/TbrqYTZwLb36/svzXPo9SB9aL74OaT6RC
namaYpxRnhZVvZg3R8o8s8ypdQz3yRJ+nzDwL+D87OPLFx7Y7418b2SZiz9Q
ddppwsKDJZoEJr5nb26a+5k0RmKesw8sUgc2i3mN+RDB5wPDfYe8I/67PH5R
nxBeHzFnYvj8I8Sj4/EQ9Iziegj3G/KC+X1X82G3X3qd+F5u43oJevF949j/
6JZTU8ROb5N8stdcYLX/rkmRwiuY18mZpZqJFtEPsbwf2NlHbZuGhjpoddFX
xwyFJwT25VjwHeV8tOJ1t2WqgR+oJC7K4bRWE/gf5sn89B8f9Mar
       "], {{
         {RGBColor[0, 0, 1], AbsoluteThickness[2.], Opacity[0.3], EdgeForm[
          None], GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJwBsQJO/SFib1JiAgAAAOAAAAADAAAARiEgX1E+HQEGWVgfa2pgY2JAaQYM
OC0iWiUQEgoLEwsMFAwNFQ0OQgkQDQYHIi0OSBEXGRITGhMUJyYVMikYKhkb
VksaIR0FEQkKZ2ZRIx8IWEAJYmAKamkLBg0MIg0HXBIYQ0IPCREQChIRDRUU
JBUOPDAlWkgWbB0GDBQTZB8JXBcRExoZPTIqJhoUSxsZNisdV1YoEhkYPgYB
aGEgXl0pDSIONCMILiQOECUPNTEmLCIHaCEFFSYUCxMSGSoYMyobHSsBZiwH
MSgaOycVUWYHOS4OJTAPVVQyJjEaKjIYITYdJzUmIzcfLTkOXz8CMz0qPz4B
Bj4HRT8BMDoPLDgiT1ACQUADY0EEZWRCD0IQREMPZUMIQ0cIEUgQLzsVSEkW
SkkXGksZTEscS0wbTkwcTE0bCUAKP08CPlEHQGIKZ1IeQVMEMlQpPVUyS1Yc
KFYaVlccH1gJQFgDWFkDW1oWSFoQWlslElwRXVwYJC8VUlECXV4XUV8CP18+
YWAECmALIGEEa2EFXF0XYGIEYmMEQWNAH2QIQmQJZGUIQ2VCKV0YSUgXLGYe
UmdRvI4pr6Az1dZPfdEBamsFYGoLYWgFbWxpC2kMs7Qe3N1TiKk65eFXkdMr
jp4p0JBOpNQ2IWggkqErftsDhcVH6povZmce2NpS2YIebWoFwbJB7Zwwk9dQ
bn4Dubok6Jgtx4onj89N0r9Fvb4opqc3eawW4J8ze64bam1p05IrHWwFbG0F
YWtgaWwGu3Yv53EjtXAs6XQul4Mg28ADm+0w4eNXeMkxjL0oh7kkgN5UsHwc
q6o8rHcWicg7ysxJoOAzy3kW4rAci8cnxMNGdMYuvuQomekuc+gtpZQCg8Ig
hOcjduovzY1Ko6I0uLdEgrMev4FFQE7GOw==
             "]], 
            PolygonBox[{{162, 132, 35, 52}, {114, 163, 52, 8}, {150, 151, 32, 
             4}, {117, 184, 68, 15}, {168, 115, 45, 56}, {170, 155, 48, 60}, {
             178, 220, 83, 65}, {127, 120, 49, 53}, {122, 205, 74, 23}, {212, 
             145, 43, 54}, {192, 193, 65, 3}, {124, 208, 78, 28}, {161, 125, 
             1, 43}, {158, 236, 94, 41}, {183, 182, 67, 68}, {197, 114, 8, 
             71}, {195, 111, 33, 70}, {119, 235, 91, 22}, {148, 216, 82, 2}, {
             200, 139, 39, 59}, {186, 187, 47, 36}, {236, 122, 23, 94}, {152, 
             134, 57, 45}, {112, 168, 56, 44}, {228, 229, 87, 40}, {198, 135, 
             36, 46}, {223, 128, 84, 85}, {149, 230, 89, 31}, {194, 196, 70, 
             32}, {138, 127, 53, 39}, {214, 147, 80, 79}, {177, 213, 79, 
             63}, {215, 165, 2, 80}, {209, 210, 69, 1}, {207, 123, 27, 77}, {
             222, 188, 41, 84}, {206, 143, 77, 76}, {218, 217, 30, 82}, {230, 
             110, 3, 89}, {235, 157, 37, 91}, {156, 136, 58, 48}, {173, 223, 
             85, 61}, {157, 171, 60, 37}, {221, 150, 4, 83}, {111, 164, 54, 
             33}, {129, 177, 63, 69}, {167, 149, 31, 55}, {113, 166, 55, 
             35}, {169, 117, 15, 58}, {180, 181, 44, 30}, {154, 137, 59, 
             47}, {174, 175, 51, 27}, {201, 140, 40, 49}, {227, 226, 28, 
             87}, {141, 202, 73, 74}, {144, 206, 76, 78}, {204, 203, 22, 
             73}, {159, 173, 61, 51}, {134, 153, 46, 57}, {182, 133, 71, 
             67}}]}]}, {}, {}, {}, {}}, 
        {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[2.], 
         LineBox[{211, 146, 161, 125, 209, 210, 191, 129, 177, 213, 214, 147, 
          215, 165, 148, 216, 218, 217, 130, 179, 180, 181, 112, 168, 115, 
          232, 152, 134, 153, 233, 116, 198, 135, 185, 186, 187, 118, 234, 
          154, 137, 200, 139, 199, 138, 127, 120, 201, 140, 189, 190, 228, 
          229, 225, 227, 226, 176, 124, 208, 144, 206, 143, 207, 123, 174, 
          175, 160, 224, 159, 173, 223, 128, 222, 188, 142, 158, 236, 122, 
          205, 141, 202, 204, 203, 121, 172, 119, 235, 157, 171, 170, 155, 
          237, 156, 136, 169, 117, 184, 183, 182, 133, 197, 114, 163, 162, 
          132, 231, 113, 166, 167, 149, 230, 110, 126, 219, 192, 193, 178, 
          220, 221, 150, 151, 131, 194, 196, 195, 111, 164, 212, 145, 
          211}]}}], {}}, {{}, 
      InterpretationBox[{
        TagBox[
         TagBox[
          {RGBColor[1, 0, 0], PointSize[Medium], AbsoluteThickness[2], 
           PointBox[{{0.08422538735696866, -0.29890101945003433`}, {
            0.3177768789101845, -0.21400836471833404`}, {0.08422538735696866, 
            0.29890101945003433`}, {0.3177768789101845, 
            0.21400836471833404`}, {-0.10157730540543894`, 
            0.}, {-0.08692000551159278, 0.06135725341404979}, {
            0.2835306787518963, 
            0.}, {-0.08692000551159278, -0.06135725341404979}}]},
          Annotation[#, "Charting`Private`Tag#1"]& ],
         {
         "WolframDynamicHighlight", <|
          "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>}], 
        StyleBox[
         DynamicBox[(Charting`HighlightActionBox["DynamicHighlight", {}, 
           Slot["HighlightElements"], 
           Slot["LayoutOptions"], 
           Slot["Meta"], 
           Charting`HighlightActionFunction["DynamicHighlight", {{
              Annotation[{
                Directive[
                 AbsoluteThickness[2], 
                 RGBColor[1, 0, 0], 
                 PointSize[Medium]], 
                
                Point[{{0.08422538735696866, -0.29890101945003433`}, {
                 0.3177768789101845, -0.21400836471833404`}, {
                 0.08422538735696866, 0.29890101945003433`}, {
                 0.3177768789101845, 
                 0.21400836471833404`}, {-0.10157730540543894`, 
                 0.}, {-0.08692000551159278, 0.06135725341404979}, {
                 0.2835306787518963, 
                 0.}, {-0.08692000551159278, -0.06135725341404979}}]}, 
               "Charting`Private`Tag#1"]}}, <|
            "HighlightElements" -> <|
              "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>, 
             "LayoutOptions" -> <|
              "PanelPlotLayout" -> <||>, 
               "PlotRange" -> {{-0.10157730540543894`, 
                0.3177768789101845}, {-0.29890101945003433`, 
                0.29890101945003433`}}, 
               "Frame" -> {{False, False}, {False, False}}, 
               "AxesOrigin" -> {0, 0}, "ImageSize" -> {360, 360/GoldenRatio}, 
               "Axes" -> {True, True}, "LabelStyle" -> {}, "AspectRatio" -> 
               GoldenRatio^(-1), "DefaultStyle" -> {
                 Directive[
                  AbsoluteThickness[2], 
                  RGBColor[1, 0, 0], 
                  PointSize[Medium]]}, 
               "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
                   Identity[
                    Part[#, 1]], 
                   Identity[
                    Part[#, 2]]}& ), 
                 "ScalingFunctions" -> {{Identity, Identity}, {
                   Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
               False|>, 
             "Meta" -> <|
              "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, 
               "Function" -> ListPlot, "GroupHighlight" -> False|>|>]]& )[<|
           "HighlightElements" -> <|
             "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>, 
            "LayoutOptions" -> <|
             "PanelPlotLayout" -> <||>, 
              "PlotRange" -> {{-0.10157730540543894`, 
               0.3177768789101845}, {-0.29890101945003433`, 
               0.29890101945003433`}}, 
              "Frame" -> {{False, False}, {False, False}}, 
              "AxesOrigin" -> {0, 0}, "ImageSize" -> {360, 360/GoldenRatio}, 
              "Axes" -> {True, True}, "LabelStyle" -> {}, "AspectRatio" -> 
              GoldenRatio^(-1), "DefaultStyle" -> {
                Directive[
                 AbsoluteThickness[2], 
                 RGBColor[1, 0, 0], 
                 PointSize[Medium]]}, 
              "HighlightLabelingFunctions" -> <|
               "CoordinatesToolOptions" -> ({
                  Identity[
                   Part[#, 1]], 
                  Identity[
                   Part[#, 2]]}& ), 
                "ScalingFunctions" -> {{Identity, Identity}, {
                  Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
              False|>, 
            "Meta" -> <|
             "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, 
              "Function" -> ListPlot, "GroupHighlight" -> False|>|>],
          
          ImageSizeCache->{{4.503599627370496*^15, -4.503599627370496*^15}, {
           4.503599627370496*^15, -4.503599627370496*^15}}],
         Selectable->False]},
       Annotation[{{
          Annotation[{
            Directive[
             AbsoluteThickness[2], 
             RGBColor[1, 0, 0], 
             PointSize[Medium]], 
            
            Point[{{0.08422538735696866, -0.29890101945003433`}, {
             0.3177768789101845, -0.21400836471833404`}, {0.08422538735696866,
              0.29890101945003433`}, {0.3177768789101845, 
             0.21400836471833404`}, {-0.10157730540543894`, 
             0.}, {-0.08692000551159278, 0.06135725341404979}, {
             0.2835306787518963, 
             0.}, {-0.08692000551159278, -0.06135725341404979}}]}, 
           "Charting`Private`Tag#1"]}}, <|
        "HighlightElements" -> <|
          "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>, 
         "LayoutOptions" -> <|
          "PanelPlotLayout" -> <||>, 
           "PlotRange" -> {{-0.10157730540543894`, 
            0.3177768789101845}, {-0.29890101945003433`, 
            0.29890101945003433`}}, 
           "Frame" -> {{False, False}, {False, False}}, 
           "AxesOrigin" -> {0, 0}, "ImageSize" -> {360, 360/GoldenRatio}, 
           "Axes" -> {True, True}, "LabelStyle" -> {}, "AspectRatio" -> 
           GoldenRatio^(-1), "DefaultStyle" -> {
             Directive[
              AbsoluteThickness[2], 
              RGBColor[1, 0, 0], 
              PointSize[Medium]]}, 
           "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
               Identity[
                Part[#, 1]], 
               Identity[
                Part[#, 2]]}& ), 
             "ScalingFunctions" -> {{Identity, Identity}, {
               Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
           False|>, 
         "Meta" -> <|
          "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
           ListPlot, "GroupHighlight" -> False|>|>, 
        "DynamicHighlight"]], {{}, {}}}},
    AspectRatio->1,
    Axes->{False, False},
    AxesLabel->{
      FormBox[
       TagBox[
        StyleBox["\"p[1]\"", Bold, 14, StripOnInput -> False], HoldForm], 
       TraditionalForm], 
      FormBox[
       TagBox[
        StyleBox["\"p[4]\"", Bold, 14, StripOnInput -> False], HoldForm], 
       TraditionalForm]},
    AxesOrigin->{0, 0},
    DisplayFunction->Identity,
    Frame->{{True, True}, {True, True}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    ImagePadding->All,
    Method->{
     "DefaultGraphicsInteraction" -> {
       "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
        "Effects" -> {
         "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
          "Droplines" -> {
           "freeformCursorMode" -> True, 
            "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
      "ScalingFunctions" -> None, "TransparentPolygonMesh" -> True, 
      "AxesInFront" -> True},
    PlotLabel->FormBox[
      StyleBox["\"\[Theta] = 0.490874\"", Bold, 16, StripOnInput -> False], 
      TraditionalForm],
    PlotRange->{{-0.5, 0.5}, {-0.5, 0.5}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.02], 
       Scaled[0.02]}},
    Ticks->{Automatic, Automatic}], ",", 
   GraphicsBox[{{GraphicsComplexBox[CompressedData["
1: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

       "], {{
         {RGBColor[0, 0, 1], AbsoluteThickness[2.], Opacity[0.3], EdgeForm[
          None], GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJxNlndsl1UUhk8LZRQKlAK2QhnVolQqggruYilFpcpSUVRGEWSWvSngitsY
t6IxmriixhlxxK1RjNs44o57xL0T1/vmPIb+8eS73/3de+457zn3fL9BzUsm
txRGxN+inZghpotdxBqxWtSLI0SNGCK6iw6io1gnFouFYqMoEiWiG2Ovq8Z2
F7FJtIoG0SiKRZkoZ49t92ZtV9GHp23uK4ayvhd7va6CfT3EMtEsSsVObXwZ
x3k9RS37+4pKzvM5/Xl63wCe9ms39HA8K8UpnDlH7MW+Ymzat/3EMGw3Yb8f
utajSQd87oYWXdCoFR27ov2u6FyDjsVo3Z15a787sRdhrwR7vfGpFu3s2ywx
Ex1LiLEP+8p5b0KbXtioxP8V6LuHqMNmLb5UsL+ZcY82mlai1UQxCP0GsH4V
mu4pRhBvYZsceP9wUcV7EbmwfqPR2jlYKxax/xCxdxu9qtFjMLm0jaViCdpt
5jfPbxDrxXGxo/7a6ljG7zXYHsm89ZpNHBXEPAzd5hGD/T9A7M97f3z32oOI
37FPFfuI9jwHM64mLtfJieIEcjAR21WcOYpzh3NWFXEfiHZHc57PGhNZkwVo
6nFH4qojNts4FDv28WB0rkFr+7UGW7a5AP0a0b0BLQ8TY/H/GN7bMdfAeCb7
yrDje9s5sm+MRYdp4vDIXuTcNJGfIxk79gm89+N5FDlq4r0vOk1gzWhxUmQ9
Wc9JkbU6gHfnajLzVcQ6hXinoGkhPk7Fz+PRoTM6HUv+GpkvZs00Yqkjr87p
Bn4bwrtzPRTdV3OWczmdvLkPtETWs+dmkNNGNHXf8910jbo+T2a8c+Q98G89
mGtmfih7y3jOws5s9rvWXdu+zwPRaQ5a+Tk3sr69Zn5kPc7lt//7wDw0ns94
IP75t3J0WoCG4xg7Jt9198GOaLIodnyPPO4U2ZcWEtdCNPK4Ho0K0GsJ8y2s
6YQGni/luZSx55ehj5/LI/uhxyuYX857KXGsJC4/VzG2Lq61SnRcSdz15Nex
TELTKuZ8x5z3i8TP+O8a2YBOxr3JdfW7uDmy3tazxrVUw7vHvpP+1pSg2Tp0
ek+8HlnjL4ptkf3Ad7SVfYtZb622RPbQjeCxe2mxHHwksn/cI7ailX1/F/9/
EBdG1sNP4obIe2bfH8X/38RNkT3jD/Fn5F0agybW7HZxNfn8RfwaeS/fEddF
9kWf8ypnfSCuiuyt34sf0buVeDbym2PxXb5GPEauiuT46ZG9+SvxtRgv3hJv
E+O14tvIvvOmeCOyfku19+HI3nO9eC2yt/4j7kfnJ8STkf26vdafFtl3TyX3
Bfi1Bd/OFtsj7+Z34iHsO5ZNrBnLuIF9rcx/JM6I/D7cKZ6LrNszxcWR9+4s
cQn2zxUvRPbPB8RLkfV8r3g+sv5vFc9G1sbT4pnIb8Y24hyJj9ZiFOfcwVkF
missyF78BX54fiv6Wtsb0WUEun6Jts7teeT3c/FZ5P/Wf6kD18At5M+5+1h8
EvkteUpcHvlddJ4fJNefss5rnPMPybvvy1pivFT8FdmjL4ise9f8N5H1MR5t
zkGf98UVkd8/63c+Gl4ZWZeuO9fRfcT7ing58htlXW/j3MfFZZH/KbaTp57k
8G7y6DtxV+S9+A8djO66
             "]], PolygonBox[CompressedData["
1:eJwt03lMz3Ecx/F3/SzMkfzJP4o5YuSYsxyzRgzzc7TCrNba+idWa+tf1oxi
Zo7YHKUy982YGIV/MBazGU3NuSQyd4znu8/rj8c+3+Pz/Xw/n/eRmLsuWhhr
ZhnogQbUYChm4BS6kIXe2IjbSMMEnEXfGLP1jCNRhlv6dgReYi+GYxIq0Iv5
+YyJuI5qzME07MRTzMNAGHP/MYzDVLzHO+3F59SiEalYjircxHSMx1afyxoF
jEOwHV8QRRLeYBOSsQBNmpOkPW1BT77PYxyEc+jHfRFjAl6hFaMUwxvYgQgm
Yh9aFAuPwRE0Yz5W4AT6sF6hxwWXEMd9DuMYnMZrrZ2Ne/iL1ZiFy3rm15N1
lruYqTN1aY1s5fAJfiMT6Zr7Eyv1jZ/tPONoC2f8hR86i8+J5/0VxbJEZ/2u
s0SU23rGFAs59r3uwirt+Zty5rlahv7Mv6DYFitXVcpdgWJz0kJteYz+4Jli
42sO4P0xxa7UQi2eUW68Jh/jq/41F534bKH2luIaDmIJpuAQOnTtNXcHxzHM
Qs17LexnHGuhJrxXIjxba6FnDuOT1o5q7XYs0j8qlYN01cAe1FnopVTNPYDF
+uYjyjFYz+7jgXLtz9os1IzHY6H26jEp1Z4910ct9F6m9rrButuqe89XldMS
nclz9wizlcPd2GahN72nvDY3W+jNHOXig/7te/BeeGuhl7wnLirHnluvqYf+
b+7X6B+xMWEz3tv+7DleKFf+6j8nDIFg
             "]]}]}, {}, {}, {}, {}}, 
        {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[2.], 
         LineBox[CompressedData["
1:eJwt0vk2F3EYwOHfj2wVcQluySW4AF0DLSjJkhZLSWRrkyW7SrJkyxYJqYhE
EqkseRz+eM7nvO/5zpw5MxOfeDYhKRgIBHL4wCibbFFKJ9cp44SDKfqKLqqI
tavUbqo5ZX6g+TzhtPmx9lBDtPmpFvCOSeqIsa/VPtKJMBdqB02cMTfqIBlE
mYv1OXlc4aRdm95lhKtsUMIPfrJOJm+5TKRrWnWYIYLmkMMXwn95zx3WaCbO
vkVv850iVrlEPwM8Y58G3rDHNXaZYoVlvlFPuHumaS+p5DLBOEt85cLxN3rI
Do/4wic+M88iC1zkNX/4yzbltJPNb+4zww3G+EcFYZ7lnM5xk1lu8ZHzvOAl
9wh1Nlmz+MV04OgfOgB2hGMN
          "]]}}], {}}, {{}, 
      InterpretationBox[{
        TagBox[
         TagBox[
          {RGBColor[1, 0, 0], PointSize[Medium], AbsoluteThickness[2], 
           PointBox[{{0.13110746880922272`, -0.23595003589334473`}, {
            0.2983733005702336, -0.1835220979898622}, {0.13110746880922272`, 
            0.23595003589334473`}, {0.2983733005702336, 
            0.1835220979898622}, {-0.1438507414523405, 
            0.}, {-0.12028730745899054`, 0.06566767948749361}, {
            0.31865945156073566`, 
            0.}, {-0.12028730745899054`, -0.06566767948749361}}]},
          Annotation[#, "Charting`Private`Tag#1"]& ],
         {
         "WolframDynamicHighlight", <|
          "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>}], 
        StyleBox[
         DynamicBox[(Charting`HighlightActionBox["DynamicHighlight", {}, 
           Slot["HighlightElements"], 
           Slot["LayoutOptions"], 
           Slot["Meta"], 
           Charting`HighlightActionFunction["DynamicHighlight", {{
              Annotation[{
                Directive[
                 AbsoluteThickness[2], 
                 RGBColor[1, 0, 0], 
                 PointSize[Medium]], 
                
                Point[{{0.13110746880922272`, -0.23595003589334473`}, {
                 0.2983733005702336, -0.1835220979898622}, {
                 0.13110746880922272`, 0.23595003589334473`}, {
                 0.2983733005702336, 
                 0.1835220979898622}, {-0.1438507414523405, 
                 0.}, {-0.12028730745899054`, 0.06566767948749361}, {
                 0.31865945156073566`, 
                 0.}, {-0.12028730745899054`, -0.06566767948749361}}]}, 
               "Charting`Private`Tag#1"]}}, <|
            "HighlightElements" -> <|
              "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>, 
             "LayoutOptions" -> <|
              "PanelPlotLayout" -> <||>, 
               "PlotRange" -> {{-0.1438507414523405, 
                0.31865945156073566`}, {-0.23595003589334473`, 
                0.23595003589334473`}}, 
               "Frame" -> {{False, False}, {False, False}}, 
               "AxesOrigin" -> {0, 0}, "ImageSize" -> {360, 360/GoldenRatio}, 
               "Axes" -> {True, True}, "LabelStyle" -> {}, "AspectRatio" -> 
               GoldenRatio^(-1), "DefaultStyle" -> {
                 Directive[
                  AbsoluteThickness[2], 
                  RGBColor[1, 0, 0], 
                  PointSize[Medium]]}, 
               "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
                   Identity[
                    Part[#, 1]], 
                   Identity[
                    Part[#, 2]]}& ), 
                 "ScalingFunctions" -> {{Identity, Identity}, {
                   Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
               False|>, 
             "Meta" -> <|
              "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, 
               "Function" -> ListPlot, "GroupHighlight" -> False|>|>]]& )[<|
           "HighlightElements" -> <|
             "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>, 
            "LayoutOptions" -> <|
             "PanelPlotLayout" -> <||>, 
              "PlotRange" -> {{-0.1438507414523405, 
               0.31865945156073566`}, {-0.23595003589334473`, 
               0.23595003589334473`}}, 
              "Frame" -> {{False, False}, {False, False}}, 
              "AxesOrigin" -> {0, 0}, "ImageSize" -> {360, 360/GoldenRatio}, 
              "Axes" -> {True, True}, "LabelStyle" -> {}, "AspectRatio" -> 
              GoldenRatio^(-1), "DefaultStyle" -> {
                Directive[
                 AbsoluteThickness[2], 
                 RGBColor[1, 0, 0], 
                 PointSize[Medium]]}, 
              "HighlightLabelingFunctions" -> <|
               "CoordinatesToolOptions" -> ({
                  Identity[
                   Part[#, 1]], 
                  Identity[
                   Part[#, 2]]}& ), 
                "ScalingFunctions" -> {{Identity, Identity}, {
                  Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
              False|>, 
            "Meta" -> <|
             "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, 
              "Function" -> ListPlot, "GroupHighlight" -> False|>|>],
          
          ImageSizeCache->{{4.503599627370496*^15, -4.503599627370496*^15}, {
           4.503599627370496*^15, -4.503599627370496*^15}}],
         Selectable->False]},
       Annotation[{{
          Annotation[{
            Directive[
             AbsoluteThickness[2], 
             RGBColor[1, 0, 0], 
             PointSize[Medium]], 
            
            Point[{{0.13110746880922272`, -0.23595003589334473`}, {
             0.2983733005702336, -0.1835220979898622}, {0.13110746880922272`, 
             0.23595003589334473`}, {0.2983733005702336, 
             0.1835220979898622}, {-0.1438507414523405, 
             0.}, {-0.12028730745899054`, 0.06566767948749361}, {
             0.31865945156073566`, 
             0.}, {-0.12028730745899054`, -0.06566767948749361}}]}, 
           "Charting`Private`Tag#1"]}}, <|
        "HighlightElements" -> <|
          "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>, 
         "LayoutOptions" -> <|
          "PanelPlotLayout" -> <||>, 
           "PlotRange" -> {{-0.1438507414523405, 
            0.31865945156073566`}, {-0.23595003589334473`, 
            0.23595003589334473`}}, 
           "Frame" -> {{False, False}, {False, False}}, 
           "AxesOrigin" -> {0, 0}, "ImageSize" -> {360, 360/GoldenRatio}, 
           "Axes" -> {True, True}, "LabelStyle" -> {}, "AspectRatio" -> 
           GoldenRatio^(-1), "DefaultStyle" -> {
             Directive[
              AbsoluteThickness[2], 
              RGBColor[1, 0, 0], 
              PointSize[Medium]]}, 
           "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
               Identity[
                Part[#, 1]], 
               Identity[
                Part[#, 2]]}& ), 
             "ScalingFunctions" -> {{Identity, Identity}, {
               Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
           False|>, 
         "Meta" -> <|
          "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
           ListPlot, "GroupHighlight" -> False|>|>, 
        "DynamicHighlight"]], {{}, {}}}},
    AspectRatio->1,
    Axes->{False, False},
    AxesLabel->{
      FormBox[
       TagBox[
        StyleBox["\"p[1]\"", Bold, 14, StripOnInput -> False], HoldForm], 
       TraditionalForm], 
      FormBox[
       TagBox[
        StyleBox["\"p[4]\"", Bold, 14, StripOnInput -> False], HoldForm], 
       TraditionalForm]},
    AxesOrigin->{0, 0},
    DisplayFunction->Identity,
    Frame->{{True, True}, {True, True}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    ImagePadding->All,
    Method->{
     "DefaultGraphicsInteraction" -> {
       "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
        "Effects" -> {
         "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
          "Droplines" -> {
           "freeformCursorMode" -> True, 
            "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
      "ScalingFunctions" -> None, "TransparentPolygonMesh" -> True, 
      "AxesInFront" -> True},
    PlotLabel->FormBox[
      StyleBox["\"\[Theta] = 0.539961\"", Bold, 16, StripOnInput -> False], 
      TraditionalForm],
    PlotRange->{{-0.5, 0.5}, {-0.5, 0.5}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.02], 
       Scaled[0.02]}},
    Ticks->{Automatic, Automatic}], ",", 
   GraphicsBox[{{GraphicsComplexBox[CompressedData["
1:eJx1VntQlGUXXy8xjoiiQ1k7Wjhe2jTNzC3x0uFzp6+isoUcw7JXu0AqFcVF
ZtE+7eJmfRKIGNVYsE6akQnmyvWFw+5ykUVoXdBdqbCMGLQiI0irr/bL9+n3
OPM27j9nfvuc55zfuT3nnfJEakLScIPBEDnMYLgkG5wzri0I1NMxITn7yXU1
5oJmiWeNOXq2x+yU8mL16Bz7wLsSqwIT8CQhJYZ9YNgHnjvhgBKwtksMv3o/
wHoJ/8DwDwz/wPAPDP/A6WsubFHtfonBRx+n3i+wXoIPMPgAgw8w+ACDz5Xy
rI9b71cv4R8Y/oHhX68PCX1gv+avms4IySc06ZUY8qwmS9ig/d5X8X+r+F/q
wy9wk+bHR7iPegDfqOk3SLvRGu6kK/mBPWDoIQ78D6yXiA8Y+dKfgyf86/sG
/+O+Pl7oIz7UGRh24OdKeYQ9fX+AL/7X85f11vrPzfM0vQ/45eTPhw46jtFs
jXcdZWn9UEFLBGbTuIXTFEuLvAd9nEP6NPtl3F27qTkU+ozswg7jXpTwJ++5
hD5BH34hwQf+04QdukHkS+YFWN9Heon8wy94dFa8nRDxbSNfU3NJ7w2J39fu
vSH7FPUARp6RR/AGH+QfWL7Lwr6MBxh5wjzq64R8gj/yAx7A8IP84H/EC7uo
F/oJcwOMvto9Ovd+U+lxQv2gp5838EAekQ/9uwI+kLivf09QL/DBvIAP8oL3
FPfiylcfsSodkgcw6on8Ij/IP/IDP+ADP8gX7Oj7G3XR9wnyCIz7sAd9xIs8
43zHlqILBx01sr8rg6v2WbtbSb/H+r+bEmMqVWVfdg/ln2n5juV79OXauc+r
YSpfv+Li2oEu3z/2sz/4qMccdVjm84f+/Dz7wH6Cvv47IPEx+02KpVzW5d6n
L/hDm6sIfFF38NXvnXm1yjRbjkvWY+bSib+2zPJQ1E3l4aX/qqdNsYXTbM+6
eE50W2/Pt0ekzC9su1XZ6eK8f2eXW+s+perz419Wew/RjGWFR0OrmZIz/lgT
MLTR4Ozz803jmOxfPuAPnW6h4JzwW5SpHt5Wecl/LN8/atERc1QN/zQm3WX0
3kcjHTlu48wanj/h442qfS/Nzq3elbK/lquLvlkVMd5HZcl/FqUEKzjfefqr
UNFx+njVunUD75bxoK33i9BpD1eM2FFvjDvAa2Li/6OGNcj+8R72jCh1dVLy
UAZZbC/x+lzDuZ6rG7iz+fsce1oJRSWdS4yI98u+gb9i4Y/irmrJVsP28Yiv
zr7i2FRJ4L9Y8CfwnSz4yv3VJupNe3+Jtdu9l/cZ8uET+aCDFutb9k8bKa+T
lliq3FKv/vvFtymey9+P80R95PdAg5Z3F6e2TJ9l+VWV7yvmKkNderep9PJ3
3krRH+yuvDRvSVIP/PT7ctuOsbMVi5Nvjk84ZtzT+I99eeG65hKr8pHs1/Af
tX5l5FPOb+rKFRGNHbJP8T0xesP4Nx1qvrSPOYL9U8I+4T7Ocb89U7sv57BB
zA+h/qgn8qP/DkoW+ZH7PFvES8gP6gC/3WK+ZX0qRX3kfldFPajzo4eWmB6s
5gWTN8dYTjllvw2IfpP9+57oXzrZH7chcN5Hp6fe8ULAd5ha+yYvsDiOUEbT
7+d7ptTzqA0r91vrqil5Qvt0W209z9haMV1JOUobz9k2q4qHMW8j52jzxl17
Xwwvfbye7+nP9BnjDjPs/yjs8xxnfFpgbgcl/v7wcaN3j8QLBSbcjxH3CXMf
LaSMb6aIT/J9RvAl8FUEX/meZIj3hMA/XfCX+zln5J0vqYpbzu0Ty21Zam8F
J+88scASc0LuF8xz/6A2z/L/c3HdKwaMNXKOg2eiXrMn1NGBF61PD3hd5BSS
n0wtznH8z03b4pdlBCLdbJ82ZmJB1iH2/fyKah4s553HdhXZ08r43o3BpaZb
KuQ+/E3Y5w/mf/i6Y/EuWrv7m7bQalX2WZ/wx/6TBRXW6/fQ7qz8uyLu+uv9
+vt9vF28jzyqI6zYPq+Mfvm59WTPUB3ft/oBsyWmWfoJV53BEDUxbU7KCljz
2Ej7HCl9TazkPLXAYstknI8Q54Tz57Zr53LuEkT+CPG5RXyE+BaJ+Gj9na9/
HSIHP+Ld9te3XhWB/3bBX9Znq6iPzCck8rlF5JMSYjOy1dub6GKff39K0C33
zUKxbxjv3dvivWPoG85q+vIdSxb7jfH+ThDvL4PvesFX7o/BYm1/EOqTKOpD
yHevyLfco+1iPxPe8Ylvjn1VbarnzDEPLzKlttKzYelN5uUuPhC+SAnktVPX
J6bt9rQaTtuaG2s55aOuZSn/dSx2yn1YLPYhP/d1V1jpMA9Xlf8w1dZ2iMsn
tS2xrPNT3+7KdDWshHC/Vdyn6CD19pjf4knDE6cqnirJZ5zgQ+CTJPgQ+HgF
Hzo6zOs0L6/hyIdeG19Q6OTIsblDLbMaOTrJkRmwOqT/sPc0/5wwiT4z/tZB
kXUbe3rMhVJ/uNAnnHfWaufS/nBhn7Bv3xH7lhBviYiX/g9P2wGe
       "], {{
         {RGBColor[0, 0, 1], AbsoluteThickness[2.], Opacity[0.3], EdgeForm[
          None], GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJxNlmdslmUUho+tpS0FCvSjllprW5YMQYoDRGUqgqKlKgriKIKsFpBpW1Gj
UaPGEUc0xLgTNe6duKJxJWrce+CKe+M2cdx3zkXijyvv+z7jjPuc5/m+xoWr
WlcWRcTfolgcJkaI4WKdWCsOFZWihygVC0WbGCJmiAliqOgWXaJdDMNehdgg
1os5olb0Ff1EJzb7iIH48FxB9GSv15WJcuZK+R7AfC9Rgw3vr2ast9iBp+d2
xWaVWC0Wif5iPLmWiCXsrxc7824bc/G3k2hgzD73E2NEnZgsxrK3kfmBzBdY
M0U0Y3se6waj9xC02EPsLprEcjEOn23UoRQdK9B3Ldpbk1Ho3hO929GiC617
46MSTcrQ17qO5L2cuRryrCSPGmxVo8U2favxV0DbCuYL2K1l/xL089waajBa
HCT2RacaNGmgPrXEVI1m9fhs4HsuuhbQpe//4m3C1mx0H4eugxnfKDrELujs
egxCnyHYO1DshaZ7onMRug1Fq57MO+9TInvJNnYjBuewN/p6/Sqxkm+vHcH6
adTP9vaJ7NcqbAzEzuFiInMFNPOalsiz6v5YjO9aNGpGtybybyT2CcTTgDZe
O11MZd0wcnePHRzZl7ZxAFoUEcs0YraePksl7J+K1mOobxVxT2T9THQpJ95J
2B9HvbbFPpn4jxfHMTcLjaqIazo+WyPPRjExziDXUdTSOR1DDkVoMJMYjhJH
RvboJHJuIvZZ+HKt9o/sD+d3CDmWor37ooIYelGTFny1sGa7yPvQsW6Pz7n4
dU5HoNMAxgs8va6O+s2jbu7dDux4bH5kDx/Nu2ObjXZTiLuNeO3/WPZOQdtm
4lxAzAvQq4jY24j/xMg+2zGyl31W+zG2iPGlkWe+nn0L2buY/a55NWsGsM9z
tYwtRZOxvNfzXMa4812ODn6uiOydFXwPQpt2cpzPHmvSzVwJdfIa32cjyacf
8fi9P89VvJ8UeXf15+nv0axfTe5+ruHd/bcWDZeRw1j09HgZz3Ws8W+K70Sf
G/fRemL0cwO5/Cx+oT6/id+pZQ8J/Hhkb74kHsbevWIzcRZrzSORPb4p8s7q
RI+NaNKbsT5o08VYufbeGXmG3xbXkMs74trI/tkiLovszZ/EjZH9uFW8G9kD
P4jzqdH34kfq86t4P/L8Pib+jDz/f+DPvq60DRk5gbi6ibkdjazPhdgqxs+r
+BpPjo6tFT3noEMXdvrI9kPo9pQ4G63OES9GnkH/Vzot8o75R9wWeZe8Kd5C
56vEk5F9Xiqb10XeVd+Rm/O6QbwWeY88LZ6JvF9OFReglTV+lNwfEC9E9lUv
Td4XeWe8J16PPLsfiDfIrwN9rE2Z1t8Sead3kbNrPJweKOG5ife7xPORff6h
OB39/hVnRt7dnezx79et4lK0vQmNrE9f+a0UJ+v9cvERPp3HWeSyGe2s27Pi
ksg7+nq0s26O/Qnidz3PpabuhaAfXCv3t+v1rbg68l53vM8R8xXi7siz7vzu
IcevxDeR9+zX1LuOvD8m9/Miz5jP1+1oYZsXi78i79DPxWeRv9XWYwua3EwN
HL/PpfvMPXYRGlmf+6mra3pH5HnzWftUfBL53/wL8WXk78Qr4uXIO9599yAa
nhHZl+5J99HWlCj+Az0n6Dw=
             "]], PolygonBox[CompressedData["
1:eJwt1FmIiGEUxvFjcENSbnEhowxDM2TfJmMfIw0iZtAoJWUyV66IKCRb1ixZ
xpJ9nyEajG2ULVxYJtvY98h+4f/0Phe/3q/ve9dzzvu1KS0rmpUREUPRCG9Q
j04YhwtYjobogcX4gAlojWtYgF6e4yUOoQ/GYh/2o73nP4amDSJm07bAc8xH
B4zBEjTm+0zatmjC8xH3LcMJvPbe+mILdqAbRmI3rmIISnDUc2hsRyzDV0xC
Jn7jF3KRh3PaJ/1n+N1DPMJo8DouYiOykY9FyODDdNqWkTot9PdpuIEq9EMB
arHXsRyGNXiCno7ReezEKAx0Ll45lsrJe7xDK4zHXZ8p02Oas/5przcHz7AW
WV7jsM+Q7xyddQwVuwH46ZwpV5NxHz/8XIQ/eIAumOJYbPBZdeZVWOq9D8JT
vHButYdd+IdStHPsNtPmRIrhbfzFVBS671zHXmNUO8dpO0eqoe/OuXJd7LEr
vTfN8QWfI9XSRNzDN/dVTpsx3ynnrhzb8DFSLeiM1bjjvXSNVBu6A6p91Yhq
tdrfVLPzIt0J3YXuqMElx1ZnVG3UOveK1xXHRLEYHOkuXPaz7sR2x1SxVI2v
xh7PrRq/iVvoH6kmlPtNGBGpBs5EqsEC97mO9ZHuQm/3PRnpLmlMBT45Vroj
W/E2Uq3pzlc6ZuXOgWp7RaRa03rrcNBzD8cBv9Oz/hGPUReplvRP+Q8EgYUc

             "]]}]}, {}, {}, {}, {}}, 
        {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[2.], 
         LineBox[CompressedData["
1:eJwt0uk6VlEYgOFPmSmdQqfkEDoAnUHGlIQimckQyqwIlaFQhjIUSooUSaII
0cDdpR/39ex37b3Wn71OnzkbGxcUCASu8YaXbPGDap6QTQ1/iOcpSfylnus0
cEAyw+TRQqTDm3WEVqLMd7SQaWa4xwnr7TrKeY6Zi/Ux/aRy3NoDLaGCMHO5
XuUSoeZereQFl/lOFet8Y4N0JkkjxJ4enWCcX1xhn9fc4Cvd7PGTV5TxkGD7
L+oapXzmC6tc4Dlj3Oekb7v0GR1kccpaDJ2ei2gj2nxXP7HCR5ZZopEI75v0
EQXkE/TvJ5IiQ9QSbr6lfWSyzRxvmWKHXW5TRw7v/t+FeRJ4Ty4LfGCRRAYY
5Ca/OUcGm8wGju7SITTWZHk=
          "]]}}], {}}, {{}, 
      InterpretationBox[{
        TagBox[
         TagBox[
          {RGBColor[1, 0, 0], PointSize[Medium], AbsoluteThickness[2], 
           PointBox[{{0.16591068104035053`, -0.1913417161825449}, {
            0.25512228824339317`, -0.16666666666666666`}, {
            0.16591068104035053`, 0.1913417161825449}, {0.25512228824339317`, 
            0.16666666666666666`}, {-0.1814791290228547, 
            0.}, {-0.14796010969859463`, 0.07068125923672587}, {
            0.33182136208070107`, 
            0.}, {-0.14796010969859463`, -0.07068125923672587}}]},
          Annotation[#, "Charting`Private`Tag#1"]& ],
         {
         "WolframDynamicHighlight", <|
          "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>}], 
        StyleBox[
         DynamicBox[(Charting`HighlightActionBox["DynamicHighlight", {}, 
           Slot["HighlightElements"], 
           Slot["LayoutOptions"], 
           Slot["Meta"], 
           Charting`HighlightActionFunction["DynamicHighlight", {{
              Annotation[{
                Directive[
                 AbsoluteThickness[2], 
                 RGBColor[1, 0, 0], 
                 PointSize[Medium]], 
                
                Point[{{0.16591068104035053`, -0.1913417161825449}, {
                 0.25512228824339317`, -0.16666666666666666`}, {
                 0.16591068104035053`, 0.1913417161825449}, {
                 0.25512228824339317`, 
                 0.16666666666666666`}, {-0.1814791290228547, 
                 0.}, {-0.14796010969859463`, 0.07068125923672587}, {
                 0.33182136208070107`, 
                 0.}, {-0.14796010969859463`, -0.07068125923672587}}]}, 
               "Charting`Private`Tag#1"]}}, <|
            "HighlightElements" -> <|
              "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>, 
             "LayoutOptions" -> <|
              "PanelPlotLayout" -> <||>, 
               "PlotRange" -> {{-0.1814791290228547, 
                0.33182136208070107`}, {-0.1913417161825449, 
                0.1913417161825449}}, 
               "Frame" -> {{False, False}, {False, False}}, 
               "AxesOrigin" -> {0, 0}, "ImageSize" -> {360, 360/GoldenRatio}, 
               "Axes" -> {True, True}, "LabelStyle" -> {}, "AspectRatio" -> 
               GoldenRatio^(-1), "DefaultStyle" -> {
                 Directive[
                  AbsoluteThickness[2], 
                  RGBColor[1, 0, 0], 
                  PointSize[Medium]]}, 
               "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
                   Identity[
                    Part[#, 1]], 
                   Identity[
                    Part[#, 2]]}& ), 
                 "ScalingFunctions" -> {{Identity, Identity}, {
                   Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
               False|>, 
             "Meta" -> <|
              "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, 
               "Function" -> ListPlot, "GroupHighlight" -> False|>|>]]& )[<|
           "HighlightElements" -> <|
             "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>, 
            "LayoutOptions" -> <|
             "PanelPlotLayout" -> <||>, 
              "PlotRange" -> {{-0.1814791290228547, 
               0.33182136208070107`}, {-0.1913417161825449, 
               0.1913417161825449}}, 
              "Frame" -> {{False, False}, {False, False}}, 
              "AxesOrigin" -> {0, 0}, "ImageSize" -> {360, 360/GoldenRatio}, 
              "Axes" -> {True, True}, "LabelStyle" -> {}, "AspectRatio" -> 
              GoldenRatio^(-1), "DefaultStyle" -> {
                Directive[
                 AbsoluteThickness[2], 
                 RGBColor[1, 0, 0], 
                 PointSize[Medium]]}, 
              "HighlightLabelingFunctions" -> <|
               "CoordinatesToolOptions" -> ({
                  Identity[
                   Part[#, 1]], 
                  Identity[
                   Part[#, 2]]}& ), 
                "ScalingFunctions" -> {{Identity, Identity}, {
                  Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
              False|>, 
            "Meta" -> <|
             "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, 
              "Function" -> ListPlot, "GroupHighlight" -> False|>|>],
          
          ImageSizeCache->{{4.503599627370496*^15, -4.503599627370496*^15}, {
           4.503599627370496*^15, -4.503599627370496*^15}}],
         Selectable->False]},
       Annotation[{{
          Annotation[{
            Directive[
             AbsoluteThickness[2], 
             RGBColor[1, 0, 0], 
             PointSize[Medium]], 
            
            Point[{{0.16591068104035053`, -0.1913417161825449}, {
             0.25512228824339317`, -0.16666666666666666`}, {
             0.16591068104035053`, 0.1913417161825449}, {0.25512228824339317`,
              0.16666666666666666`}, {-0.1814791290228547, 
             0.}, {-0.14796010969859463`, 0.07068125923672587}, {
             0.33182136208070107`, 
             0.}, {-0.14796010969859463`, -0.07068125923672587}}]}, 
           "Charting`Private`Tag#1"]}}, <|
        "HighlightElements" -> <|
          "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>, 
         "LayoutOptions" -> <|
          "PanelPlotLayout" -> <||>, 
           "PlotRange" -> {{-0.1814791290228547, 
            0.33182136208070107`}, {-0.1913417161825449, 0.1913417161825449}},
            "Frame" -> {{False, False}, {False, False}}, 
           "AxesOrigin" -> {0, 0}, "ImageSize" -> {360, 360/GoldenRatio}, 
           "Axes" -> {True, True}, "LabelStyle" -> {}, "AspectRatio" -> 
           GoldenRatio^(-1), "DefaultStyle" -> {
             Directive[
              AbsoluteThickness[2], 
              RGBColor[1, 0, 0], 
              PointSize[Medium]]}, 
           "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
               Identity[
                Part[#, 1]], 
               Identity[
                Part[#, 2]]}& ), 
             "ScalingFunctions" -> {{Identity, Identity}, {
               Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
           False|>, 
         "Meta" -> <|
          "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
           ListPlot, "GroupHighlight" -> False|>|>, 
        "DynamicHighlight"]], {{}, {}}}},
    AspectRatio->1,
    Axes->{False, False},
    AxesLabel->{
      FormBox[
       TagBox[
        StyleBox["\"p[1]\"", Bold, 14, StripOnInput -> False], HoldForm], 
       TraditionalForm], 
      FormBox[
       TagBox[
        StyleBox["\"p[4]\"", Bold, 14, StripOnInput -> False], HoldForm], 
       TraditionalForm]},
    AxesOrigin->{0, 0},
    DisplayFunction->Identity,
    Frame->{{True, True}, {True, True}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    ImagePadding->All,
    Method->{
     "DefaultGraphicsInteraction" -> {
       "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
        "Effects" -> {
         "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
          "Droplines" -> {
           "freeformCursorMode" -> True, 
            "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
      "ScalingFunctions" -> None, "TransparentPolygonMesh" -> True, 
      "AxesInFront" -> True},
    PlotLabel->FormBox[
      StyleBox["\"\[Theta] = 0.589049\"", Bold, 16, StripOnInput -> False], 
      TraditionalForm],
    PlotRange->{{-0.5, 0.5}, {-0.5, 0.5}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.02], 
       Scaled[0.02]}},
    Ticks->{Automatic, Automatic}], ",", 
   GraphicsBox[{{GraphicsComplexBox[CompressedData["
1:eJyFWHtQVPcVxoxVxwGCSChdFc1jYKPBR+KSNEiOyWq1jugmIb7GrDatGLsC
DY4PHg2S6mqtaIsoFIl10YaH8lAWeV08LO8FCsgjG5NCnLhxGiXVMhUfHbtt
7i/fj5nrH+GfM9/es+d8532Xp9+Lf2vLE15eXs+P8/L6TjbZQ4IyXfXUKSQn
/XJbrSGzVWLIOd5t37gN9sfk/ZrJ6daRHIkVgQl4upASwx8w/AHP9z9vdpm6
JP5IPJd+wEfrF1grwQcYfIDBBxh8gMEHeMfme3sVa6/E4Ac/4KfNg5YHsFaC
HzD4AYMfMPgBg5+Wj7YO2jxo/QJrJfgAgw8w+Gj1IaEP3Kv6q6GvhOQBVbZL
HKraaeJvVFzEXurfKQXPO8TnUh9+gVtUPz2E76NewIPCn7Q7S/1+PwHDP/zA
HjD0EAc+B9ZKxAeMfGn1UDfoA4OPtu8RL+oHDPvAiB88YU/bD+ABe8DQ0/JF
PcEX+KOYL+6W2DopTOVxmXar/ispUmDWP/nqc2ajk5LUvm1g6ON5f2X2Wz5f
N3OPaq9MYofA0h7sw16CsEczRXwyfmDkE5+jH4CRX3yulXgOP+APnlbBiwNU
vbMyHvAG/qE+hh3ECf/QB4Y+/EP/ReFfYvBBvpAP1BEY9UN8kJ0i/xLDrrwX
3z9HPjDvwIgHEnkEBl9g9B/4In/AiBsY/Yy5RL8Dzxf9wYG139k9xMCnVD+H
5HxDHxg8cicfXakvvSLziH5HHTBvwEN1Ka0eT7esC+xhzmAPcWN/w/+KS5sq
TOY+Al9g8IV/9AP8A8M/8oZ6oM9QL/Sjtu9RB/BHfsEf8wh+4I3vQw8YccIe
9OEXdvA86IDf/ZJfdJD27p/Mnf2jzKxa2R/v5KXqjYmX5Ry8t3X0truiXtaj
7IPRm845tXL/nW3Omproc44vDkcGJqY7pV1g7T09XLJkm8tUIHlcDG0+aFMq
5D1NmHL0lKWgisBXe/ciNn7x0DmnQeY/1nfGr0ZyGul6u7nNk8oUPD54pf62
gz9vHtw6kuTgJXPDf29LqeDFCR1/tPa28Z5sn1xrQh4vKvyt3TRUTtG/S3vk
PFdPxncG45SWTiq5XWoayblM7eOcV3SHGqhXSB7vteKa+7iT1rw5MdJ4tYH7
Vm2PUyYU87d31uda/lHNr914Ld9kTmYq/DDLUqDwJP9zyYp1P82esXe6+Uwd
h8/788fWjCtkWLZ6o8+WMv58fIR3ZtbY/ZzKIVMTozo423fcAZsSI3GVt4qp
c3hzvaGpn048Nb1P157Gy2+FPpsY2Sv7c9LrscWmoUq+v1iVBH6Dgh9NS9i3
fiSnkH99YtkO5Wc1BL7zBF/Z76dFfSnwzbdLDdvH7iniXyXil/mBvL2/74nS
nzfT6gylR/dMo/yefopXlD7eIffXTlEveY9jJ+xoMUQ7+N8N5cv08WP3GPNx
8E++YWbj2HtymugPDnQMRxgTz8i9D77A9klti43VPbKvsC/m58d/4Corl+8r
+94POGbRp8p9UST6U+YX9Zn3KHjQw31y3+D9ZvKuKUdsSoa0l7lVtUfQR/9D
v2unqk+YH6uYH0I/oJ7IB+YQ+UgS+SDEh+eIb5aIT/L8g5hvQr5Ql70Tg+86
LRWPvT/OEvWS+3CLqA8F5P8meiRJoeGiq/9xnnRw8KWgD5WQJo6sCnEYou18
cNlQselUK1+Z/XKjrr1I9nuo6Hfa+m3rC2aLnUKaPtnlUup5WkXFNpdfGx2o
SY4wVjcy5u+ymD/WjX4WblzfwhsX5F/z8AX+7OrEAffdbko6mfqpJ7WS9auy
2jybuunOGwurDf1VvHbXgkbDC310wnvNOp+/5sl53yDmncCvXPAj6O8R+gR/
UcIfYX+Ei/1BiHeuiJfAxyL4EPh8JfjIeINFvHI/BYr9JPPpFvkk5CNV5EO+
P9g/jdqr3GiQfX6/LtntNlTKvVGTv/RhydM1HLS8/G2fpQPy3mFfBIt9IT+v
f2A8a/Ktk3sj5ZXwfdYRppajR9b57G+gkAWbCy0HG/j9a3sG3BXMG47nLtHP
u8TmvyxItm2v44I7/3R5Si9xZfrepzLXXuTYRY1VhoBqeX96hH1eFzf6ur40
iyd3dc80N9ZyXGiLRbEeoTNn+/NMQ3Wyzw8L/xz2UtywuyKPyv677l2XH3Pv
q4emJaZ/QrnPp++2pbDc1xvFvmZ9xE9ilZZisgc8e9r6TD2/+FJ8tye147Hf
NTdFvgjxrBTxEOLJFvHQjRU1Tp2ukgNTgopNvlVy7otEfgnxviviJcT38G9q
fAT+pwV/Av/Dgr+s53lRT5nvYJFvmrBbUQz9LXR+5rRb7p2Nci6N4t5x44zo
Lz2pY+/HGT9OmG98UC33J+YZdxXvk//ydrcYAhyM/bxW7GeGP7vwJ/8fUC/u
MeOeQCI/ISI/jHuSJO6JvHc6ce8I9T4m6i334FLxfkHDUatLTOassd8b39fz
vKin3GsbxPsHIV7sozz1TnVQjsV/l8vPwYv7L14wBHzMCx0L14wk1bLbExKu
39RFy094LdI/WctzF/Zedx9v5exHxXOND/7/+zctLMbl185Thmet8fn6mMQD
t1RME2yHv/Rs6qUYtqfZlELpL0P4I9h/RdinsDuL/u6hJn65/0KXboWdY0bf
CMps7aEy/5/edN8tZ9jbJ+yx6brNP/NeH90LK9Al+mRJXCuwtKcX9gj2Tgt7
hHiSRDyE+J8T8dP/AJMTz3o=
       "], {{
         {RGBColor[0, 0, 1], AbsoluteThickness[2.], Opacity[0.3], EdgeForm[
          None], GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJxNlmeMlVUQhudeZRFYWKlL2RWWugtKUViKBURFRJBmA0ERKyhFqiAdYcES
azSW2AU19qixd0WxGxNrLFFj1Nhj1+j7Os+N/Hhyzne+c8+ZmXdmvlszc96k
ucWI6FCI2Enj0aKv2EOsFWvEeDFGDBe9RZ/IveVivVgnJoqWorHYRdSJAvNN
okFMFhtFmagQ1aKVaC12Zd2/r+Isv5vLPe1EJfPmoj1jC9vO6DOXiMWiKb/3
/U1ER977nk6MvmO+mCcGiOVigWgj9hW7i0ZiGvfViCnY0UV0E/WiK/MO3NOD
O6p41553B4hBrHVnr/fthX+dxYGc6fOO56xasR+alKFPHbEaj48FtOqNv0PF
ENFTDOa+XqI/+jVDs3K0XIc+zdFqIzEtI1YV3NOKuC1m3oSY90PHeWjWlrMr
8a0Cf0tadSAuJT067qBrJXdU8a49MatBn2ruWoFme4qxYgSxnEIs26FdF87s
SBxKWnXj3FacWUVMW+5gVw9+s1qsEgPFOHQajEa92DMErfyb0WIYOh0q9iHu
MyLzoJ676ojr3mhXJKaeO4fP5neO5UrOtp3LxJnE3XnRl/PKeG6MvSvxrR2x
sS6bI3Pbe/dn3fFaiH/VxGUQMe+Or47XQcztc098tk0Hi1E81+G7c/IQfCvi
h+PgfJsdWWONuH8Ettnv4fju+0dig+3dD5vriWFXzh7D7wajSzfsGIUeQ7Fv
CHEajY2nYF+ROIzFlv5oZnvniNM5176P4x6ffRjnT4isQ/t7BM+l3jcePaeL
YyNzcVJk7TkO63neObLfTsAe14Lr0bVSzn6vHSkOZ/8m5o7hLN553fk/FU2n
8ux7K5k7F47DJsf2GPZ1IcZHReaQ624av5vOvIZxOvvt3xp8HMm53uOesDQy
P2dG1kkto5+dPycyr2U8gXXrc1JkDjk2p+LXyWhWZG0W6xN4VyQes4nJhsh+
1Az9rGM9Gs5hzXtcY6WeNZf4nMFv2zL6eQDz+Zw5Q5wWmYuuRfcm96WFzHdj
9HM146LIGlvEs/f0IC6uM/eixZyzlDg2hcXEuR/3tWZtCfMFrLdhXMbc68u5
y3a4J1SxtoJ1z8+K7KW90bSIbd7fk/fLOdNrq1gfyLyacTXr1mIyGvm8tZz5
vbguMl/nEv9yxg3EtkYF9EBkv/hMvBJZfx+JbZH1+qTYis3nRPY1f7ecM66r
iei1gXv6cEfp2+dvXnPG9dg5mWfPm8mG8kLmVmeNr0bW/SPiRnS4V7wWmavN
tefbyLpurXmbQuZHE41NC5nTLTV+HdnbLhefRub8s6K2kH2wUuPL+PuU2BKZ
e9+JL/DPDWZ7ZM35vNs58wdxQ2S/bEE8/vt2F9LWYcTJ8XKNNDD3vjfETZH9
r6P2PxTZiztpfiHrtvG5SDt/Fzdj2y3iTXLhE3FnZN9trP3fRPbF28Q/QR/U
+h3suUt8HtlP73bsC9kL6jS+hI9fiq/Quqj1QiHr72nxQWQOvyA+jv9zbxN6
NjBvRFw2My+9K8XJ62XEo4E9LXRPRSH7zWPi3cj8v1R8GNlj2+v9uZHfoovE
VZE55v/U50V+534S50f2155afz4yhxtpfk9kL9yOzyPx6RL8cn9z7YxHH+th
LX4Tv0b+Z3+Q+3zXBehn7f7EVtu5Bc2s133YbZvfFg9H9hjn9eORuW1fn8Df
KyPz27ntunw9sjat+Yvo7hp17jpvr3AsC/kddB69Qy69Ja6N/O46j96PzKX3
xMWR/XYreltr59ej2Gz9n2H9au8tZE//W9wa+R27P7J32DbnoPPMOeYcvCYy
D38Wv0R+57ahh7X4Q/wV+S28PrKWnC/W8Ed0vCyyF7gP/AtJkwNl
             "]], PolygonBox[CompressedData["
1:eJwt1OdL11EUx/F7zZZF2x41bPvAhpFCe9G0IqQhSQPLsm0QhCT4B0S2aNjS
etSkQqOwPYiiaNCkaNl8EBU2aVjvw/k8eP3u/X5/3/u9955z7rdT3vLsZQkh
hAlIxE0cwSSMxjbUjyHMo03FLZSBW2EA7mMdhmI83mhMqt7xCA+RpGdaMbAl
MuiPxEd8QjbqoRqd+X+VxhzGLoxBf7zAS/W74zu+oiem4wGOYxCycAKfMQ0L
8RSXMUx7foLHSNa929iutdg7KnEP47AAP1CKXsjBJnRgvSutRS32IA2DsRHt
+X+F5tiMv8hFCs6iC/8X0fbGK7zGKPTADdRgou6dQ1eeX03bBnvxBUM05x/8
RkfMwFp8U2zsmRaMPam1LbJ3RM+J5WIx1iinlsuBmus8bd/gc3bj+qL2Wozm
0WNssS3AOzSL3recNo0eQ4vdfLzXGmzuKbZH+leVyxK8RZPoz07GByRwPYc2
U7E6o70XqVZOKXZWM2253km7BEvRgOuGmBq8ZpP4aRS9dvORSH+rYj3X8s71
UfXzcBeNoz87FtdxELMxAoeCv9j6GaqFfbT9gtfENe2xRPesFi7Qpgevid3a
s+3V1liHA5iFmbgSvGatVofbVIxvHT1XFpNneK7/LOflqFLurGZ34A76WFyx
PvgZydK9/filWsnV3uo0t+2xHXNt0NhCVCiHljs7UzWKucXaavSSaqRYNVOq
GFrs7MwkR89ppnL0L/iZSNGe7Sz/DH627EwfU04sF/YNOq01FSqG9m3YEvxb
Zd+I/wrYhZw=
             "]]}]}, {}, {}, {}, {}}, 
        {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[2.], 
         LineBox[CompressedData["
1:eJwt0uk21WEYxuG9lRRCKUPmJDmdDqEDyIGUhDJFI0ohGlFRISXNg7FIaFCK
SmZda+XDtX7v/ey1v/0zDuTuPxgMBAKn2exxRZ9RxiY7jO/eJ5kkwo7kqvdr
TnGNBLdD+oZ8dtkt2k8frex2u6XnaCPTvqMDtLPHvqvn+cJXOshyv6/DFJFq
X9CXPCLbfqijfKCBdLd6raSYNPupXmaCUkLdmnSDNupGLdGPjPOEeLdeHSPO
u0J36jcN0SCx7GA725jyWx0B7x7J0cd6iVUussZxVqhlkWWWOMZ7Ruhmr/8/
0Hd0ss/u0iEGKSTF7Z7WsEA1t0l2L9ATvKCKJLej+pbrZNg39DnlbLWn9Qef
iLKjuen9c/1b+UyMW7Mm6mGd5QwznOUXefxhjt/M85cjvGKL/4YH/397/wBR
1l/t
          "]]}}], {}}, {{}, 
      InterpretationBox[{
        TagBox[
         TagBox[
          {RGBColor[1, 0, 0], PointSize[Medium], AbsoluteThickness[2], 
           PointBox[{{0.18917438484041743`, -0.15917474971775553`}, {
            0.19934505851118434`, -0.15663868241925963`}, {
            0.18917438484041743`, 0.15917474971775553`}, {
            0.19934505851118434`, 
            0.15663868241925963`}, {-0.21496557885394987`, 
            0.}, {-0.17038068461855593`, 0.07662825961190016}, {
            0.3323677567054131, 
            0.}, {-0.17038068461855593`, -0.07662825961190016}}]},
          Annotation[#, "Charting`Private`Tag#1"]& ],
         {
         "WolframDynamicHighlight", <|
          "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>}], 
        StyleBox[
         DynamicBox[(Charting`HighlightActionBox["DynamicHighlight", {}, 
           Slot["HighlightElements"], 
           Slot["LayoutOptions"], 
           Slot["Meta"], 
           Charting`HighlightActionFunction["DynamicHighlight", {{
              Annotation[{
                Directive[
                 AbsoluteThickness[2], 
                 RGBColor[1, 0, 0], 
                 PointSize[Medium]], 
                
                Point[{{0.18917438484041743`, -0.15917474971775553`}, {
                 0.19934505851118434`, -0.15663868241925963`}, {
                 0.18917438484041743`, 0.15917474971775553`}, {
                 0.19934505851118434`, 
                 0.15663868241925963`}, {-0.21496557885394987`, 
                 0.}, {-0.17038068461855593`, 0.07662825961190016}, {
                 0.3323677567054131, 
                 0.}, {-0.17038068461855593`, -0.07662825961190016}}]}, 
               "Charting`Private`Tag#1"]}}, <|
            "HighlightElements" -> <|
              "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>, 
             "LayoutOptions" -> <|
              "PanelPlotLayout" -> <||>, 
               "PlotRange" -> {{-0.21496557885394987`, 
                0.3323677567054131}, {-0.15917474971775553`, 
                0.15917474971775553`}}, 
               "Frame" -> {{False, False}, {False, False}}, 
               "AxesOrigin" -> {0, 0}, "ImageSize" -> {360, 360/GoldenRatio}, 
               "Axes" -> {True, True}, "LabelStyle" -> {}, "AspectRatio" -> 
               GoldenRatio^(-1), "DefaultStyle" -> {
                 Directive[
                  AbsoluteThickness[2], 
                  RGBColor[1, 0, 0], 
                  PointSize[Medium]]}, 
               "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
                   Identity[
                    Part[#, 1]], 
                   Identity[
                    Part[#, 2]]}& ), 
                 "ScalingFunctions" -> {{Identity, Identity}, {
                   Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
               False|>, 
             "Meta" -> <|
              "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, 
               "Function" -> ListPlot, "GroupHighlight" -> False|>|>]]& )[<|
           "HighlightElements" -> <|
             "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>, 
            "LayoutOptions" -> <|
             "PanelPlotLayout" -> <||>, 
              "PlotRange" -> {{-0.21496557885394987`, 
               0.3323677567054131}, {-0.15917474971775553`, 
               0.15917474971775553`}}, 
              "Frame" -> {{False, False}, {False, False}}, 
              "AxesOrigin" -> {0, 0}, "ImageSize" -> {360, 360/GoldenRatio}, 
              "Axes" -> {True, True}, "LabelStyle" -> {}, "AspectRatio" -> 
              GoldenRatio^(-1), "DefaultStyle" -> {
                Directive[
                 AbsoluteThickness[2], 
                 RGBColor[1, 0, 0], 
                 PointSize[Medium]]}, 
              "HighlightLabelingFunctions" -> <|
               "CoordinatesToolOptions" -> ({
                  Identity[
                   Part[#, 1]], 
                  Identity[
                   Part[#, 2]]}& ), 
                "ScalingFunctions" -> {{Identity, Identity}, {
                  Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
              False|>, 
            "Meta" -> <|
             "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, 
              "Function" -> ListPlot, "GroupHighlight" -> False|>|>],
          
          ImageSizeCache->{{4.503599627370496*^15, -4.503599627370496*^15}, {
           4.503599627370496*^15, -4.503599627370496*^15}}],
         Selectable->False]},
       Annotation[{{
          Annotation[{
            Directive[
             AbsoluteThickness[2], 
             RGBColor[1, 0, 0], 
             PointSize[Medium]], 
            
            Point[{{0.18917438484041743`, -0.15917474971775553`}, {
             0.19934505851118434`, -0.15663868241925963`}, {
             0.18917438484041743`, 0.15917474971775553`}, {
             0.19934505851118434`, 
             0.15663868241925963`}, {-0.21496557885394987`, 
             0.}, {-0.17038068461855593`, 0.07662825961190016}, {
             0.3323677567054131, 
             0.}, {-0.17038068461855593`, -0.07662825961190016}}]}, 
           "Charting`Private`Tag#1"]}}, <|
        "HighlightElements" -> <|
          "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>, 
         "LayoutOptions" -> <|
          "PanelPlotLayout" -> <||>, 
           "PlotRange" -> {{-0.21496557885394987`, 
            0.3323677567054131}, {-0.15917474971775553`, 
            0.15917474971775553`}}, 
           "Frame" -> {{False, False}, {False, False}}, 
           "AxesOrigin" -> {0, 0}, "ImageSize" -> {360, 360/GoldenRatio}, 
           "Axes" -> {True, True}, "LabelStyle" -> {}, "AspectRatio" -> 
           GoldenRatio^(-1), "DefaultStyle" -> {
             Directive[
              AbsoluteThickness[2], 
              RGBColor[1, 0, 0], 
              PointSize[Medium]]}, 
           "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
               Identity[
                Part[#, 1]], 
               Identity[
                Part[#, 2]]}& ), 
             "ScalingFunctions" -> {{Identity, Identity}, {
               Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
           False|>, 
         "Meta" -> <|
          "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
           ListPlot, "GroupHighlight" -> False|>|>, 
        "DynamicHighlight"]], {{}, {}}}},
    AspectRatio->1,
    Axes->{False, False},
    AxesLabel->{
      FormBox[
       TagBox[
        StyleBox["\"p[1]\"", Bold, 14, StripOnInput -> False], HoldForm], 
       TraditionalForm], 
      FormBox[
       TagBox[
        StyleBox["\"p[4]\"", Bold, 14, StripOnInput -> False], HoldForm], 
       TraditionalForm]},
    AxesOrigin->{0, 0},
    DisplayFunction->Identity,
    Frame->{{True, True}, {True, True}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    ImagePadding->All,
    Method->{
     "DefaultGraphicsInteraction" -> {
       "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
        "Effects" -> {
         "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
          "Droplines" -> {
           "freeformCursorMode" -> True, 
            "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
      "ScalingFunctions" -> None, "TransparentPolygonMesh" -> True, 
      "AxesInFront" -> True},
    PlotLabel->FormBox[
      StyleBox["\"\[Theta] = 0.638136\"", Bold, 16, StripOnInput -> False], 
      TraditionalForm],
    PlotRange->{{-0.5, 0.5}, {-0.5, 0.5}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.02], 
       Scaled[0.02]}},
    Ticks->{Automatic, Automatic}], ",", 
   GraphicsBox[{{GraphicsComplexBox[CompressedData["
1:eJx1Vn9Q0+cZD62i1xrdFLVjCpValrZDhBGnFXnr0nMtFhe9rUe3XWhpsZux
umPaGufstDYqlVVs9JQiIz0EpZCg40eEkIcE+REKCAGaaU+GNfUq5c4dU9FW
za7f18/j3ddb/nnuk+/7PM/nfX69z7zsjWtyHtJoNIsjNJrv5ZwpHVdC+hrR
VRP/mC3YTGekZLz19T826m3tjHdKTM9IPcL/wGp5s+GRfOtYIWO3xAIY/oHh
Hxj+gRdOrzQFjT2MwQd+wEftF1gtwQcYfIDBBxh8gMEH+M+vjv/NbQ0wBj/4
AT91HNQ8gNUS/IDBDxj8gMEPGPyAwU9dB+q8qOOi5gGsluAHDH7A4Pf/9NQS
+sCfKf4rxJeKbKBBRXYyviK/E7BG+RW7gcEfuE2x2yugd0HaY73HFX4DAhjn
wQN6AWmPzwHjHDD4qr+r+wr8EH9g8MP/wOr6gn2cA8Y5tX/EN0rRLxXLlDx5
CDhBYtYDH2Dwj1XOn+HvwPj+E4k5T8Dqe6vzqO5/fF847dn5JoOfkiVPtod7
4TwwznsVPtUiV+kPn9gqJdvrld8JcbAqduppVuP3dvL4/2LFbh7Ha7Gsb66f
vLVfXHfYu1gPGHrwhziDP/fPPV7vSP8cV3Uf4Dx44Dx4A4OHOp9qiXrAOcQJ
+cQ5YJzHOUjo4x7c1/cw+hv30Ml48D3QL8DQw71QV8BqiTiDB+qfed3zj/vA
P74Dgzf44DvmgXo+wE/RIx++pHP2cV9BH/kDRv52yvoQyFdX/eE12q9aH4gH
6h9Y/V7i+1DTtvZw+KxAPYMf5gL4oX/wXuA+6XVZtUZTP9cNMNfvPX+4D/yh
vxA35Bdxw32QP/BFfsEX8Uc+gWEP8cJ3YOjDLiTiBAw9nEf/4f7AyOeAzAf3
q9ou7EBOvr2pwJrb8cCeNGlGx1JdYiPP8er1nt3WsSb2s2Aw6lI4q5nnSe9i
vd2s2832UC/IV8aS1dvdkaU8727MWfyQ017Lc/c/P/ug0mhycb5W7n/jYui6
i+uuPLAlydTi5XzdGcjKDepauD+yL0x0GYe84nxsdpyl6pQYrTj3nf9jL+24
3NGkT20TrUntM22JPgqMZz5qm91B/pTyvfbUWgoFxeWQ/pD4Q2bGpbBoFpEj
r6TrrvrEVCnpaOycnrDoErm7EqZZ8pto/rmRKEtGJ3Uuz3vLba0i89SYX2pz
3PTKm+OB8Lun6f2XZl9z2Kuo+uGC5uh0N7UMjpiDvWW0uapwrunhJlpypFEY
VveJPUMn/WFy0KqGlAnOHQPi/AfPfGwdy6XH0wz51kAnDbSP5ltzK0TZq2ku
o6eP63dXXdlo6KCP9k7rOGA9VS/g/0XpX5T5Xlwb1DTQISkF+JRIPmLNP5L+
Yl/fzfPkdMLsn+uCTaIy4I2ytfj4/pBtuSWLDJYyzhN4FJqnvx38gZfn5cRB
JR/0lH3gluO1Tj6P/vfNrFhuWNLM/aRJUfJN+yfFXPeba/kdRf5/K/NP4Mv7
kWKnl+cJ5sXeQyv227edpPZV6ze4I7sf2D8+3/bD4VDtCZ4fZlmPhPiiT0pb
/z3DZujn+YP9ylMwNcFk2MX20Qew75L2BfTxHforpL4Af9Q1+G+V/Ple49OV
/hOIj3pfKpH9yPlR758HZH4E8qF+HxpkPsTTgW+OGWMqRem3pmJrnJfrc52s
T4H6z5b1L55/Z+VUi7ZYPHv0brt+UzOt7R8aCJs7hGt+UZLJ6aWk0hUpuo1n
xYKFd2zW3DqasCW2L3okICZEt7XrbSWML/9IwQL92CD7UUA/Ruqzv2Tpj/s7
JPub+RdJ/gJ8qiUfrvMNh7VF1lwf73v7prycqT3m43m68/hrwXC4jusw+XLX
TEv3afJon4yyNHXyPEZ/jsn+pO4n725zt93fv9HPI3lKPwvoIy+YH5VyfohV
7+0cDm32052i+v321JNch3EXbaf0Njfb7f0qO0WXRWLnEVdndF6d2P5d8WRn
hI+Gm/0F1l+4eL5N2dz3hOWCVwytnDsUTmyhm7FWp9HRRmkf/T3CGVFH59c8
dz6c1UoF0g7Bv/ao4p8qXj85GDpIdK1mQ7LhnIvvnSz5UG995D576J+UNq1r
xG9opPgvqpcZLJ9QvaVkjzW3id+lYcmX5pc/NddkyCfPVadxrNBDK1b9ymE0
7abgu+9Fm1o8PH//JOcvHU8d3mJ3bxdtOfSYqYX4fcmU74vYUvt8Y3T6WfYz
69LvPNF53XRl+d48u9tGwFUS8766SeZXIB4LZTwE4oG4zhpfulK30Udpi4bj
TS3399k4WQ8C8QnJ+AjEY4GMh8B9HfK+Avdtl/flelwr65Hz+bbMp0A+m2Q+
RWF0aJ07ksTxN2ZMcl68v9/ukvUrkO/PZb4F3jvohzVV1/yftorSE48+Ycnw
8dxxyveUNAn7lukSK0RaZmSlebKX94bsN29cDdU2E96HGvk+EPhUSz4E+5XS
Pu/L6+R7TLeX6tO1xzrFmH71YHReM3ncfYfNX3/G+xX2gYlzlX2A8L4dlu8b
IR8ZMh+E9w0S72uOfF8F6rFc1qNwzfvyht9s470O9VUn64vndLzcZwTisUjG
Q4D/iOTP+/ZflXntFbgP7I8Npf1Gm1NDJ/J33HTMa6SUyJ9+aJ8TED1fO+86
7OUitTPnoPlf3WL06e3fOiIaxEjLrN9r3+8VDS/sueX/5hT9OCFmgi2xizbF
98dZ3vqE9UelPv0640yNsa5fJPb0pBpuHeDzL8vzAt//2618Z/ufSvvs/7b0
T+B7RPIV/wPQ51rv
       "], {{
         {RGBColor[0, 0, 1], AbsoluteThickness[2.], Opacity[0.3], EdgeForm[
          None], GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJxNl2dwl0UQxu+NhlCSUAIBAgQSkkBoEkQIigooBghN7CAWEEQiIKBIr4KC
IE2xjGV07H3UsTE69t57L2P9gKOOvYz6PLO/jHx4cvfu7e3t7T6790/ZtHmT
5uaklPbLUtpH47FCjdBfWC7MFuqEjcIFwkihryD11ExoKzQXWggXCpuE0UIR
617bIWwX6oVtQp7QStgqrBJWCOuERUKxUMp+294pFAodhI7MWwoljLbTRmjK
efsLBUJ7oQtrttUJ3dZCV2y3Ezoja8OYt5etIuQTOL9cqMKW9/Vg9DnT+O4t
HOR4Ck2ESnz1np7o+n4LhBnINghL8GuYMEiowI9Gv6Zy/+742Jr7jMTXjPzU
EfMK9EuI/TbiVUP+bHuLsJkcDyXntj2OHBaQz3ri3py4FRHng9HJY29T8jmA
2J4gHIfuTnJSwP5SYtGWe5dyn074XIj/HYhBF2LdmPuOxKAzexZhpx26PcnH
RPJXRgzL0/9cqiCe55ODA4T1Kbg4cK8cV3FmJXuWYL+Us6tYq2XeKwWnfTfX
xTRkVeS8N3YXpuDBEOEw4UBys1ZYQxyPJ86O4a4UvGrkaF9y35+8WnaRsFLo
J5yagk+DhUOw4RzMS8HRJtxnEHGoRLcCX2uRHS4M5/tc4tSV8+2zuTeC9V74
OBQ/l3K/ntgYjM3J+NQe2TDOnS+ctdd5w9GvIUY+0zysI7aThFFCDrEYyfoI
/K5lvQ6dI9Cxzxv5tnw5eu6B41PUQAFwLZiP7m9jhFxhbIq6yCU/49Edg/6+
KfreWOJciH5L1sehczQ6ucTI/DA3ZjLvIxyZgsfm8CXMHbczuH8O9o7Cpvk+
Bf0TmZv3rkXzyTyYy9m52JuMTeftmBSc8lkXY8/14vpx7ZjP08m1ZSdh/xTm
3RlPRj4FG+XIp6IzHVuuh0PZb/lprDXWiXXMR9eoa7Wa2MxExz3MnG9BPmcR
k1nEyHPnfzY6jvc88mJ+mW/mYINwZoraaUDffJhDvByrLaz1I9dzkJtr87Hn
XuQ6cY2Y+wvIrceF5PQc5kPQXZyirmag1we5bXVD92zki1mzfA067nuDiGN3
YnM68XG/WooPy5hXMy7DB991Ofd171qFzdXM81P0sxXIR6HvuG4l/vmMK4hz
V84uxYZtDUC2AR8WcYdixrXMLV/HHZeyp5r9a/DB6+vROY/vYuK4gfPXseZ+
7n7jN8n8dw/we+le8Y/wbwre/yncmaKHPWobWXDiKeEuzr9N+D1Fvbk+XCeu
nR+F+8mDe/WlKTg2ER3XQLXsvZWiP/ltdU/JJf6bidsY5KORmXP9iO1m5hM4
2/W4jfPy8HsX59borGdS9KdvhM5Z5K2bxl9T9IqHbSOLPl6osSCLd6O9xp9S
9Mku+vNRCm7cyLfnHwods+jLu4X3UtjZzt3t18/C1ynq0v77fcrnzN3ovyP0
zoLfdeTFNfub8C3x8P6N5G00sWvsqZuI4fXmRRY18rLwKdwYKNmL5P9V4fMU
XLpG+CxFn3xIaJtFzZRpLM+itks0dsqil3wpvE3u7hHeT8G1Wq2/kaL28jV/
nfl9zmcWffAB4YMUtVYsWVEWNbpH+C4FP1tK1jqL3ves8EkKPveV7PIUb7Zz
vpO8FzIvYPSaeeha20qcG+DPbPKyA26MZV5PrrYjX8le1/DjwsfY+Vu4IsX7
cJlwE/x5Qbi70X9y3gqbu/iux77X2+guD6bo8dcJX6R4RxzL14in83Y1uXPN
PZei7lplscf6Nws9sujdjt8r+PCD8H2KN/MrOGE+mFPmTw6+uwbsfzON96Z4
J82Fq+CDOXItPLkhRT1k5OR58uKaeCRFLfwh3J7iTc1xfWTx3mbelMX/Vc7h
X+TxjhS9xvVqTrkvmFe/CLekeNfzsuBoGXl4klw0kbxpFu/qrcITKXqC87CH
OPj8K1P40Efzd1O8Oeam+Wp+PpaCW/bHdV9F7T+done4b7wpVGb8Psuix7m/
vZSirlxT/wGnbCBy
             "]], PolygonBox[CompressedData["
1:eJwtlFdsz1EUx++tPUIVTYygtJQKNf+hqCDSiFF/WorYMYJWg0TipWmIN89i
hQixE3tE7b2DILzZI0GMIubn65yHT865vzvOufd8zy9jZlmyNCWEMAZqQvMY
QjrMwe8KV6EX45XYdHgE24BPoT+8gQ4MyrAjYSN8hLGQAXt8jebGw2aox/op
2PZQF79OtLWT4SR8hSTMhypow/wCbA04D7mMK7ANoS3+Lmw3WAiHoT7fpmKn
w3vYD5OgEDoydw87GGb42ad8r2I0YZwKXfBnwTlIMF7jMXTXM9i8YHe+6zEV
Kx/2wS8YAN3hiPKMNtcXmuIfx84N9sZ/4bfuBEXwwXMu9DfcpLjsWY5tB1n4
mdHO0h2uQE/GlbLBCrMe0wOKYR388bOV02vVhTWLsCNgi/JkvALbGb7DWtfC
ODgGjaO9xWx4B29hFIyGn7DX75rnc7t9r9a0YO8J18pQ2KCz+TYROwFq4adE
80sgB/9FMO0thWfwHIYEq0mDaBqSdqbBfXgKw3xNH+Zv+lutgkues3IdqH3M
n8aWBnuD1oy3B9NWATxUHL4twS6DO6ob49U6G255DJ3dG7Lxd2AXQzl8gkbR
tJXw3LSm3HNUrWO02uR6rAd+V8XsFO2MhJ+5E155bknP5bbXSjmpN695LurR
z/AFhpsU/mv/BgwK1gPqjUP+duqRg1A7Wu+pJ697TUp8j97qR7De1ZtVwzfX
jjSiXrwQTHsVrqWj2H7BNCUtPvHaS5PqpbPBelc9tRXSomkrB1pF+weo9+fB
S2gZzdedpPXLwf5Fla6li15baUq9csBrpZ55LC1Fq6VyahYtpmKpB/8BXsWG
sQ==
             "]]}]}, {}, {}, {}, {}}, 
        {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[2.], 
         LineBox[CompressedData["
1:eJwt0ulWDHAcx+GZLBVSUpaEppQlZElch0voAridlIoWyr4kVCgqJbSKFtEm
a9qFpMfRi+d8ft//zKs5E8o+ffJUMBAIFLHFUa1vKGWzPa0zfCDB3kaNe5Zy
xkj0dkG3a78+YIf7oe7US/qY4+46fcsTDtn1ep0mjthPdYBmjtrP9AZf+cZL
jnl/oe8o4KB9S3toI8tu1UHOk2Hf1V72u1/rPu3WdB3VEuLdm9jIfTtOizVW
72m0biAm+P/3GmaEV+z11qVD7HGX6W6d0vUaRRqddqruYtJdyTp3u57QDr3D
GneFrtVzGqm3dbVGEE6h/Z58JvjOODd5TqbvtOgqDWMFZ+2V2qCHtVG/8JnL
zJPDRZJ8Pqc/+EjITuaR+ydX+ESKt1o9oGf0N1f5xTUWyGWRv/wh+O9PR570
sdVdtfwfXALhAFuQ
          "]]}}], {}}, {{}, 
      InterpretationBox[{
        TagBox[
         TagBox[
          {RGBColor[1, 0, 0], PointSize[Medium], AbsoluteThickness[2], 
           PointBox[{{0.20273017010969008`, -0.13541818830630567`}, {
            0.13630502525008253`, -0.15066174518176742`}, {
            0.20273017010969008`, 0.13541818830630567`}, {
            0.13630502525008253`, 
            0.15066174518176742`}, {-0.24463211264929655`, 
            0.}, {-0.187761274920686, 0.08380254865595828}, {
            0.32471160712296326`, 
            0.}, {-0.187761274920686, -0.08380254865595828}}]},
          Annotation[#, "Charting`Private`Tag#1"]& ],
         {
         "WolframDynamicHighlight", <|
          "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>}], 
        StyleBox[
         DynamicBox[(Charting`HighlightActionBox["DynamicHighlight", {}, 
           Slot["HighlightElements"], 
           Slot["LayoutOptions"], 
           Slot["Meta"], 
           Charting`HighlightActionFunction["DynamicHighlight", {{
              Annotation[{
                Directive[
                 AbsoluteThickness[2], 
                 RGBColor[1, 0, 0], 
                 PointSize[Medium]], 
                
                Point[{{0.20273017010969008`, -0.13541818830630567`}, {
                 0.13630502525008253`, -0.15066174518176742`}, {
                 0.20273017010969008`, 0.13541818830630567`}, {
                 0.13630502525008253`, 
                 0.15066174518176742`}, {-0.24463211264929655`, 
                 0.}, {-0.187761274920686, 0.08380254865595828}, {
                 0.32471160712296326`, 
                 0.}, {-0.187761274920686, -0.08380254865595828}}]}, 
               "Charting`Private`Tag#1"]}}, <|
            "HighlightElements" -> <|
              "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>, 
             "LayoutOptions" -> <|
              "PanelPlotLayout" -> <||>, 
               "PlotRange" -> {{-0.24463211264929655`, 
                0.32471160712296326`}, {-0.15066174518176742`, 
                0.15066174518176742`}}, 
               "Frame" -> {{False, False}, {False, False}}, 
               "AxesOrigin" -> {0, 0}, "ImageSize" -> {360, 360/GoldenRatio}, 
               "Axes" -> {True, True}, "LabelStyle" -> {}, "AspectRatio" -> 
               GoldenRatio^(-1), "DefaultStyle" -> {
                 Directive[
                  AbsoluteThickness[2], 
                  RGBColor[1, 0, 0], 
                  PointSize[Medium]]}, 
               "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
                   Identity[
                    Part[#, 1]], 
                   Identity[
                    Part[#, 2]]}& ), 
                 "ScalingFunctions" -> {{Identity, Identity}, {
                   Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
               False|>, 
             "Meta" -> <|
              "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, 
               "Function" -> ListPlot, "GroupHighlight" -> False|>|>]]& )[<|
           "HighlightElements" -> <|
             "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>, 
            "LayoutOptions" -> <|
             "PanelPlotLayout" -> <||>, 
              "PlotRange" -> {{-0.24463211264929655`, 
               0.32471160712296326`}, {-0.15066174518176742`, 
               0.15066174518176742`}}, 
              "Frame" -> {{False, False}, {False, False}}, 
              "AxesOrigin" -> {0, 0}, "ImageSize" -> {360, 360/GoldenRatio}, 
              "Axes" -> {True, True}, "LabelStyle" -> {}, "AspectRatio" -> 
              GoldenRatio^(-1), "DefaultStyle" -> {
                Directive[
                 AbsoluteThickness[2], 
                 RGBColor[1, 0, 0], 
                 PointSize[Medium]]}, 
              "HighlightLabelingFunctions" -> <|
               "CoordinatesToolOptions" -> ({
                  Identity[
                   Part[#, 1]], 
                  Identity[
                   Part[#, 2]]}& ), 
                "ScalingFunctions" -> {{Identity, Identity}, {
                  Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
              False|>, 
            "Meta" -> <|
             "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, 
              "Function" -> ListPlot, "GroupHighlight" -> False|>|>],
          
          ImageSizeCache->{{4.503599627370496*^15, -4.503599627370496*^15}, {
           4.503599627370496*^15, -4.503599627370496*^15}}],
         Selectable->False]},
       Annotation[{{
          Annotation[{
            Directive[
             AbsoluteThickness[2], 
             RGBColor[1, 0, 0], 
             PointSize[Medium]], 
            
            Point[{{0.20273017010969008`, -0.13541818830630567`}, {
             0.13630502525008253`, -0.15066174518176742`}, {
             0.20273017010969008`, 0.13541818830630567`}, {
             0.13630502525008253`, 
             0.15066174518176742`}, {-0.24463211264929655`, 
             0.}, {-0.187761274920686, 0.08380254865595828}, {
             0.32471160712296326`, 
             0.}, {-0.187761274920686, -0.08380254865595828}}]}, 
           "Charting`Private`Tag#1"]}}, <|
        "HighlightElements" -> <|
          "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>, 
         "LayoutOptions" -> <|
          "PanelPlotLayout" -> <||>, 
           "PlotRange" -> {{-0.24463211264929655`, 
            0.32471160712296326`}, {-0.15066174518176742`, 
            0.15066174518176742`}}, 
           "Frame" -> {{False, False}, {False, False}}, 
           "AxesOrigin" -> {0, 0}, "ImageSize" -> {360, 360/GoldenRatio}, 
           "Axes" -> {True, True}, "LabelStyle" -> {}, "AspectRatio" -> 
           GoldenRatio^(-1), "DefaultStyle" -> {
             Directive[
              AbsoluteThickness[2], 
              RGBColor[1, 0, 0], 
              PointSize[Medium]]}, 
           "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
               Identity[
                Part[#, 1]], 
               Identity[
                Part[#, 2]]}& ), 
             "ScalingFunctions" -> {{Identity, Identity}, {
               Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
           False|>, 
         "Meta" -> <|
          "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
           ListPlot, "GroupHighlight" -> False|>|>, 
        "DynamicHighlight"]], {{}, {}}}},
    AspectRatio->1,
    Axes->{False, False},
    AxesLabel->{
      FormBox[
       TagBox[
        StyleBox["\"p[1]\"", Bold, 14, StripOnInput -> False], HoldForm], 
       TraditionalForm], 
      FormBox[
       TagBox[
        StyleBox["\"p[4]\"", Bold, 14, StripOnInput -> False], HoldForm], 
       TraditionalForm]},
    AxesOrigin->{0, 0},
    DisplayFunction->Identity,
    Frame->{{True, True}, {True, True}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    ImagePadding->All,
    Method->{
     "DefaultGraphicsInteraction" -> {
       "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
        "Effects" -> {
         "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
          "Droplines" -> {
           "freeformCursorMode" -> True, 
            "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
      "ScalingFunctions" -> None, "TransparentPolygonMesh" -> True, 
      "AxesInFront" -> True},
    PlotLabel->FormBox[
      StyleBox["\"\[Theta] = 0.687223\"", Bold, 16, StripOnInput -> False], 
      TraditionalForm],
    PlotRange->{{-0.5, 0.5}, {-0.5, 0.5}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.02], 
       Scaled[0.02]}},
    Ticks->{Automatic, Automatic}], ",", 
   GraphicsBox[{{GraphicsComplexBox[CompressedData["
1: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
4hsvfOl/2quaJg==
       "], {{
         {RGBColor[0, 0, 1], AbsoluteThickness[2.], Opacity[0.3], EdgeForm[
          None], GraphicsGroupBox[{PolygonBox[CompressedData["
1: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
HywZ
             "]], PolygonBox[CompressedData["
1:eJwtlPtrz1EYx8+Ze+bSyMilvkyzjbZhbHO/tTCyNebamAixL6LVJKX2g/aD
P0Du10RuUfziGnO/ZyKXKEJySbnn9fY8P7x6nud8zjnPOZ/n/ZxEdbK8JiWE
UAbNoX0M4Sx2PlTBdmjN2BzsGNgPb2AKJGAfFPJ9g8cJ/EvYkTAZrkAmY8ux
zaBDtD0SniOHuAk7AaphD6QyNg87Dq7CX5gJNbAFnsNEP+9Q5u7FpsN6OAI7
YSxMh6O+p/aqhHbM/6Z1wXJoblvG5vqanvi9YAl+f+iEnwur8RdCwD+JyYNR
0IJ4G3YgzIZTmsLYaJ/zCfoRJ7EVkI2fBUV+5x743SEnWM57fifdpVB3xE+B
fPxZsFX/MZqvHAegiHgjNguewiE75v8anIZignrd3c9y3c+e9Nrd91yqYVfi
dMjGXwSf4Yv/y8FwEbpE+7YY2uC3gkHBNHJTeYk3Bxv7DX+gHKSzXTCE7+u8
ZvLvYguCjb1yzUlrpfACnsBamASP4BwsgPGqEeu/646wEvoSH3atKed7+AAl
we70GN7BVB874TWqcI39gM7Raj3Cc+cRr/EzKFdaNK0W+14DiFf5ng9hOHGD
a+ya/gNxLTZXOlEto2lLezbCa7/rCp8rjUvbWqPat4ymrXzPdczvqpzPgvWI
ekM9IS3vxs4IpumvwXqg0scK+L7DtVAHd3yszmsgLV3wu0tT6t1GP5t6+BYM
Y2wTNhV+wi+YFkxzqo3ekCqvUUY0Daj2y3ztbdeS9pA2z/i/qfd/9yCYlhtc
Szc8lzTVh/iy77U0WO+9DPbWqAfVq8ddK+rZg9AtmlbVYx+hd7S1OvPbYG+Y
3iO9aeehYzRtqUf/Acauhb4=
             "]]}]}, {}, {}, {}, {}}, 
        {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[2.], 
         LineBox[CompressedData["
1:eJwt0uk21WEYxuF/lCFCaaAkmiUlKkPiHDqEDiAH1DxRxkKDJhUaiFCJSlIq
JYQU0nBZy4dr/Z773fvb3qmHiw8dWRQEQQkpjmZ9QwUb7Fn9zSgb7U08cG/W
Of3DGFvsSt2q7/Uh29yPdJAPnCTCWyThXLPbKHQ/0Y+0c8B+qtcZZ4JqThPl
s7N6UH/oJJc4R7S3ZUy5f/KCAvu5fuECefZ9XaUzulLj2U2N/Y7XZNpZ7GHE
Lme9O5m1JLGOMu+J2qirNYE1XLSH+cYrdnnr1a9kuC/rTp3WFbqcdHrsHZrG
L/c94tzdWqQv9S4x7gaN1VL9zB2GFn7LXO/P9DZd5Njn9RNn2G936i2Wum9q
B/vcp7SKevLtG1pHC9n2Ue2nj7c85i+1fGe777TqXj2mgV6Rf1ydn/ZxDdXF
hBDGEk54HyDV3bTwn/wPvwtbfA==
          "]]}}], {}}, {{}, 
      InterpretationBox[{
        TagBox[
         TagBox[
          {RGBColor[1, 0, 0], PointSize[Medium], AbsoluteThickness[2], 
           PointBox[{{0.20827961037936354`, -0.11744815376381562`}, {
            0.06911030308364147, -0.14745807288769286`}, {
            0.20827961037936354`, 0.11744815376381562`}, {0.06911030308364147,
             0.14745807288769286`}, {-0.27062447686165797`, 
            0.}, {-0.2000885167457542, 0.09259655138646705}, {
            0.3111409101013909, 
            0.}, {-0.2000885167457542, -0.09259655138646705}}]},
          Annotation[#, "Charting`Private`Tag#1"]& ],
         {
         "WolframDynamicHighlight", <|
          "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>}], 
        StyleBox[
         DynamicBox[(Charting`HighlightActionBox["DynamicHighlight", {}, 
           Slot["HighlightElements"], 
           Slot["LayoutOptions"], 
           Slot["Meta"], 
           Charting`HighlightActionFunction["DynamicHighlight", {{
              Annotation[{
                Directive[
                 AbsoluteThickness[2], 
                 RGBColor[1, 0, 0], 
                 PointSize[Medium]], 
                
                Point[{{0.20827961037936354`, -0.11744815376381562`}, {
                 0.06911030308364147, -0.14745807288769286`}, {
                 0.20827961037936354`, 0.11744815376381562`}, {
                 0.06911030308364147, 
                 0.14745807288769286`}, {-0.27062447686165797`, 
                 0.}, {-0.2000885167457542, 0.09259655138646705}, {
                 0.3111409101013909, 
                 0.}, {-0.2000885167457542, -0.09259655138646705}}]}, 
               "Charting`Private`Tag#1"]}}, <|
            "HighlightElements" -> <|
              "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>, 
             "LayoutOptions" -> <|
              "PanelPlotLayout" -> <||>, 
               "PlotRange" -> {{-0.27062447686165797`, 
                0.3111409101013909}, {-0.14745807288769286`, 
                0.14745807288769286`}}, 
               "Frame" -> {{False, False}, {False, False}}, 
               "AxesOrigin" -> {0, 0}, "ImageSize" -> {360, 360/GoldenRatio}, 
               "Axes" -> {True, True}, "LabelStyle" -> {}, "AspectRatio" -> 
               GoldenRatio^(-1), "DefaultStyle" -> {
                 Directive[
                  AbsoluteThickness[2], 
                  RGBColor[1, 0, 0], 
                  PointSize[Medium]]}, 
               "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
                   Identity[
                    Part[#, 1]], 
                   Identity[
                    Part[#, 2]]}& ), 
                 "ScalingFunctions" -> {{Identity, Identity}, {
                   Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
               False|>, 
             "Meta" -> <|
              "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, 
               "Function" -> ListPlot, "GroupHighlight" -> False|>|>]]& )[<|
           "HighlightElements" -> <|
             "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>, 
            "LayoutOptions" -> <|
             "PanelPlotLayout" -> <||>, 
              "PlotRange" -> {{-0.27062447686165797`, 
               0.3111409101013909}, {-0.14745807288769286`, 
               0.14745807288769286`}}, 
              "Frame" -> {{False, False}, {False, False}}, 
              "AxesOrigin" -> {0, 0}, "ImageSize" -> {360, 360/GoldenRatio}, 
              "Axes" -> {True, True}, "LabelStyle" -> {}, "AspectRatio" -> 
              GoldenRatio^(-1), "DefaultStyle" -> {
                Directive[
                 AbsoluteThickness[2], 
                 RGBColor[1, 0, 0], 
                 PointSize[Medium]]}, 
              "HighlightLabelingFunctions" -> <|
               "CoordinatesToolOptions" -> ({
                  Identity[
                   Part[#, 1]], 
                  Identity[
                   Part[#, 2]]}& ), 
                "ScalingFunctions" -> {{Identity, Identity}, {
                  Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
              False|>, 
            "Meta" -> <|
             "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, 
              "Function" -> ListPlot, "GroupHighlight" -> False|>|>],
          
          ImageSizeCache->{{4.503599627370496*^15, -4.503599627370496*^15}, {
           4.503599627370496*^15, -4.503599627370496*^15}}],
         Selectable->False]},
       Annotation[{{
          Annotation[{
            Directive[
             AbsoluteThickness[2], 
             RGBColor[1, 0, 0], 
             PointSize[Medium]], 
            
            Point[{{0.20827961037936354`, -0.11744815376381562`}, {
             0.06911030308364147, -0.14745807288769286`}, {
             0.20827961037936354`, 0.11744815376381562`}, {
             0.06911030308364147, 
             0.14745807288769286`}, {-0.27062447686165797`, 
             0.}, {-0.2000885167457542, 0.09259655138646705}, {
             0.3111409101013909, 
             0.}, {-0.2000885167457542, -0.09259655138646705}}]}, 
           "Charting`Private`Tag#1"]}}, <|
        "HighlightElements" -> <|
          "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>, 
         "LayoutOptions" -> <|
          "PanelPlotLayout" -> <||>, 
           "PlotRange" -> {{-0.27062447686165797`, 
            0.3111409101013909}, {-0.14745807288769286`, 
            0.14745807288769286`}}, 
           "Frame" -> {{False, False}, {False, False}}, 
           "AxesOrigin" -> {0, 0}, "ImageSize" -> {360, 360/GoldenRatio}, 
           "Axes" -> {True, True}, "LabelStyle" -> {}, "AspectRatio" -> 
           GoldenRatio^(-1), "DefaultStyle" -> {
             Directive[
              AbsoluteThickness[2], 
              RGBColor[1, 0, 0], 
              PointSize[Medium]]}, 
           "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
               Identity[
                Part[#, 1]], 
               Identity[
                Part[#, 2]]}& ), 
             "ScalingFunctions" -> {{Identity, Identity}, {
               Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
           False|>, 
         "Meta" -> <|
          "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
           ListPlot, "GroupHighlight" -> False|>|>, 
        "DynamicHighlight"]], {{}, {}}}},
    AspectRatio->1,
    Axes->{False, False},
    AxesLabel->{
      FormBox[
       TagBox[
        StyleBox["\"p[1]\"", Bold, 14, StripOnInput -> False], HoldForm], 
       TraditionalForm], 
      FormBox[
       TagBox[
        StyleBox["\"p[4]\"", Bold, 14, StripOnInput -> False], HoldForm], 
       TraditionalForm]},
    AxesOrigin->{0, 0},
    DisplayFunction->Identity,
    Frame->{{True, True}, {True, True}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    ImagePadding->All,
    Method->{
     "DefaultGraphicsInteraction" -> {
       "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
        "Effects" -> {
         "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
          "Droplines" -> {
           "freeformCursorMode" -> True, 
            "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
      "ScalingFunctions" -> None, "TransparentPolygonMesh" -> True, 
      "AxesInFront" -> True},
    PlotLabel->FormBox[
      StyleBox["\"\[Theta] = 0.736311\"", Bold, 16, StripOnInput -> False], 
      TraditionalForm],
    PlotRange->{{-0.5, 0.5}, {-0.5, 0.5}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.02], 
       Scaled[0.02]}},
    Ticks->{Automatic, Automatic}], ",", 
   GraphicsBox[{{GraphicsComplexBox[CompressedData["
1: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
M0albKgzix7alxkOBqx++In/rMZr/gVdspu+
       "], {{
         {RGBColor[0, 0, 1], AbsoluteThickness[2.], Opacity[0.3], EdgeForm[
          None], GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJxNlldsl2UYxZ8/HUILLV20lLLKqsgUKBRBZalokSEgyhQUFJWlOBCLmri3
JsYVbzTuvfe60Cu3iTOOuPXCFfc8J8+voRcn3/t9fd9nnHOet//Bazcv2tQt
IkoKEUV6niCMEUYLK4TZwkhhkzBHGCvsEjqEDcKoyHM9hQqh2LGEXnz3e1/+
VinsKShVlPJewro3zz2E1cJcYbxQLXQXeggThHKhTqgnp/M08HSOfYXpwnCh
ing+34ezPlNDvDKhkTqcf7LQKgwQtgnHCROFSZwfyN98vlYYxHfX0kwd7nUw
3/zej9iupT/9+PwQ9jr/UJ7eu1CYQmz30MS5RUIbsbdzvkVYLOxDjCbyOMcw
4vnbVOobISwX9kOHpcI09p5MrGloOxLuZqN5d/QuRT97YRw8FsG/ud070hPl
XbQxF2PIab2L0aoX75W894CbanJXwd14vpcR15zXka+e91mRni2O3X5y3K3C
5kjvzBD2ot4K+G+Ao+HwUIPG5nwi61pq6s/edcK8SF/Uo8kg6vBzILkbyVHF
uX7ka+ZMX3T0eys19GffMDQ9KdITbeg+gv3WvIXzvTnTGLv95O/rI30zFf2q
qaUELczTTOFwOFnJe6d+o+C4CN6KwWhiOOZYdBuNxiVw1kov1nFk7J7hceh4
ILp6fQj6WNNlkR5y/oPRoBZuJ7HnUNbm+QhhPvlqiOn9G4V2zm8RDiLH2sg5
H0BPs+ipGZ6sy2GsR/Dehq5D4X0I/HmOCug2Hc2OFJaw75jI+2g4HM+Ay8fN
TSE9ZG5md+FyTheeDoCfVfBVhiYzieOapsDDBHosh4O58LA/OXzHr4HTWnhp
hwfHWEAc97qQ2K1w6/p3CKdH+ukM+lwMT4vgybqtpMaj0ckxp7G3kz/z00K9
y6jZ/C2Fw8no6vz21HL4di8r6Mf6mz/74UxhJ+cXU5vzHBXprTq4XAWH5vtE
+HaN64i3gLoHws1a+JmPlubh2Mh70LrbJ+vhwPqshvt55HbeUvZ7DnZx3lr4
TtqCbvbg8ZEz5Hq38t0+88zbm6ewbkHbNejo/1Eb0dPabmO9nTOdd/6pkX71
fXIaGteqicfotU7rp+n1L+E3zn8l3Bjpx1eF5+m7j/a/gJb28hP0/b5wfeRs
Ver7fXBfrfVD1F6l9QWRfrF37Ks2tLdX7JNu2vN2pDfvFF6kftf1B7XdItQX
0i+uq3sha/tX+I+e/xbeRa/fhSvgpLiQv3nMxQA9n0X/gtYvodHVvHv9RmQQ
69eBlt3QcxcavyPcFunlXtp7VqRnvxeeIb5rfA4OK7Q+O/JeuFL4E33vEG6P
vDs+FM7BI98I58FnP519MtK/vbU+P9KDjVo/EumjGq0vwhf3CA2FvDuugpcC
/N0cyaHnZycabKDPzvu7g379O8Hz7zmz93eg4T/oZI3egy9z01fxH4ycdXP/
Cvy7lnsj63lZuAuurPmt6H55pM+WwJ91ModP0b97twdfj9zTpG9vRc6En2+y
vi7Sl/ak+f4Azj8SPo6cvWuE0kJ68VqhrJBcPEAPrv8XNLa+nwqfRP5e/lL4
IvI38g2RM+N5OVf4OvJOt56/oulnwueRd9B3wsWR98G3vHv9s/ATfP8o/BA5
uzdFzo9n5zV8Y89cFjnDnt/78YT90FPP8kLekXdHes69P4pX7JOH8Yp9cmHk
rHpO7TXPsP12Cfyaz0sj7452dLPXrd3/vE/d8Q==
             "]], PolygonBox[CompressedData["
1:eJwt0+dLlWEYx/HrnKxo/BO9SogselNC2t5DK7I9PJmklSOlHUgZtoNs7x1B
w7aZGGTLNkJRtGxi0V40qPxe3L8XH+6H8zznHtf1u1vFcofmRM1sAOJQgeuY
hMFoFjHbwDga81CEqxiLrjiKbRiP3liCGoxDB+zBOoxCR3xDS+ZcwJiGO7iN
eAxHCa5hAvpYWHu13vkejqAaI9Adx3ERI9EX7/EWucjHZVzRXqPayyqkaE9+
1nIM0pl97aXopz00Z6/3GDtjvs5ejJ6qwUI8wVT0wCssRi/kYCveqDbt8Q7H
tNc8fFGNvbaFqt1hnc1r2Ih3UXTieQj24SCSMRmX8A+zMAZrsRIDkY0LWAOm
sC54iedoh+lYpDn8vwn4ge9I0hp+1hf61s98QD1M0ze7sFe9jeEEdmCiangf
DzBFe/DeHUI39bBWe/a9ZuEhNqGNvtmMR6qt/9aUSdYzzsFc3NBv/pypLGy3
kD3PxE6ctpDvdOzGOQvZzkDjSKix13Y2zuhMMdWwCe/uMiZqzV/4idaYicd4
hmloi0+Ii4S5CtCC540WsuOZ/4+/6oX3rE49SNAc3pvXFrLjPfK1P2uuRNX2
JPqrxp7Nrxay4xldhg+YoW/8bpZZuEt+R/fjI1ItZGq5hUx6Fv3O1GOLhax6
hk9ZuFP5quFv/NHZ47XWCvXO16xSjTO0xlPVyGvjd6TSQoY9u34Hb+IWhqmm
HpJSC3fVM3NePc7UN2fVU++l39kGOLGYlw==
             "]]}]}, {}, {}, {}, {}}, 
        {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[2.], 
         LineBox[CompressedData["
1:eJwt0ulWTmEAhuEdJZWhDEWDtTolh9AB5BSQMWOTonkgVKgUMqQyVOYGFBpF
FEkaFOqy+HGt+33eb+9f+0tO2bUzNSQIghJ+c5FWMvnFa/p4QeDBrL/RB/qQ
Ktbbu7WdfYzynhE+MMZ+xsnnIwV84gAbvX9ZC7lCtH1QOznMJrtei7nKZjtd
v3KURLtbu8jmGFvcXdNSKoizyzWH42y1b+lZLnCeOWZ5RSU/WOe5KPKcI/Wl
zvCdCDtXTxDr3KLPeUYGiywxz08WOMkTnnKXtd5r1seEO5/SNdqr03wj1A5j
NavocXeOKW6zw90dLeMmCXaTPuI6SfaN/9+4kXi7Qb/wmQmOMEkt2/1ep/co
IsY+pB3UsM2+pG1Us8Heo284TT9neMteBhjkHcMMkcZ9/rAc/PvvrQByCmUB

          "]]}}], {}}, {{}, 
      InterpretationBox[{
        TagBox[
         TagBox[
          {RGBColor[1, 0, 0], PointSize[Medium], AbsoluteThickness[2], 
           PointBox[{{0.20710678118654752`, -0.10355339059327376`}, {
            0., -0.14644660940672624`}, {0.20710678118654752`, 
            0.10355339059327376`}, {0., 
            0.14644660940672624`}, {-0.2928932188134525, 
            0.}, {-0.20710678118654752`, 0.10355339059327376`}, {
            0.2928932188134525, 
            0.}, {-0.20710678118654752`, -0.10355339059327376`}}]},
          Annotation[#, "Charting`Private`Tag#1"]& ],
         {
         "WolframDynamicHighlight", <|
          "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>}], 
        StyleBox[
         DynamicBox[(Charting`HighlightActionBox["DynamicHighlight", {}, 
           Slot["HighlightElements"], 
           Slot["LayoutOptions"], 
           Slot["Meta"], 
           Charting`HighlightActionFunction["DynamicHighlight", {{
              Annotation[{
                Directive[
                 AbsoluteThickness[2], 
                 RGBColor[1, 0, 0], 
                 PointSize[Medium]], 
                
                Point[{{0.20710678118654752`, -0.10355339059327376`}, {
                 0., -0.14644660940672624`}, {0.20710678118654752`, 
                 0.10355339059327376`}, {0., 
                 0.14644660940672624`}, {-0.2928932188134525, 
                 0.}, {-0.20710678118654752`, 0.10355339059327376`}, {
                 0.2928932188134525, 
                 0.}, {-0.20710678118654752`, -0.10355339059327376`}}]}, 
               "Charting`Private`Tag#1"]}}, <|
            "HighlightElements" -> <|
              "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>, 
             "LayoutOptions" -> <|
              "PanelPlotLayout" -> <||>, 
               "PlotRange" -> {{-0.2928932188134525, 
                0.2928932188134525}, {-0.14644660940672624`, 
                0.14644660940672624`}}, 
               "Frame" -> {{False, False}, {False, False}}, 
               "AxesOrigin" -> {0, 0}, "ImageSize" -> {360, 360/GoldenRatio}, 
               "Axes" -> {True, True}, "LabelStyle" -> {}, "AspectRatio" -> 
               GoldenRatio^(-1), "DefaultStyle" -> {
                 Directive[
                  AbsoluteThickness[2], 
                  RGBColor[1, 0, 0], 
                  PointSize[Medium]]}, 
               "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
                   Identity[
                    Part[#, 1]], 
                   Identity[
                    Part[#, 2]]}& ), 
                 "ScalingFunctions" -> {{Identity, Identity}, {
                   Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
               False|>, 
             "Meta" -> <|
              "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, 
               "Function" -> ListPlot, "GroupHighlight" -> False|>|>]]& )[<|
           "HighlightElements" -> <|
             "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>, 
            "LayoutOptions" -> <|
             "PanelPlotLayout" -> <||>, 
              "PlotRange" -> {{-0.2928932188134525, 
               0.2928932188134525}, {-0.14644660940672624`, 
               0.14644660940672624`}}, 
              "Frame" -> {{False, False}, {False, False}}, 
              "AxesOrigin" -> {0, 0}, "ImageSize" -> {360, 360/GoldenRatio}, 
              "Axes" -> {True, True}, "LabelStyle" -> {}, "AspectRatio" -> 
              GoldenRatio^(-1), "DefaultStyle" -> {
                Directive[
                 AbsoluteThickness[2], 
                 RGBColor[1, 0, 0], 
                 PointSize[Medium]]}, 
              "HighlightLabelingFunctions" -> <|
               "CoordinatesToolOptions" -> ({
                  Identity[
                   Part[#, 1]], 
                  Identity[
                   Part[#, 2]]}& ), 
                "ScalingFunctions" -> {{Identity, Identity}, {
                  Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
              False|>, 
            "Meta" -> <|
             "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, 
              "Function" -> ListPlot, "GroupHighlight" -> False|>|>],
          
          ImageSizeCache->{{4.503599627370496*^15, -4.503599627370496*^15}, {
           4.503599627370496*^15, -4.503599627370496*^15}}],
         Selectable->False]},
       Annotation[{{
          Annotation[{
            Directive[
             AbsoluteThickness[2], 
             RGBColor[1, 0, 0], 
             PointSize[Medium]], 
            
            Point[{{0.20710678118654752`, -0.10355339059327376`}, {
             0., -0.14644660940672624`}, {0.20710678118654752`, 
             0.10355339059327376`}, {0., 
             0.14644660940672624`}, {-0.2928932188134525, 
             0.}, {-0.20710678118654752`, 0.10355339059327376`}, {
             0.2928932188134525, 
             0.}, {-0.20710678118654752`, -0.10355339059327376`}}]}, 
           "Charting`Private`Tag#1"]}}, <|
        "HighlightElements" -> <|
          "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>, 
         "LayoutOptions" -> <|
          "PanelPlotLayout" -> <||>, 
           "PlotRange" -> {{-0.2928932188134525, 
            0.2928932188134525}, {-0.14644660940672624`, 
            0.14644660940672624`}}, 
           "Frame" -> {{False, False}, {False, False}}, 
           "AxesOrigin" -> {0, 0}, "ImageSize" -> {360, 360/GoldenRatio}, 
           "Axes" -> {True, True}, "LabelStyle" -> {}, "AspectRatio" -> 
           GoldenRatio^(-1), "DefaultStyle" -> {
             Directive[
              AbsoluteThickness[2], 
              RGBColor[1, 0, 0], 
              PointSize[Medium]]}, 
           "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
               Identity[
                Part[#, 1]], 
               Identity[
                Part[#, 2]]}& ), 
             "ScalingFunctions" -> {{Identity, Identity}, {
               Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
           False|>, 
         "Meta" -> <|
          "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
           ListPlot, "GroupHighlight" -> False|>|>, 
        "DynamicHighlight"]], {{}, {}}}},
    AspectRatio->1,
    Axes->{False, False},
    AxesLabel->{
      FormBox[
       TagBox[
        StyleBox["\"p[1]\"", Bold, 14, StripOnInput -> False], HoldForm], 
       TraditionalForm], 
      FormBox[
       TagBox[
        StyleBox["\"p[4]\"", Bold, 14, StripOnInput -> False], HoldForm], 
       TraditionalForm]},
    AxesOrigin->{0, 0},
    DisplayFunction->Identity,
    Frame->{{True, True}, {True, True}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    ImagePadding->All,
    Method->{
     "DefaultGraphicsInteraction" -> {
       "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
        "Effects" -> {
         "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
          "Droplines" -> {
           "freeformCursorMode" -> True, 
            "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
      "ScalingFunctions" -> None, "TransparentPolygonMesh" -> True, 
      "AxesInFront" -> True},
    PlotLabel->FormBox[
      StyleBox["\"\[Theta] = 0.785398\"", Bold, 16, StripOnInput -> False], 
      TraditionalForm],
    PlotRange->{{-0.5, 0.5}, {-0.5, 0.5}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.02], 
       Scaled[0.02]}},
    Ticks->{Automatic, Automatic}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.953707366154344*^9, {3.953707646687662*^9, 3.9537076699745207`*^9}, 
   3.953960772722478*^9, 3.954297883649781*^9, 3.954302998094544*^9, 
   3.954920000341287*^9, 3.954921241210914*^9},
 CellLabel->"Out[87]=",ExpressionUUID->"99d05673-8a5e-4a22-a00d-d040ca9ceb85"]
}, Open  ]],

Cell["We can visualize the evolutions of these eight vertices:", "Text",
 CellChangeTimes->{{3.953867543086278*^9, 
  3.95386758517269*^9}},ExpressionUUID->"3cd6f948-e4b1-4bd7-b4ad-\
75929a91b8df"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"v", "/.", " ", 
      RowBox[{"\[Theta]", "->", "th"}]}], ",", 
     RowBox[{"PlotStyle", "->", 
      RowBox[{"{", 
       RowBox[{"Red", ",", 
        RowBox[{"PointSize", "[", "Large", "]"}]}], "}"}]}], ",", 
     RowBox[{"PlotRange", "->", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "0.5"}], ",", "0.5"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "0.5"}], ",", "0.5"}], "}"}]}], "}"}]}], ",", 
     RowBox[{"AxesLabel", "->", 
      RowBox[{"{", 
       RowBox[{"\"\<p[1]\>\"", ",", "\"\<p[4]\>\""}], "}"}]}], ",", 
     RowBox[{"PlotLabel", "->", 
      RowBox[{"Style", "[", 
       RowBox[{
        RowBox[{"\"\<Vertices for \[Theta] = \>\"", "<>", 
         RowBox[{"ToString", "[", 
          RowBox[{"N", "[", 
           RowBox[{"th", ",", "2"}], "]"}], "]"}]}], ",", "Bold", ",", "14"}],
        "]"}]}], ",", 
     RowBox[{"AspectRatio", "->", "1"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"th", ",", 
       RowBox[{"\[Pi]", "/", "8"}], ",", "\"\<\[Theta]\>\""}], "}"}], ",", 
     RowBox[{
      FractionBox["\[Pi]", "8"], "+", 
      FractionBox["\[Pi]", "64"]}], ",", 
     FractionBox["\[Pi]", "4"]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.953708605098193*^9, 3.9537086230474243`*^9}, {
  3.95380324125705*^9, 3.95380324860359*^9}, {3.9543030276692333`*^9, 
  3.954303041701424*^9}},
 CellLabel->"In[88]:=",ExpressionUUID->"280b5574-da30-4211-b259-001c71682cba"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`th$$ = 0.5957245069369645, Typeset`show$$ = 
    True, Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`th$$], Rational[1, 8] Pi, "\[Theta]"}, 
      Rational[9, 64] Pi, Rational[1, 4] Pi, ControlType -> Manipulator}}, 
    Typeset`size$$ = {608.5, {60.1572265625, 15.98989486694336}}, 
    Typeset`update$$ = 0, Typeset`initDone$$, Typeset`skipInitDone$$ = True}, 
    
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`th$$ = Rational[1, 8] Pi}, 
      "ControllerVariables" :> {}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> ListPlot[
        ReplaceAll[$CellContext`v, $CellContext`\[Theta] -> \
$CellContext`th$$], PlotStyle -> {Red, 
          PointSize[Large]}, PlotRange -> {{-0.5, 0.5}, {-0.5, 0.5}}, 
        AxesLabel -> {"p[1]", "p[4]"}, PlotLabel -> 
        Style["Vertices for \[Theta] = " <> ToString[
            N[$CellContext`th$$, 2]], Bold, 14], AspectRatio -> 1], 
      "Specifications" :> {{{$CellContext`th$$, Rational[1, 8] Pi, 
          "\[Theta]"}, Rational[9, 64] Pi, Rational[1, 4] Pi}}, 
      "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{867., {91., 98.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{3.953708625230073*^9, 3.9537961130579*^9, 
  3.953796150795587*^9, 3.953803251482224*^9, 3.953960772766405*^9, 
  3.954297883774028*^9, 3.9543030438841877`*^9, 3.954920000398869*^9, 
  3.9549212497510786`*^9},
 CellLabel->"Out[88]=",ExpressionUUID->"b0089d21-7c9d-4862-822c-ba1dd8de89ab"],

Cell[BoxData[
 TemplateBox[{
  "ListPlot", "lpn", 
   "\"\\!\\(\\*RowBox[{\\\"v\\\"}]\\) is not a list of numbers or pairs of \
numbers.\"", 2, 568, 36, 20497191858922332028, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.958115684677208*^9},
 CellLabel->"",ExpressionUUID->"4aaa49cc-d8d1-4845-9c24-de8f690199c8"]
}, Open  ]],

Cell["\<\
Since our candidates are not always the vertices, we store all the 120 \
parametrized points in a vector:\
\>", "Text",
 CellChangeTimes->{{3.953796164830823*^9, 3.9537962161295958`*^9}, {
  3.953796251375989*^9, 
  3.953796266333826*^9}},ExpressionUUID->"0f761761-0bcf-465b-849e-\
3bbf8d2e8b0b"],

Cell[BoxData[
 RowBox[{
  RowBox[{"coordFuncs", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"p", "[", "1", "]"}], ",", 
         RowBox[{"p", "[", "4", "]"}]}], "}"}], "/.", " ", "#"}], ")"}], 
     "&"}], "/@", "rawVertices"}]}], ";"}]], "Input",
 CellChangeTimes->{
  3.953709333933938*^9, {3.953796192118141*^9, 3.953796193332732*^9}, 
   3.953796276560406*^9},
 CellLabel->"In[89]:=",ExpressionUUID->"e5d6ad88-bce7-4a01-80dc-ac64bc2cdcd7"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Understanding different regimes", "Subsection",
 CellChangeTimes->{{3.9537969261486607`*^9, 
  3.953796934731134*^9}},ExpressionUUID->"0a20d31c-ce99-4c28-8510-\
756af8d62459"],

Cell["Let us try to study the situations in more details:", "Text",
 CellChangeTimes->{{3.9538001240907393`*^9, 
  3.953800142211932*^9}},ExpressionUUID->"50ec84f2-7323-4f80-80c3-\
43757ce8fd9d"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"thetaList", "=", 
    RowBox[{"Range", "[", 
     RowBox[{
      RowBox[{
       FractionBox["\[Pi]", "8"], "+", 
       FractionBox["\[Pi]", "64"]}], ",", 
      FractionBox["\[Pi]", "4"], ",", 
      RowBox[{"\[Pi]", "/", 
       SuperscriptBox["2", "10"]}]}], "]"}]}], ";"}], 
  "\n"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"frames", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"region", ",", "vertexPlot"}], "}"}], ",", 
       RowBox[{
        RowBox[{"region", "=", 
         RowBox[{"RegionPlot", "[", 
          RowBox[{
           RowBox[{"Evaluate", "[", 
            RowBox[{"And", "@@", 
             RowBox[{"(", 
              RowBox[{"ineqs", "/.", " ", 
               RowBox[{"\[Theta]", "->", "th"}]}], ")"}]}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"p", "[", "1", "]"}], ",", 
             RowBox[{"-", "0.5"}], ",", "0.5"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"p", "[", "4", "]"}], ",", 
             RowBox[{"-", "0.5"}], ",", "0.5"}], "}"}], ",", 
           RowBox[{"PlotStyle", "->", 
            RowBox[{"Directive", "[", 
             RowBox[{
              RowBox[{"Opacity", "[", "0.3", "]"}], ",", "Blue"}], "]"}]}], 
           ",", 
           RowBox[{"AxesLabel", "->", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Style", "[", 
               RowBox[{"\"\<p\:2081\>\"", ",", "Bold", ",", "14"}], "]"}], 
              ",", 
              RowBox[{"Style", "[", 
               RowBox[{"\"\<p\:2084\>\"", ",", "Bold", ",", "14"}], "]"}]}], 
             "}"}]}], ",", 
           RowBox[{"PlotLabel", "->", 
            RowBox[{"Style", "[", 
             RowBox[{
              RowBox[{"\"\<\[Theta] = \>\"", "<>", 
               RowBox[{"ToString", "[", 
                RowBox[{"N", "[", "th", "]"}], "]"}]}], ",", "Bold", ",", 
              "16"}], "]"}]}]}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"vertexPlot", "=", 
         RowBox[{"ListPlot", "[", 
          RowBox[{
           RowBox[{"v", "/.", " ", 
            RowBox[{"\[Theta]", "->", "th"}]}], ",", 
           RowBox[{"PlotStyle", "->", 
            RowBox[{"{", 
             RowBox[{"Red", ",", 
              RowBox[{"PointSize", "[", "Medium", "]"}]}], "}"}]}], ",", 
           RowBox[{"PlotRange", "->", "All"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"Show", "[", 
         RowBox[{"region", ",", "vertexPlot"}], "]"}]}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"th", ",", "thetaList"}], "}"}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.953799832489635*^9, 3.953799832490582*^9}, {
  3.953799863853388*^9, 3.953799879260893*^9}, {3.95380100476679*^9, 
  3.9538010633301077`*^9}, {3.954303269116166*^9, 3.954303295060028*^9}},
 CellLabel->"In[90]:=",ExpressionUUID->"60f13985-1546-4237-b245-30fb3cead11b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"Column", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"frames", "[", 
       RowBox[{"[", "i", "]"}], "]"}], ",", 
      RowBox[{"Row", "[", 
       RowBox[{"{", 
        RowBox[{"\"\<\[Theta] = \>\"", ",", 
         RowBox[{"N", "[", 
          RowBox[{"thetaList", "[", 
           RowBox[{"[", "i", "]"}], "]"}], "]"}]}], "}"}], "]"}]}], "}"}], 
    "]"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "\"\<Frame\>\""}], "}"}], ",", "1", ",", 
     RowBox[{"Length", "[", "frames", "]"}], ",", "1"}], "}"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.953799846328858*^9, 3.953799846329887*^9}, {
  3.953864726383517*^9, 3.953864726510096*^9}},
 CellLabel->"In[92]:=",ExpressionUUID->"d623d7b0-765e-472e-a3d7-b0e3d2f6545d"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`i$$ = 70, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`i$$], 1, "Frame"}, 1, 113, 1, ControlType -> 
      Manipulator}}, Typeset`size$$ = {
    168., {15.91754150390625, 23.08245849609375}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = True}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`i$$ = 1}, 
      "ControllerVariables" :> {}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Column[{
         Part[$CellContext`frames, $CellContext`i$$], 
         Row[{"\[Theta] = ", 
           N[
            Part[$CellContext`thetaList, $CellContext`i$$]]}]}], 
      "Specifications" :> {{{$CellContext`i$$, 1, "Frame"}, 1, 113, 1}}, 
      "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{333., {72., 80.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.953799847596346*^9, 3.953799999142003*^9, 3.953801021647502*^9, 
   3.953801414748889*^9, {3.953864727529195*^9, 3.953864756337528*^9}, 
   3.953960890632895*^9, 3.954297989984219*^9, 3.954303404480928*^9, 
   3.954304352887681*^9, 3.954921384819518*^9},
 CellLabel->"Out[92]=",ExpressionUUID->"678674d2-f9ef-4344-9629-bb62aec6e1e3"],

Cell[BoxData[
 TemplateBox[{
  "Part", "partd", 
   "\"Part specification \\!\\(\\*RowBox[{\\\"frames\\\", \\\"\
\[LeftDoubleBracket]\\\", \\\"70\\\", \\\"\[RightDoubleBracket]\\\"}]\\) is \
longer than depth of object.\"", 2, 467, 7, 20484061571764428760, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.956051041868894*^9},
 CellLabel->"",ExpressionUUID->"3a447375-4b25-4f90-a0e3-3d3c3d0c389e"],

Cell[BoxData[
 TemplateBox[{
  "Part", "partd", 
   "\"Part specification \\!\\(\\*RowBox[{\\\"thetaList\\\", \\\"\
\[LeftDoubleBracket]\\\", \\\"70\\\", \\\"\[RightDoubleBracket]\\\"}]\\) is \
longer than depth of object.\"", 2, 467, 8, 20484061571764428760, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.9560510421024218`*^9},
 CellLabel->"",ExpressionUUID->"d425f8cc-036c-4d31-bd89-927800b51f41"],

Cell[BoxData[
 TemplateBox[{
  "Part", "partd", 
   "\"Part specification \\!\\(\\*RowBox[{\\\"frames\\\", \\\"\
\[LeftDoubleBracket]\\\", \\\"70\\\", \\\"\[RightDoubleBracket]\\\"}]\\) is \
longer than depth of object.\"", 2, 568, 37, 20497191858922332028, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.9581156850701637`*^9},
 CellLabel->"",ExpressionUUID->"45091d30-efca-4f2e-858a-b6d6f8adca77"],

Cell[BoxData[
 TemplateBox[{
  "Part", "partd", 
   "\"Part specification \\!\\(\\*RowBox[{\\\"thetaList\\\", \\\"\
\[LeftDoubleBracket]\\\", \\\"70\\\", \\\"\[RightDoubleBracket]\\\"}]\\) is \
longer than depth of object.\"", 2, 568, 38, 20497191858922332028, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.9581156852270813`*^9},
 CellLabel->"",ExpressionUUID->"4bc1c007-20fe-4ae1-8870-d7212caa98e0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ParametricPlot", "[", 
  RowBox[{
   RowBox[{"Evaluate", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"v", "[", 
        RowBox[{"[", "i", "]"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{"Length", "[", "v", "]"}]}], "}"}]}], "]"}], "/.", " ", 
     RowBox[{"\[Theta]", "->", "t"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", 
     RowBox[{
      FractionBox["\[Pi]", "8"], "+", 
      FractionBox["\[Pi]", "64"]}], ",", 
     FractionBox["\[Pi]", "4"]}], "}"}], ",", 
   RowBox[{"PlotRange", "->", "All"}], ",", 
   RowBox[{"AxesLabel", "->", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Style", "[", 
       RowBox[{"\"\<p\:2081\>\"", ",", "Bold", ",", "14"}], "]"}], ",", 
      RowBox[{"Style", "[", 
       RowBox[{"\"\<p\:2084\>\"", ",", "Bold", ",", "14"}], "]"}]}], "}"}]}], 
   ",", 
   RowBox[{"PlotLegends", "->", "Automatic"}], ",", 
   RowBox[{"PlotStyle", "->", "Thick"}], ",", 
   RowBox[{"PlotLabel", "->", 
    RowBox[{"Style", "[", 
     RowBox[{"\"\<Vertex trajectories\>\"", ",", "Bold", ",", "16"}], 
     "]"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.9538005530530787`*^9, 3.953800575804817*^9}, {
  3.953800606381435*^9, 3.953800625259054*^9}, {3.953800656460384*^9, 
  3.953800662631811*^9}},
 CellLabel->"In[93]:=",ExpressionUUID->"76707d35-516c-460e-bea4-3269673b0c14"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[
    InterpretationBox[{
      TagBox[{{{}, {}, 
         TagBox[{
           RGBColor[0.368417, 0.506779, 0.709798], 
           Thickness[Large], 
           Opacity[1.], 
           FaceForm[
            Opacity[0.3]], 
           LineBox[CompressedData["
1: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
Nnmb0BPmL87YraDhDm9x+iF0xL/tZz8vpWHL6vZ1VugU263n4pfQsPlKk7cj
+orTkzJrdcz/8bQFl9CX9mp4dyjT4CJyuzMSrR2Y0d8lT8Ne+dny8ehtC7hP
nsrS4L1XSCgVvSMoPsVBmgb9VxcmX6O7WcnsgTk0fJH/nwiHH9/g09J0cRpW
akhVFqKr2vTV3MRoWB8tcb4SnXu4put/M2nQ0hVk1aKjt2RvASHsryG+vxHt
avRt3E+QhkDJXwat6JNXDk/fKYC+8s+oHS20ZdRWYooCtXRmrAM9Xpkp1/iH
gigdC4cvaHFLL+WoCQpeRrCDu9Fim9f7Wo9RcOD0gEMfWrq0V1fjNwU2Cok1
A+gA1rdp0j8pKD/EHR1EO+swCtOGKYh32dI+hP5Xf9N7cJACO0rfbwTd90xK
48MABZH+cT0/0Sd0zJWYPgouy/mJ/+bP/yvrWH4PBUpFX4b5Ntw03JX8jYJN
VUz4KFqrXC03/AsFXtfXTfC9cqqjzv8zBau1DZTG+Pk+La9/oYOCW5JVU/x2
w0j664mPFFy5OB7H9z2ZknbWBwpqY0sE+Q4/P3/R1vcUjNTrqPHHo4wK0la3
4HwP7p7xC71l3t3Li5so+HJsbjI//n1Bd6NkGynI1Lkzc5ifH/JSQKSegn3S
Reo/0G2179MnaijYvCF75nf+/DtFU/vfUlA34JjMz5+u3Mre9koKJI91z+jh
r6e8kVttBQVvinUXf+WvX6iacUkZBULWuxM/omWT9r5JK8H+pisLtqGdEi64
xRRRYOLd+l8zOqFz46lQoOBHnvCTajRv9oPllzgU3O64OVmBbrggMOVcQIFI
8j9FHlpTtl3mZB4F5sV9EWz07wVZC/dnUxDn5jjK34+tcvfmbMuk4Kr7iHQ6
Ot01bYdhOsYvv/F+Alrl/tGwJc8p+CsiMRyNTp7WlLQojQLHgck54fz5ahyd
kk2hYKuySUgAOk2CBM5MpOBzQfH3K+jg0JvsqTgKFBsdxT3QLvsTdMeeUBAs
4XTHHi2grPi3J4qCpo6ae5v559HwaX/NfQqkG71H1qJFE6XMmXsU6GsHSK9A
H23tnsMLoWCvPROpiBbOijnICaIgzDA2bRDvC8n8Eq3n13E/P6qS6EKnqs5r
TPGlIHnYd3Uzeir1ZEnSFQqMqu4XcdFsi/fusZdwf7F6Pgeh/W6lrHjkSsEZ
webQy2iPZZZq8ecpyOvun34erXhpyOKZMwWphtGrTNF78j0iaScKjss+yFZA
m8nAhm5bCvafFzOLxPvUwfjFiu0sPB/r7hvcQu+R9rIwPUjBkUNBHe5o19M2
VTb7cX8odXqy0B4ihy5e3k1BgvTzhlno29WX+vK2UKB3kLvmNN7/Vj5Whw1W
U9D4IsDEDP2+hZWxSwf3u4Wo7ib01lXJuy1W4nrNNSOyaKfKNTt9tSkoWXD1
Bo3vTURPnmWlGgUflspWCaAPqIn2npWhYEbxPFtzfA+H3/hofhnlAG+ZcJgh
ela2hmPjLw7UkdeXldAJyw1/lo5wQFDexLcd39cjR2wGkwc5UBZiaGiB7nwn
5eH8jQNSrvnBe/D9dvLbyRNr4kDv90TeeApDNgn++nElhwO/J3LW1qHjMx7H
emZzQLlvtX0a+pNnR6RrJgeifO4OHUEvvSng7PCSA1mbD5a8xvqiI0YmzPQp
BzpZdXZWT/G9v6lXuj6cg/d/WalvAkNC5kpbb73Iga4I50oW2l96/MApNw7Y
3ZN7qI5++HjPtRAXDixSuOZRGc8Qd1vFuNazOJ6X1um56N375rxzteeAlkO8
Qngs1qOvo+ZmHuYA1TSecRbrsWaZ8BCLdRyorlu50QBtEDt5OHAtB4jJzzAh
tJmFq1WuHgf+pS4JjIpmyHKexRIpXQ5Ivq94VhLFkEeKk3EVWhxQ0AquFsV6
r730s6rxAg4k5QvnnMH68NnNfLWzAhh/o8IXTXSWwgftM1NsGNpUUPEN683j
V5N8T0+y4VNSbr4VWiOuR/T0OBuCD+5U3xfGkNqhuNSzQ2wIEMrbuiAU11f8
5x/fDjb4HE3K8cf6VkKoPfpTIRs2FOkU8evf5u16k91cNkjLCPgPYH3cUGGT
PETheNvPrmCh/eaPNgsWsOHEsObCBUEMqc65/mppJhvySrutEm9i/dj0QulW
PBve9Q92mqArtdznhceyodD69nxB9LV7y1gJMWyweRCZYxWA8x9Z9pKOZIPW
mbgbcjdwvNe9FWOhbNho1l1a6o/3zexHM4XvYbyLBzkuaNvHJbdlQ9iQGXeg
jvFjSOw683N6QWxw/ZT7wx1dsC7trfEtNrxdMsJTQfsfNrpwOIANcsXCptXX
8X2+L3LC0Z8Nej8mI73Qq/7/z4b/A3ecV9E=
            "]]}, Annotation[#, "Charting`Private`Tag#1"]& ], 
         TagBox[{
           RGBColor[0.880722, 0.611041, 0.142051], 
           Thickness[Large], 
           Opacity[1.], 
           FaceForm[
            Opacity[0.3]], 
           LineBox[CompressedData["
1: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
V8HIA0f45zap0jk30uy2e13h1fzn/wEW6rzG
            "]]}, Annotation[#, "Charting`Private`Tag#2"]& ], 
         TagBox[{
           RGBColor[0.560181, 0.691569, 0.194885], 
           Thickness[Large], 
           Opacity[1.], 
           FaceForm[
            Opacity[0.3]], 
           LineBox[CompressedData["
1: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
44PW/f+TAf8DRzHZTQ==
            "]]}, Annotation[#, "Charting`Private`Tag#3"]& ], 
         TagBox[{
           RGBColor[0.922526, 0.385626, 0.209179], 
           Thickness[Large], 
           Opacity[1.], 
           FaceForm[
            Opacity[0.3]], 
           LineBox[CompressedData["
1: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
LMPo/cP45za5Er4b6fZbjl/m1f3n/wMNlAee
            "]]}, Annotation[#, "Charting`Private`Tag#4"]& ], 
         TagBox[{
           RGBColor[0.528488, 0.470624, 0.701351], 
           Thickness[Large], 
           Opacity[1.], 
           FaceForm[
            Opacity[0.3]], 
           LineBox[CompressedData["
1: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
OvGG9NHwR0YM+KrCa59okocu9+jq/zVhgHepyPM/6hnY9/H3ITdzBjDQW0EH
wwhcFDWjPWBJ4KsZfZh4IAN3+KrdPH6CAdoZt53/nmpCfcu5URU2DOD+po+a
mDbglV/r3DadYYCWfXnwXeMGPP92VjbmHAN+F4cVKfVx0I2nEbkLtgz4WbE1
TsSiGJdgjyXOdgz47Oric06NhL//KVXqdGDAh4Is4fdzPXhB2EhZ05kB9+xK
5hwpTFz3TGtF/iUGPKpdV6ihUoUdT8SWiLsxYKX/5BUNvSYU9k53V+hVBpiK
HJB8vKMVD/La3PjozoB/BrurX6km4TsmjOc2XgzQXTxbK93ExOzrmU9afRgw
k6u7Z/XWDGy3fezsHj8G2K5J/CVbTEYSQmHziQEMaKabpz/SKMZ7GLGXlgQx
gJ671XWDYh5etUqo8EowA3r5dGNVs9rwzaAvrb0hDHhqVrzl79se7N2oXaR1
hwF98p5CwypN2MCPzy3/HgN2qRxL83/WjKmq+mJJSYS+ivFj3dhmvFd8HV9g
AQP23FjPa/yYhk/c353eW8QAq2/n1GUEy9GqSde1yqUMCDkyLnNBOA+rZnee
iSlnAJ/NvaUfBfPQmImT37tKBtSH+GcGCNSiZxcVLuvUMOCHTPHftyuqsJyt
qFJKHQMMc0+KJa5IwsnkPcz5Bgb8tWif2Lq8FgVKBh62aiLq8yXk7ZJ7A/hh
z687Rc0M4AQZhV9f0oq/+xenrmhjwMNA+bPHQ5vx2tDER3YkBgz1PV5tyZOB
G11rTjZQGFDSE9Cy6V8lWiwT+SZGZ8DlxfcGvxaLkFFnuv01JgM2p9Z5yP5J
RxeOu+dR2ITf4294tgW8wmciAto2dRD4Z/GrEwvhOE60tSKgiwFjHa/Dpmfr
cfcZw4DOHgbwuN8tvjsbTsxDa8V29TOgwcN4tGcuHS8Kbbp7Z5ABz6FnNvML
C807eNCGXhF4p1+dm5hpxCo2yydURhgQPvdGx6u0H684N951f4wBFlu8j4V9
rsE7pviTx8cJv/BGpL79UI9SrviraLxlQNQza/s2r2ZEv6CS+eQdAyTytXdQ
39UjcxWNd++niX6RvIr6630N1jz9eMnRT4Q/rh0uSX4Xjga01b4lfmYA6wjJ
6OBUIuq/qFgz85UB9gFH1dQcaVh5s7/FsR+E3096zq8cq0caC+Itz2YZcOLG
h+vjQywUb7Fy+bd5BkQ8ENlg9r4FH3lqtUn/N6GXkLXxZs5tKEhrViTlD6HP
02CjO9WC35d+6/7+jwFb3W+Uci6QcZiNobvBEiZ8v/DoWZRtL76f+vd1Ch8T
ynjXqlv31qPk76sVfixnwu6WhZxLr7vx08bbmgYrmVDT3XhXpz8RdzifUEwR
ZAJZ5iYvraMe9dhEff8mzARPw+iDe0fLcPi8/AO91UyQuzVziPuiE28v3fT3
2Rom2Kwu6U6nsLD25F2dL2JMkBI5M1RgSsONf8xtddczAWaScxVfteA22zDT
JEkmDCzsEx0woqGJK1vFPm5gQrzFYtC+wQ68zlQnZb0ME1YqTDTqDqTjgfKT
S3U2MUGiXDBpE4OCeRrsdK7JM6F/Ui/5Sl8LLr3nZJuswASrcdqcoFUXztrn
YN2+lci/qIHHm0LBK4bPbvm8nQmRLxtPHCIn4shs8w7JXUyQXbbmtx2zEp/I
0z6lu4f5v/lCcIlK/bW9TJiKLHd6W1+Putnyc0n7mBBLfWgVWVePT+5cK9Km
Qry3Nm9mW3Muyt27bMknVSaE/dHIW6pDxs4LC5x16kzY474DTNlluDT9m7/W
ISac2mfnGkVMk9LaXxYvIyZI6o4O784vwuXfv5+N1ST4/H34/mG9NpxhcMJZ
TY8JSsKDwSuoLThnqbvcgBkT4k7utmuVY+J5h0EVXksmCD00L05qa0GilSfl
dlgzoaqdTHdUIeaDFZPvzU8y4d1SyvTMNhpa5hkW43+KCV8VXh/0rm5HikuR
UNoZJlinXR/yi2ehIc5yZ8o5JtSfMBJ7ptuM/d9NPZ2xJfDZmjE988LxyPnR
fHE7JljszLmin5uLPbS+xiMHJmzWlSk6W1aJRNI2nHNwYsK6hnsP6xrKkFD0
xT+RLkxYwMI9Q/UtWGttS0DpZSa8GKHuCt5Oxkt1NTt63Zjw2FyF/iayCEvt
Hlj65yoTRFapah6r7cBD/U9EN3swYcQohO17uBnz21z5pe/FhOrILo01Kbm4
b/XeNd53mJDUWJTQXJKOI3pPlCTeY4LtJp3lTumV2KAjZxsOZ8L+QIEk0WLi
ff7NgaORTNA19pDqv0PH/LcZL/mi/6t3px/6ERvHBL2W5lIJ9yK89nGHa00C
E8Zv2TTbBNGxrEAyHkxiQuf8+xVBS2h4fjL2/Z+nTHDfr6HUHkHBstvavm56
wYTWxts34y8XoQTOth6dVCaExlBVHP3q0avR1ljndEK/B9eUBNxLRB/Oxu+J
zGQCxc9z3u4uBSsdTcsoyGbCvMDhXZXe9XhG3FtsMZcJu55r1UrfDscH9Vec
Nc4n9CQXofc5pAYv32h7/Xkhcb6lMbj1ViIq7/d3/ljMhKOJb3VrDXtwZ9Op
XaiMCc15xVoSV+ux/pp/7fcrmLB3f5Cw0osyfET8qspQFROkl2UxeMXa8P6V
Wdd31jJB2HXQ/mMABQ8oZj8IqGeCctjde23+4fgo2TOQiplgcm5VYGVyC65f
JXh4PTAhPADYvUkteOy4V5dTCxP+ea3vNvZNxEmFeZqVbUxYv5quomTRiNfc
LAleQmbCYtTZrzzeuZj2IzzWnPof/z5mKjdT6Ezo2tncEBmXjrZSyzU+Mpmg
r4ZnY93DkXLyCs5BDhPsfv1sbljZhVUXldXCO/47L77zgE93FxOCb6hSfzWy
0Z8za8LkeplAlanffPVUPfYhU69c62eCpn4On7NuEVbMPLO9YZDQ43bPubLA
Sqy+jVa7YpjoF8MC2olHi/BUuLiM9QgTuLRrL2Oca/CbBa1TaWNMMFt5v8Xd
KRyvKDN2+ThO6HegYfjw/TJ8Z/SgkfpbJphTPCyXoiLUU7+S7+47Jsjz/KV4
rm3G1Z6NjznTRP3frhhrikhH+w+c/CH1iQkO9cybr1sYuEC9Z5fzZ4Lvy+Fl
NNtwnJOnoV72lfBPXmOr/4MBLFkVJbn4nQlnTV7Z7NSnI/noNs7xWcKvomme
bTQuNjg7debxPBN4wyzSKo/V46Nmc/VDv/7jZ23cj89b/jChV+6FsIEioe8T
owvu/4h88zTICjaJqAs39NfxsuD9snWs+yFlSONnePRSPha0vZBsfHqkHvlt
Oy5uspwFSzgLkVNWNehr4JxXAj8Lrn80emj8vRW7Sr3IHhFgwXzr0ZRIl3b8
eod60XZhFlzemPNpSKERpXJpkZ4iLOAbVw5+crAeae+30qgXZUGYf/jo9TYq
TgvoaVkixoKgqx5zN01y0at2i41G61hgKaHQJTnTiT0O0kxiJVjg9uZMZ7h/
GVryC1kNSbGgcW10ooVhOH6wvXjP5o2s/+Vr/3bjsKssCySbk6TV9HPxausY
u3I5FnyMH2fu1EvEjo//1C9sZkGpU5J1ok86Cmx0f6+1lQU5+5Tu//4LuHl2
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
            "]]}, Annotation[#, "Charting`Private`Tag#5"]& ], 
         TagBox[{
           RGBColor[0.772079, 0.431554, 0.102387], 
           Thickness[Large], 
           Opacity[1.], 
           FaceForm[
            Opacity[0.3]], 
           LineBox[CompressedData["
1:eJwdynk41Akcx3E6jStJriel5I5ClO34bsoRI9a1tXIspRhFuTI5h3WkUOuJ
kcK2GDSMmXHMT3yNK/NbFTkqecbo2tA+LLuelNbO7h+f5/28nuezPSjC4+wq
GRkZT+n+qzNnwt5dn4V7LULJY1fY0ON67GiCBQuLxOGOTvFsYJ5S06k6xEJ6
w8igC50NnNV+IUveLPxAf6fsmcCG0Nu+HvkZLLRLO2MSlMKGWjefyszfWTjW
pjHNyGKD+qfbsyWsapSNVap8UsSGECVK2jnDWox4ryrOE7BhlmY3retTh/60
LrGvbB3oUQ7qmd3jYMTVN9ah9nVQvSLHS5Plos6Nqi162XUwJNdYVBXPw6i7
Z9v6h+og4hf1+a0DfDyq7RBYo10Pb3xeJWt904Qjeg0qw+frwTY5rD+ooBkt
Mtwla5rrQdzrvnDhaQuObfATsWQ4kJrJXpu2hcCBbOo+gTEHxnZf/7HApRU/
hURlDblzwKb2fHnYhYcYaMwPmIrjgAKzJ09S2oZlgzMjlvc5kBD4UxGtqR1/
NZGYRfVz4CX1VVLwOOJjlVZV/c8cWBppvJVO70AhyR+lGDVA+ETeiddLHUif
0jjy2LMBDulzJ79NEWJ0IoN5Or0BRMUztqafhejXOuUm5DbA/taO7GR6J44x
9hseei/9e8a0N/7VidEroQYq2lyoEtfrBAZ34W+uZZuZLlxIsPvQ3va8CxNL
LT5UMrhAM4vF1Ue60WvrcKV/MxfOnfz5slpFN87dSc3x/siFIerxh3rKPRiQ
uSh0MuTBxvPF1OnwHvSJNDvQEcCDsYBTE+oDPegW2FfBvMcDIhnqJGa92H7N
c44i5oH97utdpoxeDP6YXfZMmw9GmW81dcZ60fawgtEtfz74pjvELxg9wko5
2wpmKR/2vVKeMY96hDFFl7ZrTPIhX9nmoFvHIxzVVikyN2mE3p0urYpr+7BY
ZBHpG9kIBjy9dgVqHwZ2Bg2x2xuh+1YNsSanD0nnbXOr5Jsg9s9UellPHxpO
p29a7dMELp4xogeyIhzoM9BcqGmCwh2RK0E2IrR9vvFezXITVGuVr3tJE2E0
7wmx8n0zLFjb8YtKRHi41L6KyW+Gy2dyJ7m9IpzeburUrNQCVmM59eVzItR9
5vol+lILpEfc0AM1Er/rjJeUDrYAyXATPrEicaTlZNJrSwF4qchYH/YgkWKz
S/K2VADjMSMHWFIr7zEbZpQLwNulUl7Vk0SbHUpfde8LwOKAmcw7qa8t3PjD
r1IAZbXRzlneJLaN5jmPPRDA37nyp7pPkjihlrw8LhDA2wp9R9UAEv3ihMny
wwI4Gp5Ws4ZG4umMtvVyFAJMi7/Y0aTW3DZu/U6egOy8woJBqTtXIatTkYAo
N8Pgu+Ek5kas80tSIWCTgw7b4iKJIYtKsksaBMxs0JijXiIxkV5s98WAAH+l
mxtOxJE4s34HZa89Acfj5ztrpTY3KpjSciRguuGFOeUKifnVsSoyxwkoPbJt
T5fU5Tu7LB5TCTDMX/fCik6i19fFrjAvAhwu9rasTyRxvu2hJS+YAEf5jfOB
UgddZqbcPUvAy9LcNwKprajCzVnnCFhWUJ4NSyJx101jdX8aATni61WiZBIn
v4ojlaIIMHISl+umkKhzpvDzUjQB/5jYesVJ7Z1B6X8fS4BV0qJEL5VE7UwP
ByGdgPyrJ1rjpQ6wtJ+tSyBAU/GO61OpSyyNJSVJBFDnRwt3Mkj8IVZRKyeF
AMvZZWa81Pr/l4B/AYyNq4A=
            "]]}, Annotation[#, "Charting`Private`Tag#6"]& ], 
         TagBox[{
           RGBColor[0.363898, 0.618501, 0.782349], 
           Thickness[Large], 
           Opacity[1.], 
           FaceForm[
            Opacity[0.3]], 
           LineBox[CompressedData["
1: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
Mx1YO3yz0/8MoC8sf3JlW4j7ZO8ANpnZgzT+kkM/Eezeo2plU9qH4tdy+Ha0
0kGbS+S23Nf3iHUszzCFYHWNjyXFSWT8hdNfadU2OtRxWWs4fCjE27e6fU8j
uPVZXd3tvH6U88ZqTL2duA+342y7E6aRoW9mYzrBVGvV9efMnUhA//N1zQ6i
H4yU5S+UNSGGy4d+ZRDM612mHppWiqzsMr5pdhL6WhxZs3ycjqc+WbDMINid
72vqg9IWfK+J9ieNLjpE5f/my+ns+P+YuO94rL/3ceAlRSJlRKlQEZmVpFy5
i6SQbBkZDTStkKKiiCKjlOyMJLK3Y++97tuMbMkIJaP1vfzx+70/fz4ft/s4
57yuc53rug1wHHkQn4zuLwy1DMr+ArcT5wzFP2P9ubs22tllAJrbYwoS0c6u
TfOnnlOJR2BS475+KkWH2aFUI6YaWnu3SqSj19t4Trp86CbeEn2SsgO4vt9u
L2IejUCN3DZqKZpf69acp28OkUqd5FYepFL6bmw4axnxifDuvP2vGS09Gpru
690NYRubnugNYT3k+/lu/90vcOEPT1ovOmP7t95kl24yrOt0/9Iwzt+s0HVA
Y5DYO62d+oJ+0s7ib1Q5A8KZfX9ujlApL5znuLwNx7Be3506hz5Vc/981NkR
8LeZXec4iuP/sLxx3XwaqlQs/i2jWw9cucBzIJIozkUF3x/D/p96/Ur9uU8k
6lZp5+ovVAoD+/r82UMj4EqGch+jFx8Ie3yV/gI+NXvkGMYx/oqYYoSFqGBr
H33FC31rz8hnZ+Ec4AtwkdzwFeuLV5qydbu+ELuh5nBv9Mmyc2sL2SJJCG9+
CssExqMgd40sVzc0TuubP0c7mztP1G6sJiETtUUbJ7F+y5jfsYthhFRGiRQ8
Rz99XNa1Z3Ur6Lx4Y7xxCuvRz3tqnJe7IEb8QIwPuj0iWEf+50q+ZXvOPE2l
DNx+w1gxU0ZSR89vf4ZOTrd8qjxRRibf8p9b/w37m6k94a/6swmr4lPBJ+iu
5HfHInpGwfJPchT9DO63tROdEW2UNH1NLnNFr3qj2EW6BiCeN87rL7rlMkve
yboR6IhM+3F3lkq5ECgt/1trBgaufKNfQCeI2OQUfuyBT+fv5tnOYX8qylTb
XVRGvHStOafRXE8eMI+VzxAd8WnOq9+pFEddKd2o8C44F7WJDKH9PtOPv3qQ
TPQsfjAY/8B65qrpOINjMlktkLXUge762Hnc5VYEybC39deYp1JUcp7pMd7/
CmGjik216D5vlTL/mAFSuKCarvATnw8lSWpBu4is3R5zjKAnjpvXuahGkJO5
FrekFvA8hCdec3/aBvuFMhQT0dHNdZfd/WfJvYzYst2LOL83kXS/HpSRuuVQ
ibZfWA9Xtg6dkqoinOFDj278w/r+gL14aFIjsbqv/LIdTbfAs56/9Su5E/vs
/PFVNMqorC1H1O4yUNAoaI5Hr7KVb6S9DicXs+Z/s62mUeRD31oq+iXB4j/l
3nvoNdF6Dm+za0nquTabYfTlju8Xhvrboa0gJk+VjkaRag7i6vj3HQ7r07Iz
0O8/Gl0WrxkDvb33rm5fQ6MwSaas0grrBr09iU2P0M3Ogi9FL4XDkvz9r1/R
Kkd+Msn5dUPSDYY8DXoaZVA4Zudx7UYS6XpBLgcdzsB/NiQ3i4Sef+W4cy2N
wuvxk2t9RiWcLqq68hgtFvxJaeFYI0w7Maz/iiYS/E/8pBvJB4XrZufW0SjG
4WFyzr2DcKmR0SoDLUIezHWFtUNp6fz+rQw0iqI3B7HmCyd6xUofXNAOfJ/S
WgJG4fYFjs4BtOCm250lmwvBYK9NviIjjXJ447SjFVMSYY+y045Hj29x0KYE
jEDm6f3RzOtplPmL3+IUPg4Bh09RnBW6oLvUzftHA/B0HrzYiubzK/owb5MF
j72iW6WYaJRNmj12j2+0g8Di7qVXaGm2xynTu7qhyKaWtojeyGyU6N3RAGtl
Ey0NNtD+/+cNNN++1Hx0+RnJF79Zu2ExyiF1OzONEtkSlWanUQl64V4WLujl
7lNtJXlhZDxKlNqL9udz1XmdHgaV1bcXjrHQKOupnVsHf9YAN69jSxi6/4Te
w93CY3Aw8fTFP+gt2ppvIqUridfNv/FGG2mU6z9rLuUzdUKh3sf3+ehZva2f
fopkQZTuNeNtrDSK/V9xKpfaMMBZ5bo7aCOpae4a1zBo5Lz4rR2tEjv+M/P7
GGlxrayV2kSj+OX2nkiwK4Blfe8LAega8ScCb280kHPG1XHf0HL7f30fzakh
/Kd841U30yh/lgbfS7n3k39F8xfj0W9OtOYW6A7ChM0m6lo2GqVPQtvG9ncm
cC19/22G/laxXCO9kAmHvmb0FqBna5we2a2aAekWC4et7DQK53GOveqKpeC7
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
dYNlu+SakiMk/7uWn5jKKsLjCuwi+4lVhQNuLjtSC48mqleWHGag9dOjzxg8
QZD5y2pMkTjiyUTMS64Y8L35/mWxLtlvqWXCuikNYHdbT0+R+Pyh6W0KdhUQ
xJ/QV6Tzb38k9Uf19xF788Rpf1uWji/vFUgr1Cb9KIvG9/dWFfh+r/LUf793
/LD9pOcPlXz8XNN8XYEWmV+Pt18cf1oEtX5XJPZo/bseX7KvcJ4m6e8Cj4TI
Hq/AzzKif8kT85vE+r8b64KriTmV2RokP6Hy7FPhRRDysM1hJ7HJl7uduXOB
mPv6178Z6gz0qZf+K2GkDnrObHXfRszHU5W8clctzBqe70tTI/Gzda1lpXc1
GGiXikoTK7YcOfsnqAiP6ogaJx9ioLil8d1oexKkmCbYSRDvZyjM94+Wgp+T
sm2iKgNJF/e1qky3w8VH33W3EHttU1e8JlULqqUd/M8Okv7Kwu2rx2AgfB1v
axImPv5A4s0ZfQqc1n89G41IP/B44pZRZx0OVlP7IEAslB4pKyCaBMo2lXrh
Kgy0dTzhHnN3Gj571SF2DfGubAu7MzsqYNBOl/FQmYFqg1yFrjZ3QZzS6S/c
xJHdw8zVQknYe/jVQgAw0AGD9N3jTzrh5WvTdZ4HGKhTldpaokyBXrl7spMi
mY/i2zrYeZug3+Zw2+Q+cl5/Rd4sys+Gj2pX+22Jg1p9dt/mzMf2Gl87RxQY
KPU235ONudnY7WhnpiUxr9qms3fzo4HrOM/Vvr1kfe/X6/llZcNuxfSNpsR5
PKOG2qz5sGwwI6dzD+lv87zW6Gyn4P6O9dv0iDNjRDR3MifhiFOnrpXvZqBg
1/DtLGmlYJLc8Gw78fCiL3/V73J8sNgsM3YXmUelnY/I/M4DLyXB5zzEDoE3
LfKT6mCwb4WLpzzZb/nVca/FKGhX2b59Wo70T7J3dr+PC8TuK/0bLYjN3v0R
Gf7SCHGfRbRadpJ+8Y+GbsBzGqT7fklRIn7fweGAIkuh0XXFTNoOBrrWGPEq
daoR8s/Y8gsS7z5pv9AVGgiTY9yiAdtJfmeKCNNZNQDeKUy8P7YxENcL9NBb
uQE0VDXe2xJbPiy2Ur6fhkv0ByO7ZEk+W+/FxB1UCl8d2uXVZf/7vbOPggHh
NOjeJZyZK8NAy1Zu2CYbRsP9So08W4h3RtXktYbQoPrSEbc/UuT5PjZTF+8o
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
            "]]}, Annotation[#, "Charting`Private`Tag#7"]& ], 
         TagBox[{
           RGBColor[1, 0.75, 0], 
           Thickness[Large], 
           Opacity[1.], 
           FaceForm[
            Opacity[0.3]], 
           LineBox[CompressedData["
1:eJwdznk41AkAxnFKOXJlldikjNtShN1SKhspZyY2W451FEa5QmNlhI2idHgw
FpM8mGgYM+OYn3iNe36PlCIlz0RFoX1Y9rGPjrWz+8f7fJ/Pf++O4GjvsDUy
MjJU6f6rDfe1k5chG3G7IsjDFzkg3Q//mGLFRp0k6ogLnQOGn6Zu9X42Vrkj
Q67JHFSt9T+z4sOGiD6lSk3h4HjBKe+bV9gIzwg1C07joMTTtyrrPRto05pN
z+Zg7u+C+RL2fRglqVQNFnHgq6KYcda4FremNSR5Qg4maY6z233r4EDrkpyS
rYO+4j6KRRkXgpS3thFOdShfVeBnyPKwkFu9lXK1DoMKjUXVdD4MS8PaBp7V
4eK9zYvbnggwrOMcVKNTj2nfVwztvU0wNmhQHw6vhzkjciA4vxmbsrwm5Jrr
MdbrtXTucQv61PzFbBkuQrM46zK2EpC95va90JSL8Z25v+S7tmLkTHz2My8u
LGvDyyPPPUSFqSBwJokLWWZP3gSrDRVDcyPWFVzEB/1WRGtqB9NswiJ+gItJ
t1epIePAE/VWDcNPXCyONN7OTO7AOCl4rmjSgPDXeR5vVjoQMaN16BG1AfsN
eZMH00TIu5TOPJ3ZgN7iuT3mn0TIbJ3xFPEaYNPacZWR3AmljB+M9083wIGa
0N74VycSViOM1HV4eCCp1w0K6cIb97ubmK48JDp+aG8b7UIBy+pDVToP0RaJ
WHuoG6nbhqsCmnmgnbwTp1nZDZmSyzk+H3l46Xb0IUW1B/SsZZGLMR/a4cVu
s1E9cI+xsO8I5GMs0O/15ic98Ajqr2SW8cFjHKibsOiF+Bp1QVHCh8PO3C7z
9F6c/nj17lMdAUyz3m3RHeuFo8MGk9sBAgRkOtOXTPpQoLCnkskSYO8r1TnL
+D74FcXu0JoUoFjVbp9nRx80vlUvsjRrRKeBa6vyun5wxVYxp2IaYcCntG9w
60dYZ/AzTnsjum/XEHI5/Rg5prewRqkJkX9eTr7b04+Ds5nfrPVtghM1QfxA
VozFfqMtSzVNKNSPWQ22E8N1dGNZzZcmsLXL17+kiRHLHyRWf2rGkq2joKhE
DBeWUzVT0Iy40BuTvF4x5PTNXZpVWmA8llNfviCG2VP3zxdiW3Ap+jrlgCaJ
XzvpE6yhFjxK9xQN7iYx1XIy9Y21EMfVZWwdvEmo2X038Y4lxGjCiD1basou
i+H0ciF8XKuUNKgk9uqrfN1eIYSBvYXMlNS8pet/+FcJUVp74Vi2D4nm53nH
xh4IsXJDya/7JIlZTcaXcaEQU5WGRzQCSVCTRAylYSEcozJq5GgkPK60ySso
EthW/NmRJjVFb9x2SolAbl5h/pDU3DVgdyoTSPE0DimNIsGMXu+fqk5AzVmX
Y3WeROyyiuyKFoE5Na0Ft1gSrORix89GBPxVbql5JJF4L6+vaONE4AR9sbNW
anuT/BntIwSmG15YKl4k0Xg/UV3mKIGyQ3q7uqTmGnRZPXIjYHpz/YvdySTC
vi53RZ4g4Hu+t0X+Egm59ofW/BACzkobF4OkTohjppWGERhl3XgrlPqAm2hT
9lkC8sqq85GpJBxumW4OoBG4KcmtFjOkf75KYlTiCei5SMq3p5GwDC38tHKB
wD9me04kSX30iuLAdCIBm9TlCcplEjZZ3s6iZAJ3fvVopUtNs3aar0shoKv8
u/tjqe9Zm06UpBL4efF5oUE6Cf9EZe2cNAJ281+YdKn1/i+BfwEBHtLd
            "]]}, Annotation[#, "Charting`Private`Tag#8"]& ]}, {}}, {
       "WolframDynamicHighlight", <|
        "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>}], 
      StyleBox[
       DynamicBox[
        (Charting`HighlightActionBox["DynamicHighlight", {}, 
         Slot["HighlightElements"], 
         Slot["LayoutOptions"], 
         Slot["Meta"], 
         Charting`HighlightActionFunction["DynamicHighlight", {{{{}, {}, 
             Annotation[{
               Directive[
                Opacity[1.], 
                AbsoluteThickness[2], 
                FaceForm[
                 Opacity[0.3]], 
                RGBColor[0.368417, 0.506779, 0.709798], 
                Thickness[Large]], 
               Line[CompressedData["
1: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
Nnmb0BPmL87YraDhDm9x+iF0xL/tZz8vpWHL6vZ1VugU263n4pfQsPlKk7cj
+orTkzJrdcz/8bQFl9CX9mp4dyjT4CJyuzMSrR2Y0d8lT8Ne+dny8ehtC7hP
nsrS4L1XSCgVvSMoPsVBmgb9VxcmX6O7WcnsgTk0fJH/nwiHH9/g09J0cRpW
akhVFqKr2vTV3MRoWB8tcb4SnXu4put/M2nQ0hVk1aKjt2RvASHsryG+vxHt
avRt3E+QhkDJXwat6JNXDk/fKYC+8s+oHS20ZdRWYooCtXRmrAM9Xpkp1/iH
gigdC4cvaHFLL+WoCQpeRrCDu9Fim9f7Wo9RcOD0gEMfWrq0V1fjNwU2Cok1
A+gA1rdp0j8pKD/EHR1EO+swCtOGKYh32dI+hP5Xf9N7cJACO0rfbwTd90xK
48MABZH+cT0/0Sd0zJWYPgouy/mJ/+bP/yvrWH4PBUpFX4b5Ntw03JX8jYJN
VUz4KFqrXC03/AsFXtfXTfC9cqqjzv8zBau1DZTG+Pk+La9/oYOCW5JVU/x2
w0j664mPFFy5OB7H9z2ZknbWBwpqY0sE+Q4/P3/R1vcUjNTrqPHHo4wK0la3
4HwP7p7xC71l3t3Li5so+HJsbjI//n1Bd6NkGynI1Lkzc5ifH/JSQKSegn3S
Reo/0G2179MnaijYvCF75nf+/DtFU/vfUlA34JjMz5+u3Mre9koKJI91z+jh
r6e8kVttBQVvinUXf+WvX6iacUkZBULWuxM/omWT9r5JK8H+pisLtqGdEi64
xRRRYOLd+l8zOqFz46lQoOBHnvCTajRv9oPllzgU3O64OVmBbrggMOVcQIFI
8j9FHlpTtl3mZB4F5sV9EWz07wVZC/dnUxDn5jjK34+tcvfmbMuk4Kr7iHQ6
Ot01bYdhOsYvv/F+Alrl/tGwJc8p+CsiMRyNTp7WlLQojQLHgck54fz5ahyd
kk2hYKuySUgAOk2CBM5MpOBzQfH3K+jg0JvsqTgKFBsdxT3QLvsTdMeeUBAs
4XTHHi2grPi3J4qCpo6ae5v559HwaX/NfQqkG71H1qJFE6XMmXsU6GsHSK9A
H23tnsMLoWCvPROpiBbOijnICaIgzDA2bRDvC8n8Eq3n13E/P6qS6EKnqs5r
TPGlIHnYd3Uzeir1ZEnSFQqMqu4XcdFsi/fusZdwf7F6Pgeh/W6lrHjkSsEZ
webQy2iPZZZq8ecpyOvun34erXhpyOKZMwWphtGrTNF78j0iaScKjss+yFZA
m8nAhm5bCvafFzOLxPvUwfjFiu0sPB/r7hvcQu+R9rIwPUjBkUNBHe5o19M2
VTb7cX8odXqy0B4ihy5e3k1BgvTzhlno29WX+vK2UKB3kLvmNN7/Vj5Whw1W
U9D4IsDEDP2+hZWxSwf3u4Wo7ib01lXJuy1W4nrNNSOyaKfKNTt9tSkoWXD1
Bo3vTURPnmWlGgUflspWCaAPqIn2npWhYEbxPFtzfA+H3/hofhnlAG+ZcJgh
ela2hmPjLw7UkdeXldAJyw1/lo5wQFDexLcd39cjR2wGkwc5UBZiaGiB7nwn
5eH8jQNSrvnBe/D9dvLbyRNr4kDv90TeeApDNgn++nElhwO/J3LW1qHjMx7H
emZzQLlvtX0a+pNnR6RrJgeifO4OHUEvvSng7PCSA1mbD5a8xvqiI0YmzPQp
BzpZdXZWT/G9v6lXuj6cg/d/WalvAkNC5kpbb73Iga4I50oW2l96/MApNw7Y
3ZN7qI5++HjPtRAXDixSuOZRGc8Qd1vFuNazOJ6X1um56N375rxzteeAlkO8
Qngs1qOvo+ZmHuYA1TSecRbrsWaZ8BCLdRyorlu50QBtEDt5OHAtB4jJzzAh
tJmFq1WuHgf+pS4JjIpmyHKexRIpXQ5Ivq94VhLFkEeKk3EVWhxQ0AquFsV6
r730s6rxAg4k5QvnnMH68NnNfLWzAhh/o8IXTXSWwgftM1NsGNpUUPEN683j
V5N8T0+y4VNSbr4VWiOuR/T0OBuCD+5U3xfGkNqhuNSzQ2wIEMrbuiAU11f8
5x/fDjb4HE3K8cf6VkKoPfpTIRs2FOkU8evf5u16k91cNkjLCPgPYH3cUGGT
PETheNvPrmCh/eaPNgsWsOHEsObCBUEMqc65/mppJhvySrutEm9i/dj0QulW
PBve9Q92mqArtdznhceyodD69nxB9LV7y1gJMWyweRCZYxWA8x9Z9pKOZIPW
mbgbcjdwvNe9FWOhbNho1l1a6o/3zexHM4XvYbyLBzkuaNvHJbdlQ9iQGXeg
jvFjSOw683N6QWxw/ZT7wx1dsC7trfEtNrxdMsJTQfsfNrpwOIANcsXCptXX
8X2+L3LC0Z8Nej8mI73Qq/7/z4b/A3ecV9E=
                "]]}, "Charting`Private`Tag#1"], 
             Annotation[{
               Directive[
                Opacity[1.], 
                AbsoluteThickness[2], 
                FaceForm[
                 Opacity[0.3]], 
                RGBColor[0.880722, 0.611041, 0.142051], 
                Thickness[Large]], 
               Line[CompressedData["
1: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
V8HIA0f45zap0jk30uy2e13h1fzn/wEW6rzG
                "]]}, "Charting`Private`Tag#2"], 
             Annotation[{
               Directive[
                Opacity[1.], 
                AbsoluteThickness[2], 
                FaceForm[
                 Opacity[0.3]], 
                RGBColor[0.560181, 0.691569, 0.194885], 
                Thickness[Large]], 
               Line[CompressedData["
1:eJwd1nk4VO8XAHCJiIjsRWXJkrRQCumkfV+MUrJWlghFdpUiolKShGSsWZIt
28y9Yx3MJbLEtChKliyhvpaSfsfvj3nu83nmee773nPe95yjeNbV2JaXh4dn
An9zT24nt5z6kwDNb7xP27K5sJpYcW9UmA6ZJPfq6woucPSzLszK0aFX8txq
XRYX/tatVFbSpUPdpz3yC4u5cFGlTyvUhQ6P+l1tC9O5cEez1qLlMx3cSj7E
q93lQpZ/gu/m6kTYMZus5E7jwrFR+97gyGSge79uyPjaAS11tO9Lo5+DaZSQ
bONUO/wy9Lazd8iC7WopoZ2q7SDltvWwvFYOjG2J+1lr8xY8pVODG+l5YL7p
CDcxqg24f49p5AUWQDt9rOjn51bQ2iO/pzm4ECK/GVldUGmFAUWRq0kexeAx
G33K0aMFhJdETMdsLoXFym9GeN43w5Mzt2NMxJng5NPSnaLXDPWiT9iaJAHd
XyTyjLLeQLf1j2ZTYxa89Fdu0VF9A9zvXo8dp8ugR9x7xWO9Jujs1PFRZZSD
oIi/TPjuRqg94OfCvFYBYoLbF73d/xq4mpZdTbqVsDNjtGHCsgGSBfLIe+8r
YUmBqNiu8HrobXLtuB9YBfyzfosiiygwzpMVOSVXDb+J4daSCQ4o/MtRkiuo
hre1eYWR6zlgbMijFGHEhnl9N/6aetXB/EcOLSJlbHj24VbE2ZZaUBzcdEQb
auCqv3FSvFot7HaNTI/KqYGXcSpnT9+vgYMqZtZKMrVgtnbghwtPDXy2rbPa
GlALvo754ooX2RC3vI//1YdacFp6c1dJXzW0PNG81bq5DjxlPgmdtawG15FP
/FZ36qAvW9PFo7MKhh8vWHu0tQ68CgiutmMVRFfE100v5YCHU9rgmfFKWMmi
9kue4sC8+vWBkiGVUGoZOi8/nAOmLYfYs4qVkJn95LJONQduV4tWppZUwFf3
tMKPoxwQs1xWomdWAZ6SYvb5yyj4OPY++9NkOYTc99kcvY2CmnyRjzEJ5bBw
gs9K2ZyClRPXbOBQORzbHZYq50WBlvTxCffvZUCIXrx8BR1VN6k62VcG+o3n
/2tE70qUKfT9VgYW9UWrAr0pkBbwG7jZVQaGJfHq/T4UzJz8kBvdXgYt5b5k
ij8FDlK2mS2VZSB9eA+t/wYFGhJ3G+7FlYFMvl1G7B3cT/CnackjZWD6wZ8z
gHZ//zLZ72AZiHYti95yl4I1JspFX/aVwZVBKYO36MTgJMn8nWXQnPs1TSic
gp6chMITemXgo6MlZfeAAufytiu5KmXwssI4+PMjCvwObKUV/GFBucgje5Uo
CpqbN/arTrOAY2A36YD2m9b4GjvBAmd2p9IYOvdxkVDQGAvIzzMZfx9TwKcs
vvxMHwuqmxYHCMTg92rG75RvZcEKm6bAT08pUC7NmB7IZAF9x+lNsvEUdKwN
bvRIZwHzgnnMcfTqwE3zedNYcM57yLsKnSldfmdZIguWUHzRyc8oOCXmLEOL
ZsFF29gTJ+gUCL3wFGwLZEH9OhWx68kURHoxG+QtWHCdvXlFDtrYXcXrlRkL
jP7kdn9C1/jMv37oFAvMzo8FGKbg+w3epV2lsSDnmYfGJJrn6QeTnv0suNvf
rW6ehuvlCi2t0mUBxZsmMZxOgbry5Tq2GAv4lqssFM+gIPCjeGyEKAuGt1YQ
G9E9HwSZFotYkHfd1dIP3SZU9n1CgAWBmVvv8mdSYOWW/2/NPxIOrYh9LJJF
gb71+PjzYRKc9IovaaEnDVcUeA+S8CzvyMLDaAtaacX+ARLkHOZ73kE7G//h
DPWQ4GihtI3/BQWjUUq3dD+SED+8KnwInW7sEMOlSJi8G24smE0B//N0vZd1
JCRm179VRq+yuKQWVEOCafM7WTO0b7/54PpKEtR/dUdUzZlXXiK8lIRF2wNM
wl5SENxe9/ZkOq4X8lowCZ29tGPvhjQSZLbt8y9FC0mHLViUQoKy8Ed6H5r7
X+qFygQSLpjJdG/PoeCExRq2djQJnKjMHX3o+Qq6bMVgEn4KcSJm0MLvDoq3
BpKg1igbJZ6L6yV5FAXdIOH3X/sSffShLJbwgD8Jgj3BbqHoyqdbugrdSeAv
HDv3FH0yl+fnhcsk7FRnL8xBN747arnclYQDARVurWi7HYbbbjuScM/uDUM2
jwJQdlS0tiHhb/V2LOi434CACWkrEipyj8XqobsXPlRuNCfBOdjx0Gm00pT1
LcNTJEiu2a0RlTcXz1rblUdJuDzv8vlktEDym6l3h0hw7XUzyUMLD+7/GnmA
hNXzJGkN6FHDfSzBPSRcEQmtn0Xz/HgQNrEV4z+r9FIonwJSS68jX58Euixn
tzQ6q7vW13ULCcHFJo/WoCOFTWoGdEgQzdl7cDN6peE6l+cbSOgttCk2Qo+b
vbhou46EUPaqnBPo7H97nb+sxvO1sVPfCp1xdpdrojoJcK3dzwHt6vis1lqV
hFmLDAVf9L3Dan5dirg/wTvdMWj90NzBr7IkHJNdJJuIPq/AepYqTcK1w3x8
6ei1YYnP7SVJ2PHyyswrdD8tjTG0mIRB2d+CTPSGkdTqHBEStNXE68vRbR82
q7gLk7AxTvRSPbrItOnr7wUYHx1e2ht02M6CnWV8JBi2Jg62ob0Ne6cCefF7
xH7pvUPbXTOdv58H43Htn2EnmnfnxFnRWQIUcqjJLrRgQ55M2x8Cnmqb2/eg
RS19FGOnCUiLZtztQ08abQ2wniTA3GnI/jt6Y/WAjtp/BFjLJTcNoaNpvfMk
fxJQf4I1MYJ21qbk5o0R8OTyzs5RNH9riN/ICAG2xObA8bn3ZYqrfRwiIC6I
3v8T7aJtJk99JyBYJlDkP7TCN9qZkn4ClCt6xua83mjsa1ovAdBARU2gletU
iqJ6CPC6qT8955OzXc1BXwhYt0ZPfhJ9zEl285UuAh6INczO/a8XQ34794mA
Wx5T9DnHSlV10j4S0JhQxTvnwkvLVux6T8B/Ldoqc+txDUszNnIJ2Hv8IP8v
9HaJ+1dXtRPQdWZJ2tz+94Xdj5Vuw/ho31swhlaCbB7BFgIOSFao/kAPvXmf
M91EwJ5tBQuG0VPdQumDrwloHXJIm4ufhsz6gc56Ahac6ePvnzuvsobubzgE
VFTqrPqGvhOhsqeqlgA+64PJn9DLUg7XZFQRsGO+Iu8H9LWkK+7xFQQc83u3
sgNd1r39QkQZAT+KBZ41oksXPVrryyQgoitkhoOuvMIz61JKAG/av6VstKZ0
p9T5YgIsKr9HM9DDCvnLjxYQEO3uMDF3HidlHizenUdAkOe4ZA663C1jn0EO
AZTs9odJaKmHpyPVswj4LSg6FodOnNeesiKDgEtDM4uj0BNqp2elnxOwS9E4
PBhNiELogmQCOksrh6+hQyNCGLN0AuTbHES80PZHk3QmnxFwQ9Txnt1c/hWX
/u2PJaCtq+nBjrl4GKQONj0kYFGb3/iW/Ll6IW5GPSDAYE2w5Lq5/L/rW8wO
J+CIHRWzFL08P/44M4yASIOEjBGsF1IlVZpZNwnIetIg+hWdpyzR9jwA8zcW
sLEDLZtxvirlGgG7Gx5WsNCk+XvPBF8CfGj9X8LQj24/X/fEjQA73o6Iq2g/
LUuVxEsEkH2D8y+hxXxHzTNdCEg1iNtggj5V4hVDOuJ9kX5UIIe+JFW2re8s
AccvCZ+MwXoasOfFur00ArL1H+rdRtMkfcxNjmM+ToR1eaJvOtk02BwlQEa+
25uG9hM84XH1IAGPJbNaF6KjGn2/F+/E+3CctckJ67+Nv5Wp3kYC3r8INj6J
7uXScg9oE3DdXEjHCH1gQ9pB8/UE/FlyEqTRgfWb9gesIYClcP0Wif0mrr/Y
sl6FgPbV0g086N0qQgPOUgQIVkqcNcN++LvGX6NngglsLYFIA/SqAjWHtl9M
6IBXV+XRMWsNflaPM2GerHFAJ/ZX81M2I2kjTKgLNzAwRw++Ffdy6WWCmFvJ
3UPYv20C97OF25kwOJzMnnqO/Zn3149rhUz4PV24pRmdlfs0wbuACRLfN9pl
oEe9u2Lc8pgQ639/9BRaP4THxT6bCfk7jle9wvmiPV4q0iSViXW02dYqFfcf
olu9NYoJN4prqwOSsD4tkbTe5cGErmiXehq6SHLq2AV3Jpx7IPNYFR3x9NCN
8MtM0JC74VWfSEHa2aX0d85MSPDRdFqC3nFk8Vs3OyZo2SfKRSVgfl/FLskz
ZQLRPpXrjPPYa6mocHN9JrQ2r9+uh96XMGMauoUJu4x/RvKhnczdrIp0mcCf
oR4aG0eBPNtcXVyHCaLvOZlVsRQ8XjpD52gyYYnm3UYhnPemq78o71FgQk6J
QOFFnA/LQ0pUnHmYMNom16OBLpH7uObiLAOGjUo5vThvXrqeEuA0w4DOlKIS
KzTQ+4Wcphhw//h+1SORFLwdpac7jzLgDl/xLoUInOdEfv4J6GJA0OmUwiCc
b/n4OuM+lzNgS4V2xdz827hXd6aPxQBhKZ6gIZyPZzg2aaMEA0b2Oq+joZ8u
m+jgLWXAmTGN5QphFAwU3ny5Oo8BBdV9VskheB7aX8jfTmRA4+BItzE6V9NT
IiqBASzrO8t40dcfaNGS4hlw8lFMoVUw5mdcK5uMYYDqRfotmVsUcF4NcCYj
GGB0sq+6OoiCbYueLBB4wAD/VSPMy2irp1V3pMMZkEc/1kwFYj71zVx1wxjg
+bnohyearZ/xes9tBlDq42wl9C1TwyumwQyQqBQwabyJ9+Gh4DmHIAas+zET
44PW/f+TAf8DRzHZTQ==
                "]]}, "Charting`Private`Tag#3"], 
             Annotation[{
               Directive[
                Opacity[1.], 
                AbsoluteThickness[2], 
                FaceForm[
                 Opacity[0.3]], 
                RGBColor[0.922526, 0.385626, 0.209179], 
                Thickness[Large]], 
               Line[CompressedData["
1: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
LMPo/cP45za5Er4b6fZbjl/m1f3n/wMNlAee
                "]]}, "Charting`Private`Tag#4"], 
             Annotation[{
               Directive[
                Opacity[1.], 
                AbsoluteThickness[2], 
                FaceForm[
                 Opacity[0.3]], 
                RGBColor[0.528488, 0.470624, 0.701351], 
                Thickness[Large]], 
               Line[CompressedData["
1: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
OvGG9NHwR0YM+KrCa59okocu9+jq/zVhgHepyPM/6hnY9/H3ITdzBjDQW0EH
wwhcFDWjPWBJ4KsZfZh4IAN3+KrdPH6CAdoZt53/nmpCfcu5URU2DOD+po+a
mDbglV/r3DadYYCWfXnwXeMGPP92VjbmHAN+F4cVKfVx0I2nEbkLtgz4WbE1
TsSiGJdgjyXOdgz47Oric06NhL//KVXqdGDAh4Is4fdzPXhB2EhZ05kB9+xK
5hwpTFz3TGtF/iUGPKpdV6ihUoUdT8SWiLsxYKX/5BUNvSYU9k53V+hVBpiK
HJB8vKMVD/La3PjozoB/BrurX6km4TsmjOc2XgzQXTxbK93ExOzrmU9afRgw
k6u7Z/XWDGy3fezsHj8G2K5J/CVbTEYSQmHziQEMaKabpz/SKMZ7GLGXlgQx
gJ671XWDYh5etUqo8EowA3r5dGNVs9rwzaAvrb0hDHhqVrzl79se7N2oXaR1
hwF98p5CwypN2MCPzy3/HgN2qRxL83/WjKmq+mJJSYS+ivFj3dhmvFd8HV9g
AQP23FjPa/yYhk/c353eW8QAq2/n1GUEy9GqSde1yqUMCDkyLnNBOA+rZnee
iSlnAJ/NvaUfBfPQmImT37tKBtSH+GcGCNSiZxcVLuvUMOCHTPHftyuqsJyt
qFJKHQMMc0+KJa5IwsnkPcz5Bgb8tWif2Lq8FgVKBh62aiLq8yXk7ZJ7A/hh
z687Rc0M4AQZhV9f0oq/+xenrmhjwMNA+bPHQ5vx2tDER3YkBgz1PV5tyZOB
G11rTjZQGFDSE9Cy6V8lWiwT+SZGZ8DlxfcGvxaLkFFnuv01JgM2p9Z5yP5J
RxeOu+dR2ITf4294tgW8wmciAto2dRD4Z/GrEwvhOE60tSKgiwFjHa/Dpmfr
cfcZw4DOHgbwuN8tvjsbTsxDa8V29TOgwcN4tGcuHS8Kbbp7Z5ABz6FnNvML
C807eNCGXhF4p1+dm5hpxCo2yydURhgQPvdGx6u0H684N951f4wBFlu8j4V9
rsE7pviTx8cJv/BGpL79UI9SrviraLxlQNQza/s2r2ZEv6CS+eQdAyTytXdQ
39UjcxWNd++niX6RvIr6630N1jz9eMnRT4Q/rh0uSX4Xjga01b4lfmYA6wjJ
6OBUIuq/qFgz85UB9gFH1dQcaVh5s7/FsR+E3096zq8cq0caC+Itz2YZcOLG
h+vjQywUb7Fy+bd5BkQ8ENlg9r4FH3lqtUn/N6GXkLXxZs5tKEhrViTlD6HP
02CjO9WC35d+6/7+jwFb3W+Uci6QcZiNobvBEiZ8v/DoWZRtL76f+vd1Ch8T
ynjXqlv31qPk76sVfixnwu6WhZxLr7vx08bbmgYrmVDT3XhXpz8RdzifUEwR
ZAJZ5iYvraMe9dhEff8mzARPw+iDe0fLcPi8/AO91UyQuzVziPuiE28v3fT3
2Rom2Kwu6U6nsLD25F2dL2JMkBI5M1RgSsONf8xtddczAWaScxVfteA22zDT
JEkmDCzsEx0woqGJK1vFPm5gQrzFYtC+wQ68zlQnZb0ME1YqTDTqDqTjgfKT
S3U2MUGiXDBpE4OCeRrsdK7JM6F/Ui/5Sl8LLr3nZJuswASrcdqcoFUXztrn
YN2+lci/qIHHm0LBK4bPbvm8nQmRLxtPHCIn4shs8w7JXUyQXbbmtx2zEp/I
0z6lu4f5v/lCcIlK/bW9TJiKLHd6W1+Putnyc0n7mBBLfWgVWVePT+5cK9Km
Qry3Nm9mW3Muyt27bMknVSaE/dHIW6pDxs4LC5x16kzY474DTNlluDT9m7/W
ISac2mfnGkVMk9LaXxYvIyZI6o4O784vwuXfv5+N1ST4/H34/mG9NpxhcMJZ
TY8JSsKDwSuoLThnqbvcgBkT4k7utmuVY+J5h0EVXksmCD00L05qa0GilSfl
dlgzoaqdTHdUIeaDFZPvzU8y4d1SyvTMNhpa5hkW43+KCV8VXh/0rm5HikuR
UNoZJlinXR/yi2ehIc5yZ8o5JtSfMBJ7ptuM/d9NPZ2xJfDZmjE988LxyPnR
fHE7JljszLmin5uLPbS+xiMHJmzWlSk6W1aJRNI2nHNwYsK6hnsP6xrKkFD0
xT+RLkxYwMI9Q/UtWGttS0DpZSa8GKHuCt5Oxkt1NTt63Zjw2FyF/iayCEvt
Hlj65yoTRFapah6r7cBD/U9EN3swYcQohO17uBnz21z5pe/FhOrILo01Kbm4
b/XeNd53mJDUWJTQXJKOI3pPlCTeY4LtJp3lTumV2KAjZxsOZ8L+QIEk0WLi
ff7NgaORTNA19pDqv0PH/LcZL/mi/6t3px/6ERvHBL2W5lIJ9yK89nGHa00C
E8Zv2TTbBNGxrEAyHkxiQuf8+xVBS2h4fjL2/Z+nTHDfr6HUHkHBstvavm56
wYTWxts34y8XoQTOth6dVCaExlBVHP3q0avR1ljndEK/B9eUBNxLRB/Oxu+J
zGQCxc9z3u4uBSsdTcsoyGbCvMDhXZXe9XhG3FtsMZcJu55r1UrfDscH9Vec
Nc4n9CQXofc5pAYv32h7/Xkhcb6lMbj1ViIq7/d3/ljMhKOJb3VrDXtwZ9Op
XaiMCc15xVoSV+ux/pp/7fcrmLB3f5Cw0osyfET8qspQFROkl2UxeMXa8P6V
Wdd31jJB2HXQ/mMABQ8oZj8IqGeCctjde23+4fgo2TOQiplgcm5VYGVyC65f
JXh4PTAhPADYvUkteOy4V5dTCxP+ea3vNvZNxEmFeZqVbUxYv5quomTRiNfc
LAleQmbCYtTZrzzeuZj2IzzWnPof/z5mKjdT6Ezo2tncEBmXjrZSyzU+Mpmg
r4ZnY93DkXLyCs5BDhPsfv1sbljZhVUXldXCO/47L77zgE93FxOCb6hSfzWy
0Z8za8LkeplAlanffPVUPfYhU69c62eCpn4On7NuEVbMPLO9YZDQ43bPubLA
Sqy+jVa7YpjoF8MC2olHi/BUuLiM9QgTuLRrL2Oca/CbBa1TaWNMMFt5v8Xd
KRyvKDN2+ThO6HegYfjw/TJ8Z/SgkfpbJphTPCyXoiLUU7+S7+47Jsjz/KV4
rm3G1Z6NjznTRP3frhhrikhH+w+c/CH1iQkO9cybr1sYuEC9Z5fzZ4Lvy+Fl
NNtwnJOnoV72lfBPXmOr/4MBLFkVJbn4nQlnTV7Z7NSnI/noNs7xWcKvomme
bTQuNjg7debxPBN4wyzSKo/V46Nmc/VDv/7jZ23cj89b/jChV+6FsIEioe8T
owvu/4h88zTICjaJqAs39NfxsuD9snWs+yFlSONnePRSPha0vZBsfHqkHvlt
Oy5uspwFSzgLkVNWNehr4JxXAj8Lrn80emj8vRW7Sr3IHhFgwXzr0ZRIl3b8
eod60XZhFlzemPNpSKERpXJpkZ4iLOAbVw5+crAeae+30qgXZUGYf/jo9TYq
TgvoaVkixoKgqx5zN01y0at2i41G61hgKaHQJTnTiT0O0kxiJVjg9uZMZ7h/
GVryC1kNSbGgcW10ooVhOH6wvXjP5o2s/+Vr/3bjsKssCySbk6TV9HPxausY
u3I5FnyMH2fu1EvEjo//1C9sZkGpU5J1ok86Cmx0f6+1lQU5+5Tu//4LuHl2
4mP49v/umzhjS2LvJPBWjr+EtUW4a/mwl/geFoScXx06ezQcdayz/3l2LwuU
ll+b+KRVg3+dYVr4qLNgjy7Wdx1rxarfnE1jD7FAbF7m8rBGLg70i9tSjlgg
Ue1lvfdKOv7IOtHH1WTBh4qdPAFuLehgf4HDZy2CTzy0nu9gIr7in0gX1vkP
z6pHkkK7j7Hgn7B+5Ca1GizOo7LdUI8Fd5dtufVTuh79y5uQuWTAgj6DF0bJ
cp2o0HXvl3tGBF5VETsNl3TsoiD2PNOEBbq5QtT2gF7MWxUr32LGAtE9ovh3
fysi/Sq+89qCBbWlzx/e3peITnQ5w28rFnjff/fA3TEdj2zAPRInWaAscnZV
bW8r/ltaQlY9xYKxLqWSuZ5W1HJN+4nlGRaYWttnielX4lwlX3X3cyx4u9RC
3b+7Fb/s0K+7b8uCuFyrqLldFKSwu0ks7yILJo/uHhHaVYN5pHoN2+1ZcGm9
zaWCH4Uo3Ofx2VFHFgTL1XZN23bgO2Jfjy86E/n5X+Rx/FaItnT+FJK4zILE
a12PYs6nY/F7aUUqbkS9j1aoyH4pxH5837abXWVBocJeyp8ZjAe3fgh2dWfB
iqrUTflinUijNbrknicLtHj1E3X46XhjYV99mjcLkizOXNRe24md6phpDb4s
6F0yqnDrdDrybLpi1+vHgjtdve8l5cLR+oe1i18CWDBgFqygXEzCj/6WegkG
scDRJumii0Y7zho52bYlmAXrd13I6DzZgb34CmaOhLBgpu5mZCoVsPoFux7v
uwS+2xYqpurteGbzxvGBaBY8rMlMUbFswY5fjVZ+f/Bf/TeH7BUQeswCkngs
KWxdODr5gjqpEMuCmPt/b+eJJ+JScYnnh+NZYDEz5/1noBDrVMnsOZn4/355
vajU3Ipz9YaTriUT9RObKitWqsQ2Hvd4Ul+woEzvqFhJTyGefeqxWJ1K4Ffv
1bQ1LsPiY+u62OksaG07PJchEo7uCQbcfZvJgqz2FaGWJ3txxJvE1X+zWXA/
Ztdi4ec6RNnj4yeex4J6ETZ/1AUGdqhcVbc7nwWDd1yPHhYKx4voUo9OIQv8
vxfyFJRwcHJMKPNMMQsKfoRMP6ntxBVuZ1M8S1lwcExJ9NM0Das9nzWMKGdB
9rsbUesZhTh03KozpZIFf1dWB63kp+Cry3z2V1Wz4EeYAZuHVojVSTaejFoW
TB8Ks5ulFOJnk/8ixupZ8ErOO/4juRCbmKfpCwMLPD8N1b7XTsdDv3yuSbQQ
5++OK/S3YXQs+67H5jYWLHPOvrPpCQmf5uOaKpJYMHQ1g3Gdl4KuMG1WHqQQ
/Ji/uNw0WofMyqTTdGgscIbTgT1mQ9jKWXatKYMFJr4nMmUekrBeykX7UywW
8Lcbi/yNH8QugmMx9hzCL9fMXy6b7cB3L6THX+lgQYfoigehh9PRsFFGwPUu
ol+m+CYM1mO0O3TiYEgPC07NZI2u/x2Gi0su9Ub2EX6qqDr+MoqE5ML3msUO
sEBngvHh7gIZl1UfzHo+xIIdrwUzsyTb0epP4T3ZwyyQdf8+/H0uB7n3S40X
jxD9XKh+9VxlIQ7e9Kl1Nw8b1pSlXFVRIr6nil2CGrXYkJpTuHmoKwGxQp38
Pmiz/6e/kX+++pLH2CAkkPAup7AO/51M/nxcjw2dhgYnVDeWYY0vHVd8DNhg
bCp9PUe6BX8akGlON2JDQHD8oiw3AcP50PdsEzbM7y9feWwdAz1S/fXutxlx
Pn+VmNltjB9LRTVtt2TDmNWGzbt/tGFt0j7XE9ZsKLSd6vEPwdju09cPoSfZ
4HWIr/rBrUL8yYChU3yKDRPKmQFa37rQocdNnoNn2MBvLDNyWCIdd/kzfZef
Z4P985CCqQNU/LTqp5nyBTac73t4PIqWgPJ+H+KxtWODVKplmO45Enb7+zws
0oENF0T8QiWpOTjOQ3q80okNfw7sY3w4Q8JSfPXioy5sOCv+WZ5HvAzvc70u
I+jKBmZdvtkPUjV2tbL8o3qFDbUZ3401SWEo1N20/OI1Nsjp/+ZGtPei6Ktu
h+97EHw6RXdSfTB+9ftlSpUXG8ID999qmK5AYlSB3hEfNpx7wdNrZcTB4rce
jK/0Y8PvxY8bQ99XoNUsVYpKABs2ep7VObCMge3P84aeD2SDTKiSg05QJx4c
/Lo6/CYblljuXiycakOnP6/wK73FhisZfoyCa0ykqqtbMRDKBr/wmolpXgb+
GJpLWnKXwJPCKdSKr8MG5srFu8LYsEFsy+KNOBp2Ozl5xTqCDfrN8+/f+rfi
tEMtvDejiPx2HBERnahAMRnkK9nRbIi1PiTUVU/GMiqzRawHbPDPEHXU9GvF
vo/MST8fsUHj/jM9/7oE/Pt8b/nGWDa0RIQXMmrDsLtmxPVj8WwYl8wN3OaM
MavLefXVRDZklp7MtIQObAxeIXHJBP4Z4zBVeSoOSi8kNzxjg3kq66pMdQ7e
IiU+/uYFGxz/1Ziu50/HVtTCnpVpxHrGwXf0ygTkYOiTopTBhlnZ4A9ylWF4
8vCVwzZZbIjxy/EKqAhD0h8//8nMY0Nzwz6hneUJ+PTrIFl6Phv03m67XRFe
h5XL0PovhUQ9QgIM58PqcNTfvZPiJYRewiskd/CV4aQLNpEaZWzY9F6XsuFh
N565UrHUroLQ3z8r531LO5BGk651WBUbJDKo5T9n6ChqWjCwoOY/PylErPTn
1hH1CuOf5ylKQM92axr9bGDD3nSvAl8bjGuv5P+QbGLDtMmaGL91VJz1ytRH
s5kNHXS27JNmFs4X2U23b2VDtN+brR1HSNgnSXs2rJ0NX9s6P9r9a8bj/LHz
+WQ21HmO+xVuByz5bWMHm8qGrYuZPYl51ThyYvzWNzobfqhr7/KbouPhk6dO
f2USfG03Nr//Jw3VmXqu+sJmw62qzZHSf7i46sje1BkuoT/5tHXFi6W4//kT
wU+dbBBW/JiWn12NKxyN/N73Enrv9Fu/PoCGrVRSLSYH2aB5Mw87ZFbjlpO6
/OOv2OCaNzgeblSIiqIfPx19zQZBZ/6+uUoWVtMN5389yoYXv3z2VKRX48kP
WyyH3rDhZJm+/T9mBcJfr/r1T7ChFZatd9Ph4k1tF/x73hL9hqTXuIzZhheY
v6073xH4jha5PZ0rxfGB2sKcaTYk5KfL3pHi4C+l2cfCBThArv6VENhJxwGf
bsWFCnGAR1jwytLsDhwlJASBqzhQ/mxc8Wg8GXPcDUm+qznQn52y0WMXCV30
18h1X8OBJxUmTjf+UFBT2IjjZTEOPLfWl0lVL8Tjvw78tV/HARPjf332M81Y
db+29zkJDggfnxvIf5KAIx7ztp+Q4kCsgG/hNiJW8PT9YirNAcm3dR+zHidg
rJQyryfDAesny34MfCzFN/YEvdLaxAHpmOKW/AUK+tgm8vygPAdq3iT4Jqhx
saT5aTVlBQ7oza08kPIwB1/dc7p451YO6JNieCaVC9FItQjv5u0cWL0qbPXs
dCnOPn5z74adHMALJT9O4wr84EDGwbW7ObDqyZoPy/YVIu5IsKygIgcOrCkI
CWyowErNF4N/7eOAXb/5Hqn3aXgkx3nuqwoHmNlnSTivH//M3mL8XpUDZwrP
xA1+p6C+tSlBo2oEP63PXAva6Vj7ODei7yAHPo6/jub5y8a3nmAPtgYHvtBq
9pt+68O7TRz2kw5zIOTV9Yz3b5uRPb29q+EIByIp0ddwRA5OPz9mWn6UA2XF
DjEHayrw5Om67DwdDkT8yV+i+4WC40RN+lOOcUBwZaLRjck07Nf7/G2cHoHP
vklLdrIZdy3kcaMMOP/z27F+zdZ8Iw6ce2ceYT/Bxcui1SLpJhxQ/V1//+S9
anziRuyWaTMO5O/2D3I/UYczV1glrrTkgL96XYXV3WqUk3j99XZrDtyZv+Oz
wagVHYn5+0vvJLH+u6vH8k4CCjT88NH5FAeW5nkqdN1OwFVKhyvvneHArcys
T+/kmdg97Yd51jkOfP8u8+jbewq+tCDa1mpL6Mexk1wox0RxT+MFxi5yACyV
H5Tqt6K1b25t+2fPgd6G9E67dxR0Yk+H5EYnDrwt1Lw1NZKGx/ojxw65cGDH
KYFBDdlCHK6VH3zq8n/56oLyV183Qg/NCwIdr0uRVcnmg7FXOXAo3ljA+ngr
Xu9682SpOwcO+mn8vX4zAR/T1zJgeXKgOK5e4dUHNs5NvyI67c2BzhX7pu2H
S5Eha0nJ8usc8J4yV3s4zcb+ckvlN/tzwLA1ZO0yIxpO+n7V9cgNYp3v+oLu
eza+lKQTcTaIAy/J867GkhjTHe4G+gVz4EXDdHeNRCGi5CnpxoZwIH2mNfPM
VBOuqtN/U3ybqMfkzEmJ/DYs9Y55gn6XA5TMrF90/2qUebcxZTKMAxJq+zWW
PujAB0akGnkiOZAnUmDucpT4Hjk+WbrhPgfkfdKkVhKxicDGGwdi/uMj7Xqr
hMVDDixJTrs82d+MW/p7ot0e/7f+LMim914sB/hXDwvY6NYhmyK9n6nxBN/p
qX4312CsX5Xzvi6R8Mvus9LbcyrQ0tc+FV3JHCiYmH1o5lONjniUW356xgG+
D+bPp3rT0L+KC5TlKUS/uX3sfWxvKXb8EiS6KY0DHQU7X108SsMUN4F9BzM4
0PNhhdwTrzDU7sa/1TKLA2MnkhY2E7GEqt8X1xwOpIb/WvfpSB1qFrR5dCeP
A5NwOmq/AAkNK+cte55P6NnRzTi7Ow31fHQ1ryzkgNlUwk4Pjxx0ODDVg1lM
+GPHe9Hlg024V+a480QpB4R4nRSS3ckoYf2FfYvlHOC+2P1AP70CFWRNd6yt
4oCMs6Sgr0Ahvs73Xm9XDQfEv+zLaetsRnd9zsRq13Hg+myNlLEHC8fvO1J5
uoEDCwz69/f8hSjdLzHfo5EDJXt3ebvwE99boQ7Xw4EDD68Z3J9cUYjuR2Wu
T2nhwHrDlXvuLyNhG4bNg8o2As+vM/fGlxfi6aCQQTqJAzdUpV0ciBj1bVwc
pXDgqdzuSmm3HBQgqvR9lsaBiSPF1YJ8PfibXQ0IMQn9hMYenONS0Pa/FXby
bA6YW+aPXuLDaFJq64AalwNaJh9XbuOU4k6vXNr6FVyIUZ85Sp1vx5rv5G7R
tnChUO+0mUxzM66RH1ldt5ULbHZMaFxUBVa5z3iUt40LMj8vmh+cLkCm8lN/
E7dz4eX54aI66wR85t2+s+E7uFAUfWB9gHUYOj9ckH19Jxee61a8USdiMd4T
r512caElUJX5q6kZf7bcs+zEbi6cthzvUpKpw2s790vp7uHCI3nrI4KRFdjp
pttGFUUupL0Wn9SwSsDuVh2r5PdyoTsoYlvMbTrys3SeWa3EhZy8rAaXiC58
y38n/kfETJm2KvmpBqTattF/Zh8XHu+eWnbMMgH/3aslP6zMhdc73uwLa0xD
vxse1zNUuHCvjTbKsKjG8w5rjtbvJ/L5PdT/fbIBhSi0VuWpcoHetkPb2iIB
UxfSJBIPcCH19K5lkhY5qHWk+PI9NS7wG66tFJ8sQOs7P+R5q3Mh9rLUE5mU
HizLtOm1O8iFgi0p9BNynXiK+u2r2SEuxJ/KHN8RVoFU2vDvwxpc0H69a2q+
gYvvVlV934W4oJLDiGs0q8a/kocHJA8TfA87pftK1uE7rvuLV2hyoc+P9uxo
JQWXbKr3+EnEZ6/+Q4NvCjC76prc+BEuVJeSvsS9aUAj8pbNXC0uWPUcC84x
rcYJFx1Nmo5ygVEk1Zt+tw07umRTC7S50H5kr3xBfTO6uFdcOVmHC8dDbmpV
HOjGF0srIsN0uTAg+ogZvp6Gp8dCON7HuKDo5DBGWsHFGg1BS+2Oc4H6dF/q
5fwmfFwld4upHnH/p4dFe00SUJEWzwENfS6kTMlm/zZOwKyB8P3bDYj3Av/9
ia9LQ1Lh8ou8Rtz/9ZvbYaqkGSKW4b7la8lrQuLvrgcNGXNhE7XgyuLrAlyQ
9laOasIFx8Mn6bridXg4625VpSkX9AzfqQuL09DMO3O1dDMuHDmr9vOSUTUe
uWiUG2POha+vrrlfzW1C53l8lt2w4ELdN9Kqy2J1mF5Pt3C25EKIrLisfG0p
OnrHLNrSigt+dz9n5xlWo0jjJVWa1lwovr8zrJfdiRVWjjN2nuCCxF5Z9+FX
BViv4Ct33UkuKGXttdddxsU9CortS2yI9Rjpz5eJ9WsuSdkzRLw6m7FwKbsJ
XXRU8h08xYWSp/ZesQZkXCw0q0w+zQXDH9fbyn73Yn6L96/LznCB/LCVU5LF
xqNyAgEvznJBM77IzmKoAVu5n+KNPMeFc3ce8lpPtOO9O7r9fM5zYauSu97v
zCb0R/Pmqwu2//H5PdVqr9EFLgyeIp0NGGzAi4dsPA5c5EKjhPo93UEGwn/D
U+Xs/ttvJbw6Z5M9F/avODA5opeDtK+mJso6cMGY7+TmtAEG3rPigI+MIxf4
asMuZFelIb22Lo2NTlywP/zK5yyx3zbSf2aDMxeEjaa39km24g4thWgpFwKf
AK3Ut4CC0rm9YpKXuJBxQeXdY8lObCP7KGL9ZS6sD7Fu4atKw5JrzafEXbmw
cHrHzfDjCTjl8bp9Ym5cULa5e8n2eA5SDRl3WnOFC618/ZZ5lWmova363uqr
XOhQ2Mz3QaIVt2k9erTqGheWkO3Rhb4CpDPkHibkzgWP8VyfpmMJaOr6CRcB
j//yfTerpcLvyQXB33OdYpWlSFRTeXqZFxdeSK9ba3QsDLEVd0Qv9eZCk71/
0JZjOVisYIskrw+htzinEzzHqrF73LbHf4k41vF8dVYFFy1hKv747Uv4ee2x
kMiKUhSurKG9cJ3on9UHztX2NGDDPOPAWT8C343bEtE9DLRd2CH1uz8Xejof
SJro5uBUreDiLwEEPm/eOPv1rahCLiXv0w1Cn1c7qrfP9uLlD1tjpgP/w890
/vB/RZh5PJbP18fJWkpIiaQFKZRCFGMNRUT6ChWVomwtkpC1uBGR7S7ZZamQ
nW6Gse/LdV22iMiuVAolimd+/zz9+X7dZq6Zcz7nc86wmPQgkOOjsaUiJgI2
0bYKjnkSyE5M79PjrjJ4sVUXDXth/3M4fcHvGB1683sbDXpjPZpInA7Or4SZ
ym9b+3wIlPftYI1XXAX8u31BrscX30e4cHuVewEQfXqYRj0g0CZrvuva+Ung
6gO3mvaHBNp+7CPTtCYdRpZWfm72w/koN3HYmk/ATUJcq/X+BCo8kSCYE9sO
Z93N/lbTCMQRfXTb6DoGzC1+OVERQCADRf4Hzpr18EH6cmlpID5vNMs9M7yf
gOhp9+IgAvEPiPO2UpmwmvWVWP4jAr392Xbq9RUSXhFlKc0OJhA3N+8Xds0e
eOvsRaVXIQRSPnzi94kbzfC7c3la6mMCheVdYVAadOBrsv1PYiiBRhI4kOXz
dqjf7qUSG0agK+USakkadLit6KMt/QmB/rqahU+TZUBtSNs3PJxAKkebHePX
NsH0XZkPQyKwfrKaq001imGrEe/tgEgCBXC+S34b0w6huqvugyjsl7fGrrC6
1QDhuqH1ntE4Xrkc/7nHVMDdecfL7tFxfgKWd/9VrwdRvTn/OT3F9X5kR+ik
ejrsXre1z+EZge4zH7lGqacDpqHJlMvPCcRe6hdWwckAv0qKtp6NI9Bk/0ps
ClEGEm5ukzeKx/Wfl8d/U50GVAV9lPQSCNSzczzpDlEGlfxGpbQSCWTyU2Sj
hmsn9PHW5lRNItA6hombZG4ubGZACYlkrE8puvte9WLgEDwpz5OC88nZm79V
nQ59WupkfmMO1uwv4hyoBYSR6daRF7g/Bz7RWFKrB23fY782p2K/z76nOC7X
BhP8IvML0nA+BIoNBtV6INeQytW4dALtN/++vXS5A4b3PGfxz8D1f3Rdb5Ua
HZqqv37i+JJAR4dliyKXO4Dcd3uus68ItI1F/HzKiwaQWD50R/U1gZRSlW7G
qtFBoxtb855MAq2qXxOzftoOH/0e2LAxi0DjU265D9XSoS2PjdovzI2v0UVX
NRqICE+yHMrG+Yrp3XaeowlOG4bYN7whkDqbgbHPpmr4Y/s+m5wcArnX9kQ4
3quBw20up57mEmgszVLkfk4SfH7orph3Hp5PZO9YaOP9XwuJTdnkE2ioy9iM
q6MMnjj3MOZUAYHeDeqNTdAroGVVxBGFQlzfhm8PS6kVQ9edxnXbi3A8gJ+y
KD5/z/EqNbZiAkFmQSedTdXgAsdwxgzmH+M+V/hxPF4cePO3s4RA0/QX/hvU
aHAmREqj7C3ef9ibnUOtGGz/buqUwsB6+K3ftPNeAaD2yYUHlRJocer8F0b7
e3iKrTz+VhmOX88HoyP4/C6nF56aQtz//hvIZX5fC3+8f++tWo71z1jPeygn
Cfy5fctEvOKffwQP529djwiUJvxkYlSVBo7OpzT9wHxg53svZ3oF0HVTv95X
SSDfnbG7b2EuUg6eR1XYD0U2X+lXpcNNHA9vpFfj+WDdhPOn/lqYky7RE1KD
+0NK6mg3/v3+uKvUnVrMtsaZv10KoFCoyw3zOhzfs6+dm2Z7YJfdzkS1ejyP
9Wlk/nIpAHHaLuXiDTh/a591XMTf45u618TVSCDJA1aW/u0twGebeM13zJ7N
vCFMdRQceOn5urcJ11eH3+9M9ibYZObrXd5MoDot2ReUKg0+npPRfNFCIBdP
zoHA9kwoohH0I7CVQIGhdr74fGDX2sdPbrTh+NeVe/aqpsMT4pHRRztwPWXT
HMRxPP+yR/8RIfD8dPdeuUQOAQ281E+zkvi8g9e8ETsDHjgdHTlN/ovnYe3I
mnaKQKCP63CJXTMs2qH0saAT69Uu4EUb/vu4tKCZZ10E+uJXe0cxB/eHWN9x
z24CDTp9WSuF9dFQt6vVqgevl1N4vIrPpz5lm3S8F59vr0hiD94vpt7cSvod
gVakcn6fyMmFfGLfeXn78DyoshUxsB4TamRyFjD/lL3F/5edAS5yqZp96cf9
W9p3eZdaOqg9XPl57D2BzA62HVhozwRVc0W2AwMEGmbOz7DB+3UuiFCdg3ie
IXpYmHB9s80sibV8wPGzBaQO1udHf12r6iECXaqGgqdxvfk6rXvEGCZQcrvB
8iZc74GXVOJyPxJo7lnyvI1aPRRZ+fgsY4RAu44JKvjd64Q/F395J4xi/9Vk
2mfZkQn1VrxOR48RiJaYQo/B+h4tddkQMo7r3aJvfajJO8j2/kPBgwkCEfRl
oTRcjwHrSrTcJglUtuhH5f/PH+ZX0M0pAh0xIn9V4t9faRWL20zj90L3Z8ty
7BdxqQN3L3wiEF9g/tQEjndUxe1c4884f83sS1/w+TaAu90nZjBbpp3821EG
uOsnxlS/4Hg8p0Y3cjLgDrb6D/Jfsd/e2pS/G7NFMl+N5DcCtfUI/pFRp0Fz
zdbwnbMEWvum79hh/mqoGfZDb8t3PI+LaDpdx35decD/K9cPAgl6DQ4Y81cD
poaHHsxzWL9nF9Y/xX5d+/fL/E/MvDbxL+Kx3x93rTGdmf+np3PvWdI+Lvzj
4y1vBnp+Yn+3yQtqVP/f/wNrVlp+4ftnEwGD2L+jhjW5qhYJ9HWTcK4MmQlU
9KXWFP/G3/vCE1OfmwS1SI/R10v4fXbns8yyawFM4lXMSVzG9TupbLt7sBa0
vDG3jvpDIKPpXoEjg7WwRneMLegvgYS1dzhf1cDvt4c9TzxXCGSteuajvlsN
rF2SYXdaxf7G9BRYuXVCe6NZaxsmEm2dGmk79bwdiIoK5J5jJlHKvRff6nH/
DOBNHTu1hkTHHR/60jZXw0YGneUYC4mWr+vAJY10GMj4ul6RlURP8+7GU24F
cCU7k0mKjUQyg0/1IZ4HxuTaPoiwk4jtz/nkk5rpwGnSOIOPg0SytxsvFeL5
wvkqOMfOSaINE429+optUEYn6NdvzDb5jVqLebnQWeKo95e1JBq4YFxn7V4A
n6Wc/D68jkS6HOtKwjtbgMvpSoMuLhIFC0gXTuD1jm30qIb1JJr5NCLrzsUA
VjntdaUbSMS/6LRZ4Vg6rAm79jGbm0RHbkYseefnQnf2y5NJG8n/z9eazNLe
SB4S9TvKWu++XwCM+J3zabwkkrIW9C/C6ytDWSUcNpGI+4YGXOjKhLda+ist
+UkU5WwUJqhFgyuiG7VPbyaRi54b2+JQLWDan1xwbAuJXtwJu2SpRQOB7k/W
Kwjg9QayvJcLKoG4ROG46FYSRbQnhgsotQEe0z+veAVJVGBSE3TAowC8S7lu
vorZTb3LO3ADAwamLM7NCJEo045v/IVSGyzc9uBTgzCJGjd3uZtp18N97tGP
U0RI5N//jfmbRw1s6CFR2A4cnwDngCZtGjx5Q2bQYyeJWAzjOWbxfJ3SnT1u
u4tEvCIn5cMLK4FWsn7f2d0karKq01DF87y8NdfbY6IkEmVp92jF8zZr0bTv
QTESsd4+IRKqQwftopMK28VJpFOk0DXkWQDUtVh61+4hEQy7/orFqwAGvFSx
+ok5k94a6IbfE3Yj0e9GJEi0NGCk1IffE4oPuZQ69v6Lf822BFrZPhKB1l6f
gOM0cBMYVGRI4nz9bRRJ7CuDMne3foyUItHUqODF7r5M4G+y+tVbGuv1U1Ph
2hPpwM6Becp+P4mKBTVu7y2uBG4nRFpND5DorbnKtG5xLmy/ZxJ7TIZE6XQZ
6dzrJNgSmG4ic5BEdiKTOjP4feXNzrssdAjHTJjJ69d1ErZ4RwWzy5JomDz6
jsLrNX0OcvzA7BgdZ1AwVgsqIsccB+WwnqU8mR3U8XylnYsa5UmkVnrENF03
HTTvjPxTcJhEgZGKSj266RDmhIglKpBIQePQdpvxWujkEaf4SJFEvc7GO702
NcG7PNWH7x4h0XXTHrX2kiQwNP9H5NJREqX6sFyZK8kFhvn6c3pKOH9Fz1XF
+RngG5Gbf1gZx2vy1d2vwtXA+d1ei52ARPobq2CzbyfcalT4Y50KicYWo1U0
tlfDrArjOwuYA9G0zvzfHnj/NcvQkCqJFnosfVpO0qFtTP3hZjUSjaY1Tay+
zYUDPLH3CtVJxNEalyqvnw7Lo31SEzRIpLmPaVxPqw1EZLnAQE0SHV5z+YbS
825o0ueBnI6R6OCKz/VufRqMTYzIvqBFIvVdVjWnhsug84MSmo42rl/HNwma
BumQxvpZ76AOrm9Oth43g2L4O0N6SfA4ieJuPbybZ1AMfL/ej2I5gfP/TMJz
2oAOTM3fCX7B3PXfEi1Epw1q22o86tElUQKLqkOYXw18llA8jvRIpHRWx6/K
rwDscVOUfnWSRMZrPVSiPJuBgWuNRYQ+if4rNCjnMKyHf4XOud83wN933lLD
N5oJkoaWfK+eIpHYzdfnL4yWAQWtNGcDQxLNj59zScesUm9mrGBEIqJMfNP3
0fewdoR/247TJLomyLH3oBENXtjS185hTCJLgzWdAWOZUGZvQPsw5oKERfFS
oSY4brhQxjhDIsHJiTtLQgzwdpfo04j/SHQ2xUWIgrnA7xDPJXsTEq1fTK0i
ctphEx/conUW3+e8stS+8lyQY7anTNgU6+OTOu327mrISj9lsIC5K/rKdw1h
BlCwkG9rMyMRvTSuKru8El5S71VKNydR+L59Zqr6bVCOVKB7nSNRj4eRG0dF
LtyebDx09jyuv8q/pfIVBBTQkNwic4FEZ+5RlyK3N8FGjXIlDgsSbfv9u8Tu
DO4HclwGQ5ifi3DveHkmHWqmbzIosSQRSQ3yXyiogKH7epTCLpLomPkz4Tr2
XvhS33jLtUskCuXk47k/nQkcEwKGVC9jP1kMN/vMaICXsu/St1jh+zEGzv0U
o2AOh7DyV8zH7C4v9qJcsEPZva3uCvbTGRGSaycDinWHGcRfxfkOWVx/pDIX
dFhdKHO2JpErWu95vTIJDt4a2qJvg/0gMpW+6yzurwks7S9tSbQyMPdhr2kx
PHHD/hKrI4lO/SL4ZR4XwCd/1peVBODvD7fEcTflwvoNb7gTAnF+Khw3B0QX
gDa1En2/IByf+YGdT5qSYPJnibt2j7B/DM/ROZbLYKntaoBRML4/raq/xqoe
buZT8VcIwf6k23qPdrAa7AXDDsKPcT/8JnIaNVbAIdUp1TWhuB5k57l1DjLA
q1v/LU9idrn+W0K4JRfclRBLaQsj0c8EJ/WLLZUg4+1ZuYInJH4/rmasCvTC
PW6f3zwLx/e/XiklZ10MDMs/8ntFkMjpWltRzjgFmfqOWF+JxPV/KoJp2roe
hu+YTTwRRSKaQcIjLRsa7B5lr9sfjf0syvjiYmsl3O7q0cVHJxH7yMPNkAmC
oweM2n9hfvCiS6OjrQE6mPrmDzwl0TmzxfBUZgi8tDb6Vj0jkc8r9qro9gbw
Uvv30fQY/P2NCR9N2pPgy9eqg4+ek2jte9MF4no6KK7+YHczlkTtyUydMrY0
4D3wbuRMHK4ngS8ff7C0wkM60tpH4kn0Uoj3xlr7Nuhi8C5cOAHfn0u18Zli
E7BTG2hkSiTR4yc7DM+zZYHs64qfxjAHGXKZvYkvAGabpxcak0hkUv/dKJqo
hEzhs5+zkklkxmYf2GlPA6/3GLQ+SSHRR73xoaauCji6c4Xu/ALPI9S0fQVH
FnzZtEbfLPVf/7lvd+6zchqJtKQd2i0di8Fpfda7O9JJpMqqImma0gyiSlan
1mRg/3/c3/5ZmQEV508en8B8IMWUMUXlwmjdqbCmlyQqU+AOle/MhRErndVZ
r3C/+3J16BJnN/Qz5x4Oe02iS4f23a7krAMKSfRJp0zcL6qHbXaurYN/BBz6
TLJI5P5yxiToFh1EsIUWHckm0c2bC1cLu3KhQvby/W1vsF+LOkq+2dAKU40L
pVcw/5WbPHSQG0LmoyUNwzm4vgWLKvK5s+CfFBaDmlwSJf6KZax/id831DOY
lve/+v3IWHKig6q1LlsC8/83b6kN/kotAPJBz8/ZFZDoTudP//Y7xfB5OFuQ
fiHe//S7oUeubXDJqjj5QBGJGP8Vg6/vG0A9yErlKcbxfOpmtvFuMfxpMRH+
A/Os0ffSlvQCsMB61barhES2M4OGk3dp8PVNManit7h+LIs/n3GhAfv3e3qf
MnD8dRt2sGU3g/X+do5upSSSJKWahkYr8Hvx65dzZVifyX9livrwe/9BvhmA
eP44rDPO0U8Ab4Oi7O3lmA+8+XSuPxcc0/o5s4K5eYLDfrdAFmRLdt4yXEEi
z8eyg6Zu6cA2XkayCpFo/NqLjgY3Ogxy2rM3pZJEQr9IlQ1TFYD6Bnc5V5GI
2bqF1BXMgvm25pw61SSqvpLt4aDHgBtUlt8L1JCo9uVSxaheE7CsT46bxvx9
z33zXiGsz8v6emW1OL507roL2yDMsFsaC6kjUcugkJFAYTMMBJkOlvUkivdr
4dsw0w73y1p+lGnAfp7PGhfiWQx+p/EdY24kUfbKjskSAwZc/N4QTmHeyiN2
wdqLBstvera9aCIRNfCsf91xCtJcZX86N2P9M4c/lDBkwM3WE1w6LXieKVxU
zPZOh82Pn3ELtJLog+cH5W0+xTBZ78TKJGYvBnX42nAl3Ds33/+2DeuZzeYj
x3QD9P0QnxrUju8762VStasVXLuief5cB4kOBYzN9vjSoNS7jyuSBIm+ZCd+
/ZtXA0sj7octY/4gXQbWjiSB0CnuDa0knoe39b6yGMmF6EDsvTgK+08Ni0U+
/t3tQ+wmlS5cj/dioi+M5oKts9zaG7pJtEoL3htswoDamq5XBjEb3e7r4zrb
BFj39t7IxjPsRrpeEuVPg9Nzktc8e3H/5lpF2rR6uGfRSd/gHc5n9vSXdeO5
wJf2RmR7H+63jb8E9gfQgNHswOAMZrftasoSO+qgP+1vEOzH9fZf2sVtklkg
M2ajaMh7EkkLB/c9CiyG7W58r84P4HwIft5ROVEJXrqwCUsN4vo4YRyVeo4B
PYcm7y9hZv5PhRbX3Q3FWBiNTR+wnyPnsqbJJLjxoOuamCHsB4Gzc56MAgAK
xfZdH8bz3fE7xqGrFfDkYDlQ/Eii26pkRUNwPbRa1FRhH8F+7i4fYCiTBQ2M
CyS7MW+ZVpgImk4CporcbKmj2E8etgb2WDKgy5xxq9MY1mvi6TuvHtPgLsrH
R2OcRDdYnG5bwhp4V+TpLp4JvD5tQ9Ix2VbIKxqd8wFzT5nyOsSKAJB0l8ye
xPm3/MwSHkaHdZ7aEfenSPTq5KT+BisG4Lj2c0J3GutrI0xgsHdAdpmQvVs/
kehe6Y2gNeF0oCvCbjqBueGnSrfIlyTw0+OKU+FnEk2f7Fzr8YUAjIgX7g9m
8PzvWyq7WRHC8fS6m0ZfSMR34a3FfEQ61GdqOi3yFfd/7R0DB1+Q0GY8a+cM
5ik53XOfj0AoE3drgPENz6viXH8Dj0KgarfJP2AW602Zk3cmig5QVJSQyXcS
XewoCy6vroE3L83F7f6B3587HVjZqWYYwyuzfhbzyV7PyAdpJBSd0blePof7
F5ulssz3XOgnp5T3aJ5Em3db3Qv7ngQG9jp/OLPwz/9vz+j8Fv5JoqrciXrz
ugJwuyWPeQLzwuUC5/FnNJDEV/jrzS8SnfcveXU1ph5c4jZ4f28Rz6sfvkja
zyXBrHUeWeq/cX/89EQ54SUJBc+o269dwn6mO9of0FAA+2RjBCjMhRHH6oLn
k0Cc/OwIPzOFDuwKqnBJpIPznxpSQjZQ6EjaoWMfMmjwtDvD9ww3hViuPQJf
+RphxlvpU0IbKRSkdlRfy7YaVIzv5PyIOb6QMNbvwvOMRnROBg+FuHTla/1W
c0ERV5DWDV4KqV3zmJtZTYIWD5fr5fkoxCb9IEg4sx7qTn5WWMYcuwMe2O7b
BLrvmkdVbaLQqnydmHxWOviawDr+XZD6//hEXiqOLRGi0AmNENZ17wugePqg
muc2Cnl/b3j4K6AJer9yIzWFKSQ+mBoxfKsaiKUGGXFup9DsHf82CfY8sL1j
fXkb5qmYCZsPQU1Q4MoagUgRfN9EQyZmjmSo/8zW0mwHhapvhWVGFNbD6HSN
yO07KZR998sFsaJicKkuqGgE89onQ7bFRekgU0qjLmMXhZKa7KkTxcWAn+da
tcNuCkXu+ZErtjYPNL1cyjokSqErUWTy+O5G2NF2Ta9MjEKqA4Sk7HIzZNF6
EK+1h0LBnKzLb6U7YbR/xoCgBIV2PCy9eKmUBo7XfGL7hlmOTVRbVAPB+F96
grV7KaSgU3NNMJIBfYQbtsTso5C9g1IcgdlQynLFUZJCWkcWMsQdsiAlvJHQ
lKJQoptNQmg5DahOvwsWkKbQ9vtqULaiHioGlh6awTz8LrRU0pyADbP5VZX7
KaTxohh4oGLgIFilHH2AQgc3hCgK8lRBrsXRRFsZCl0UdLjRUFkPf/oKfVU5
SCHC8EHTT10EpzOv7OE7RCEvXvXZ93oIbrKrODGBeSv3mHVZNR1y5u4zKZWl
0LkD0lppjSSsv5V6MlSOQgszu1tPeFMAJeyXtpKnkJupshVtEwmbpWp/Hj5M
oWOnmebP19GB2NprmWsV8Pc9F/ew1RfDhxKb9QYxH7+ferVurA3+cWmjchUp
FFMyTJk10CHPZKi23xEKVXzrF2F1hyDPxizF9CiOB8tN+2ffaqDS2N5pSSUK
PR+T9jNvSgfWBquCK5hNmFOm9ky3QYewfnlSmUL0qswWC08IBuiMo6kA56Ov
i9OyJR2WGsbuvaeC9a2Z9SPDigDOaV7MeqoU4mvcEGGY3gTfP7CqFVaj0On+
lss2bXRwgNK+/U3tn56FPCU4q9Up9EjwYK7+hQ74yoE9KEqDQsxh6+QNH0Jo
HvRxzkYT681aI1ZQOA/ylJWcOHqMQhsgJU4RdLB1OiCAS4tC0k5+UQ9IGti7
ZJQ7iLmy/O4tOSodnuvircnRxvvxuu8OXCyAShZNyFeHQkVnDqeI/q4BxW4u
6WeOU2hzo+WiewiuF+6t98RPUOibq7P4chcNaK9kHfqF+d2karZgcBYE++V7
GnUpxAAu1fvzGCDJM+vqcz0KNYlk1vaHQGhJ8g/an8R60Y2erM5ngJG1Dmoq
+hRSTrkfc+NvAZziyAvmNqCQC0tloFwfDaZkjlQNYWayXQP2FDXBF12rH3NP
UWjsvLnZbkcCTl7mmPE1pBBnauUuH7EqSB1aHDI2otC2U6rEI6ZCILubLBc9
TaH0/8ZTagaKgSxPuP885qp1M8+CbiFw/Z2CYp0xzqfnqLvcBzp4d7aKij6D
4+FVxzWDecRGxszmPwpFuxrY5rIUglOj3g0KJhT6sxr+0pi1Fhim5+3kOEuh
7qxnvfsMG+H9oJorvZh5bGLnLfZVwWbrwicZpti/dv75O70vGaZsephxzwz7
aexKtFBcFmy0O/DyuDmFpl119bWMG6GdZlGEwDkKrQhH8YL17ZD/9pZrk5hD
19E8PcZp8FB+uMar8xSal5q97+mB4Mdj1Zz2FyjknCK9/LaGAbnkMqC0BfZb
Z+aToZPpUDxEzeIr5lX9ztdlbnVQ8vyjTzmWOF+vLpXsf5EFkjJpV29fpFBe
8+HOrvhqGBso1yJ76Z/+Sv+EicxjXomR2PcroRoI8MVaFl2mkPVqORf8TIP2
1JlgFysKWYiH0QT9EZzSYaQqXqHQro0cZf2H8uAZ1+bXi5jlyjYyn3qVBX7e
oMUzrlLo5Y/Le8p4CsEL2RkPd2vs10vLV2/LJcOy5qUTyjbYnw/w3VzkrYW7
VfOY/2C+KFBrneJbB05GcmfAaxTK6pA3hdmtUIrgPep5Hee3onhkNKQDai0x
SlRsKZQyryRE/qDB2C3soiuYT4cc2iSr0QLa9y24V9jh+39yUlWfp8HPijTk
ZU+hYvKQu0I+hMlab2dVHfD9NI/Pc1k3wk1nHnGvYp7xeqPCWpgF562XtyJH
CpW5sNzh6GkCQd7reLxvUCj8b7lHRxSCj5OL51Rv4vp2LUH0RTowbFupWcE8
lB3OIiFUCNJYRnwqblHIePTPQqAyCce0Lkp63abQoWlOpRvbasHck7uVKk4U
8gtUW/3R3wSVJkWP/cXcquJVWyxcC60eMYKX7lLId0+qoOxqPYyR8I7/6Uqh
o1IPlSd2FcLXt81uF7lRKMEXybCkdsDd6eiQszuF9K/D+tcsGfAgKvgge59C
9Xq86otjfTCiWM71+/1/+X7ir7qS40GhX7uJyKQ/JPwk1nnrhieFnNZKia7R
TgYeRdHbPntR6KTcf/sPcT4FI9FVZ155Y38ei42a48yAzOJ3XK/5UOjz7Ylf
QjF1UN38VZC4L4VyfahAt3UlIGjvlYBRzFazbCt3chA8EZh4O/kBjtdx97Kk
JwR0dbQ4cfEh7o93RTOlpQphWGss13Y/3H+0ljgfbXgKQ2LMy/oxn6ynd+xn
ocDPhmjTZ/44fp1h0fwbSyClZzhsQqPQ69V3ee1a7SCL399kUwCFRNOUk+iJ
dTBWQKGEwFyrq7StqhsCOe3LbKGB2C/2WOge4MuAj0PZ1E8G/YvHybFd1zgf
/eMQhSL3Oswiy1Mnt/zqgyNfUp2fBeP1sWWdZTTcvz8fPWsfQqGw6DtXCo1I
yFbotEP1MYWA26mpoY5eYNtkQPCEYv1NtbKyGycD+TdN10cx079zdE9vLYEt
o2NTRWEUKvjKJGB+hoQ9n+KNAp9Q6MeuIEmW/6qg6rG5xHPhFLIdUBSN2PYU
yjiM9khH4HnJwmX35JFCyDnmsLCCuez3JlM25lJouzd0mYj8d36FYu3plCgK
dQxxzonuaIDBayMqnKP//Q7jb9/XoeP8pGqibzsboN2XkR1bn1LI4bntkwOu
LdDKaSxzGvMTHoOA2o4OUJTmvKPsGfb32ouXh6IbQcFquHtIDJ531Oy8ltUK
4fAvpXKL57g/cb3V2nohGTKx3Zg8EEuhxUzbLVEvCCgQv+/3KuaMDxJtaV4t
0Oawww8iDs9bhdOasnsDgLmmfGdyPJ5nTJnM1bmbQbaiT6xTAoWehvwq5ZAs
wfo5dfJYIoXOS3K3RGkXggvp8SObkrC/blFQu6LTBXVYHC6PYV50ZLBa85WC
tI1vGwqTcf/bSfN8u/8p/E/ZZ7N/Cp6nzoSb6qzphpcXqvVMXlBob5demety
FhDO8romnkohYVhzI2JLP9zQlme/gPmTDv+NdtZuOFt7zrQuDdfLungnKrgF
lK7ek4xOp5Djhv0HJ/QL4cspjvGrGf/iK/iJM0D+JYXecs2xjF+rggxHNx7W
VxQKqW35G3M9GVoNmPp2Yj710jC0j7Uc7k9I6Ut5TSHLNRwM9iNPwTkhM0Gn
TApN7ljdXmaXB+6XuKhrZP3bX/v9n1M82fh+ck88h5VKYP6nKa0hzMpZbIcq
9lDgk+7R3W/eUOiBneGWp47JwPjCzIRHDu6ngRfQSFM39PZjijyZS6FAzjhq
8Gwt1BFz3iOUR6H+PreRRIlS+DpOO3kK86wE76zrrTz4xeAOS0k+hdZFbjOW
vU0Cz6fL+v4FuN4uRGxWPVcINrwb8DxTSKH1Simr9kE98JbjZvquIgqNdKdO
+WgFgOrCF9HfMHdzyT7a5lwFT6+jeZQX436s/maPpkwpjGoq1QsuwX54RM5n
G3Ml0DZQZzJ/i/P559zjB0LlUP8bf/weBoVonoJOzmsqYROn4q55zPYmho67
WCrh0zUWQ6Fl2P95+EdarQqhdLiF4AVIoZ3mYqNdmS2wZC5VaV859u8uiWDj
UyXQ3PvQsZ+Y5Zg6E40MG6B1ILNcTQXer/imjbJHHvw/SgHExQ==
                "]]}, "Charting`Private`Tag#5"], 
             Annotation[{
               Directive[
                Opacity[1.], 
                AbsoluteThickness[2], 
                FaceForm[
                 Opacity[0.3]], 
                RGBColor[0.772079, 0.431554, 0.102387], 
                Thickness[Large]], 
               Line[CompressedData["
1:eJwdynk41Akcx3E6jStJriel5I5ClO34bsoRI9a1tXIspRhFuTI5h3WkUOuJ
kcK2GDSMmXHMT3yNK/NbFTkqecbo2tA+LLuelNbO7h+f5/28nuezPSjC4+wq
GRkZT+n+qzNnwt5dn4V7LULJY1fY0ON67GiCBQuLxOGOTvFsYJ5S06k6xEJ6
w8igC50NnNV+IUveLPxAf6fsmcCG0Nu+HvkZLLRLO2MSlMKGWjefyszfWTjW
pjHNyGKD+qfbsyWsapSNVap8UsSGECVK2jnDWox4ryrOE7BhlmY3retTh/60
LrGvbB3oUQ7qmd3jYMTVN9ah9nVQvSLHS5Plos6Nqi162XUwJNdYVBXPw6i7
Z9v6h+og4hf1+a0DfDyq7RBYo10Pb3xeJWt904Qjeg0qw+frwTY5rD+ooBkt
Mtwla5rrQdzrvnDhaQuObfATsWQ4kJrJXpu2hcCBbOo+gTEHxnZf/7HApRU/
hURlDblzwKb2fHnYhYcYaMwPmIrjgAKzJ09S2oZlgzMjlvc5kBD4UxGtqR1/
NZGYRfVz4CX1VVLwOOJjlVZV/c8cWBppvJVO70AhyR+lGDVA+ETeiddLHUif
0jjy2LMBDulzJ79NEWJ0IoN5Or0BRMUztqafhejXOuUm5DbA/taO7GR6J44x
9hseei/9e8a0N/7VidEroQYq2lyoEtfrBAZ34W+uZZuZLlxIsPvQ3va8CxNL
LT5UMrhAM4vF1Ue60WvrcKV/MxfOnfz5slpFN87dSc3x/siFIerxh3rKPRiQ
uSh0MuTBxvPF1OnwHvSJNDvQEcCDsYBTE+oDPegW2FfBvMcDIhnqJGa92H7N
c44i5oH97utdpoxeDP6YXfZMmw9GmW81dcZ60fawgtEtfz74pjvELxg9wko5
2wpmKR/2vVKeMY96hDFFl7ZrTPIhX9nmoFvHIxzVVikyN2mE3p0urYpr+7BY
ZBHpG9kIBjy9dgVqHwZ2Bg2x2xuh+1YNsSanD0nnbXOr5Jsg9s9UellPHxpO
p29a7dMELp4xogeyIhzoM9BcqGmCwh2RK0E2IrR9vvFezXITVGuVr3tJE2E0
7wmx8n0zLFjb8YtKRHi41L6KyW+Gy2dyJ7m9IpzeburUrNQCVmM59eVzItR9
5vol+lILpEfc0AM1Er/rjJeUDrYAyXATPrEicaTlZNJrSwF4qchYH/YgkWKz
S/K2VADjMSMHWFIr7zEbZpQLwNulUl7Vk0SbHUpfde8LwOKAmcw7qa8t3PjD
r1IAZbXRzlneJLaN5jmPPRDA37nyp7pPkjihlrw8LhDA2wp9R9UAEv3ihMny
wwI4Gp5Ws4ZG4umMtvVyFAJMi7/Y0aTW3DZu/U6egOy8woJBqTtXIatTkYAo
N8Pgu+Ek5kas80tSIWCTgw7b4iKJIYtKsksaBMxs0JijXiIxkV5s98WAAH+l
mxtOxJE4s34HZa89Acfj5ztrpTY3KpjSciRguuGFOeUKifnVsSoyxwkoPbJt
T5fU5Tu7LB5TCTDMX/fCik6i19fFrjAvAhwu9rasTyRxvu2hJS+YAEf5jfOB
UgddZqbcPUvAy9LcNwKprajCzVnnCFhWUJ4NSyJx101jdX8aATni61WiZBIn
v4ojlaIIMHISl+umkKhzpvDzUjQB/5jYesVJ7Z1B6X8fS4BV0qJEL5VE7UwP
ByGdgPyrJ1rjpQ6wtJ+tSyBAU/GO61OpSyyNJSVJBFDnRwt3Mkj8IVZRKyeF
AMvZZWa81Pr/l4B/AYyNq4A=
                "]]}, "Charting`Private`Tag#6"], 
             Annotation[{
               Directive[
                Opacity[1.], 
                AbsoluteThickness[2], 
                FaceForm[
                 Opacity[0.3]], 
                RGBColor[0.363898, 0.618501, 0.782349], 
                Thickness[Large]], 
               Line[CompressedData["
1:eJxMt3c4l+8b/29FdnaZ2cqWorpupxGplJGGqBRFUSJlpJSiqKQQIRWpJELK
6H7Ze76WvTcZWdnjd3+P4/f9vL/+cTyO131f93Wd5/N8nuclfdHN6hITAwOD
LCcDw//5b1ci/sSToRp+ftVjnPJjIRVOa9m1bK6G7ZIm7xPf8GCFWSbCunzV
8EmOp4y7nA/7UFyXE76tGl4tOd4qOSmJKbTsNxmTrgaG//+vPJepSG9nNdQb
e482cguSHPe8Ug7Vqga2ntfar3apYzeUTj9p3Uesr/zP8cgpZeykd2HrdqNq
CJAsDkyd1sSuSe6WcTxSDVcCvCXD9flIEvKSjonHqyE/Md7lYMIsPprc+6HL
tho4H8Vxqz0XIN3r6e8UcqyGrbullHW8ZUn1Ao9FD7kS6922/iUgxI3t+6J8
xtvzv/31SGi8S/SrBgP3oBg/VhlsH9/0WPWjaih1E/qWJj+L8vWqDCefVUNN
SGwjbwwX6e5Dvk/ckdWA8fb2aa7xYxtd27fueFsNppG3HeRG+/CVW2ax+knV
sPmdynadxhmkGz6saZ1aDemhfI+mq3Zge78adTn8rAb8lduZGJZVtO90eoIb
qRqKXN8KqsXM4A8v33ngVVYNhkuxvdeVRDDX2im/O3XVcAN7cytiRYL0IP1M
1J3GavC1ZSHv3SeN9VxlpHl1VgP7Aez8rR5WUlCQstaNwWpY1ahutiDiGVAi
ke04UQ2H36w84tm/gvtvFXM88a8aBg6n/lyUFMNeZDnuN1wj4vkwfTMHExM2
zLAPlDfVgFnFvOV1F1bscUKL+xbuGqgp42ra0dmLh/r5NU4L1kBsxa0Pe9K2
k8rTz7s2iNeAU17yEzynF51MyNNNlqsBwajfDumfevGLCyXIX6UGVLI9DxZG
MGINb9J9LbVroFl51YtFUAkrz/sxJ4VqYK+YXIrNO1lMhbr+7Y9RDWRwDic9
eSpAUk4oSso4UgMXJ459iP4ghOXo7Oz1PF4DDfFmxVzecqT8cccL2rY1kKCk
VjbMyYN1X4lTmrpY87/8Rn5e0v1ytQbCWX+9sD0ij5lPJUbYedSAQnDTbck9
QqSvvYUYt28NnHJ0vv7TSwx7dN1zT96D/94P7em57xBcAyKTqT9eK20jWbYq
SLG/rAGZYyV6q0iCdM36kkBKdA18Gjyw/ePH7VjXl9zzh97XwO29fLznuhaR
7VNgHfhcA/cMqm5PfhTEBrn52O98rwE3ckuP3DthzCfR5CpPdg0MlV26vf5E
GNOSXlCOz68BbovzC2+PM5AEC3QsdpbXQIB7sOjTS1sx8jbx1sw6Ir4Sg8L6
FySxF9q/KnUaa6AzOMFSWm4K9fgKS+d21MByaI9CnuQiiis6MrBnoAbuOzpI
XWJbRNtMHQQzxmrg5leNnZN/eDHO384/FGdr4ErM39WrDapYnPblkpjlGrCd
Su2NSeXFelQX9n5lqoWqXb5ZkgV82KGJkqCfHLXwhLJPQDNGHlv1O/8N56+F
wq9uu+YucGKFJWdSC0RrgcPwayG78gZe+OTAs3yZWhCe7aWpmCpiCZ7JR3J3
1kKEibd0FDcnaVZAcPK7Vi30UX/cLOFRwkRauW4n7KsFBtWmyKlCcSxESnQo
zLAWTuuvH8kUESBtVinUv3O4FvKCf5QqXJtEvJoPnlywIn7/MFWmemwSTR3r
LDA6Uws7KuruRxYKkkKirEalL9bCv9YH3fxx8tgm3rNsq1dq4a5r+b+72Uyk
Td9vi1Pda6Gczia8g76GXjqLKH/0qYWTAVwUiV/c2AH5n7s9HtSCM+/KrH60
BHaqukQPBddCrVBfO9SwY2/3/TRlelkL2jZqMTvPMJHQ6aUTpdG1wGcSRK/7
+w/PYF13DnhfC73SQt1vd/Nj6yrqj9CXWjClsh9O45TFOrPnk2e+14J5+dwf
fVExzCoW7/iYXQs7k2j7YzcYSWcbhySPF9QCy5DnSNb3VcTn1uqxVl4L04+P
3rgSLk6y859vS6yvhU+nfsTftvmHP1SJtzFpqoWk9bCwt5GiWFia2vRAZy1c
kTxpnPVZGku1YPnoP1gL5zdfWb/+mhF7ftPHU3iiFsSuhR103TyObF4MOSbP
1cJP5ZHfRKGTtHYneOmu1oI4r0RB9ikl7Ccf4/cS5jrokJEtDxiTxd5MnuA+
wlkHOUYGCrJxY0gkazqinr8OPotFNsjelSdtuMiaHhOtg/Ym0aRdz1mwWkPd
HdXSdbDFUf6zqw8Lxhx8Z5/hjjoI/BAgwlPLRrL9tefeL406KAhYtDXdKoa9
vZoxr6BbBxmb40bOri+jHTc0P4VDHYjdv8TQU89AysSXQ1dN6oD344eiWHc2
jPuW+Y8Lx+rAQ4h/xdJWBAsZdxMqOVEH8R4Hd0i820J6/yUme/vZOlhZNOfc
ri5C0rzIFefrWAf9UpY75i+JYgfYGMrILnVQ9FzRY+cNBiwWT9OWvVkHEd3x
1821l/GWbvMJd986uKzV/WfeZysmw75tGn9QB7sOPARKMSu2zqVnyBJcBwz7
9Hp7/4yiwrWpvoNhdVA36DjBdI6Z5Kp6sfFxVB10TT58OX9kFpfQKBQrja+D
V2efSqRtYsBudOjkrCbVQZDUL9LbiQ088djcN83UOril8euIq7AASXRUcvVi
Vh3w6IamqxJ+s+dU9+ew33WQZXlN+eiBJcQcapuZV1wHIqXD9JYCUWxXfbZE
b1UdOK0qzynOCpE8PwmPM1PqIJZRYff2x7KY71y0lGxLHUhWGJ3dSJ3Bjw+d
zdPrrgOm4InzzzbxkrCa/ICuwTqI6pKWFMUXce6lSeU743WAewmkNJN5sKNp
H7MFZ4nzqHrYKb4aQd1DEYopS3UwtDlqc5SmAvbH7uZdPYZ6GB9PCP9bsQX7
FjyTV89aD1+59KxYgZ+0/3NJry13PWQWbFS5mK+jrxmvZwcF6uGxZW5xsIYY
afqy6IyraD2YO+nKvxKXxM4cXu2a2l4PZ/cf7GVg4sd4E0d+uyvWwy9d0sPX
k2wkc/+QkL+q9fDu5fc5Awo3pp/11Oyqdj2Qnx50Wd0vjtl0RzD37auHydX9
mdOZzbiL89GMkwb1wD4/4eqRPY3LPrA9VXmwHhTs7Y7qxrBgLoqOC3uO1YP3
G4Ei5WAWbKsCZ3iCdT24nFXm2O3Ngt0QmlXmtK2HM0N2ipybt5CenyWV3LhQ
D3erBAet9ERIC7s57GhO9bDL+GXyXuVm1PLZe17rej0I37yVp7tVhEQN/RTx
wpPYby7v7IoRHyb5RkN31LcefDP9GBvI2zDJw5l98KAeWpkVLEpfK2Juy2WR
4Y/rYd+OvdHt26bRoVaW4wPP68HxESXb4ArRkSZYxbUi6iHo0qGHSl+G8C9C
DjN+MfXA9NfFoC5SGIvn/N5c+p6Ix0n3ByFq20mTF/3r2D8T8eBlNdVIZMYY
nzo1Hkkl1gtbH7pZwYAJkZemQn7Uw1iYR9S2TBFM065CuiK3HvZEmFXa7p/H
D+raX2EorIeOhb0hpxwJfz56vGpPeT3cY7z4rkakCf/soGZ0tbYeBFXGLnuY
8pB6Fe+1xFDr4XOnhneOuxhGUqwPqWypB4sNC+M77zaTbBu/2M521cMVt9kj
+xLFsauPo8zEBushkCSmf7FQCFvxlTmvP1YPPsHFlorfhUgnaOSIi9P1oH6U
qv5gDwPWGav098FCPcjGBQ5PPWvEX1emucWv1UNBdUrL6+0y2BudYZEc5gYw
C0zS4HERwvgzrEfr2Rsg7Mbljur0ZeQz6j3Yx9sAOcwFKtjkBt7xgM49J9QA
2VTrfLruP3Rp87ADk3gDnHD+8s1HRRbjWFYb5ZZpgGgO95ZyTybsXcmOd8JK
DVB/4G3McggvxlV8/LG4WgM4sGmWNkcqYnFGSolS2g2w/cgxYe4zvFjTE+k5
qX0NMKYinf+gaQDJlefckdBvgLmmH3EO5QO4oezl/VtNGmB0MK70uRQ/FkB6
r73FrAFuTrJwqHyXwHZ86XLeZNUADKQPPqnM/Jj7RETrwqkGcP27WMpYPYmS
X+g8GT7bACwxDWo1m9hI14L33qY7NEB5yOy3ZW4u7FYDV1L+lQZwc5L2e7LI
Saq2kBH+5NYAQmLmlTKmA6hm2W7vtVsNMGOsYbeqO4d3rzXjmneI/TnLvvv6
kRHrUxr/MHu/Ad5zPDr/Vnobxmk3PZoZ1AC/ytTkPEP4sOAQvdduzxrgj+mH
FLe7fNjbvB1fdrxqAP03tyMMJwWwFdbN0r1RDeCR+HPI05YV2/dOlen12waw
c7tem7ZtC0mpcsLMNLEBsjSPe80e4sPUu2KYFr80gM24o8NejBETtw6SS0oj
4hlneujWOC82l8WQZZ7VAE+G8EY/v0X8QpJN5kJuA3RJjT+/8YQZu9fXvf1t
QQOUfazQU/SlITbjXgb9sgZIJBvpTbowY+kFX4/3VDdAtU4Eec/uRaR+8Yno
PXID9D3nXoySXUQGp8tObmtq+N98eG8shT2zvQGk+f9cTNlFw80eBmqb9hL5
lL7hVyxPQ3GfYlrahxpgzZzh+KhIPwpe0VpwHW8Aa8nzPygFElilaeTLlWki
Hif0y6J9x/Hrt9mSHy/8t/7b0Ho9vrUGuHJT6iw9lYdUck5kpxkjGX6v1l2I
oFFxUvLuWzwsZFD4y5by1ksE077o8KCBlQwqQSc0v+ZQUY21gfkLdjJcKvbj
fJLCjmX3uHUf5SJDszOHnWiJKOa/GKrFyUuGn4N/jv8Om0F8MnqHKvjIILil
lPFY2Riy8RKXCxAkg+PNrspLDJKYw6fKkv0iZKBvg4oGi23YyHSP0tw2MtBG
tqwtNXJjzzWZrVPEyTAwjA+t3hbDJKi1xhekyKD+RNKAhTaPH21qWxeSIUPx
0bKQ3M4NPLmpyr9KjgxdbL9PyWAraJZxT9UdRTLYd7+dZN65giYlfrer7CTO
dywmw5J3Bmk/nsvuUCGDRfMlLlaWMZSqeffcU3UyXNkeVdihLUhST/7boKtF
PP/U/JBt1x88kG+Ia1CbDKTxg4FbOxmxdoVloTAdMpRsFfT+Ru7FOfXKxvbu
I+Jl/ejf0dJp/KBxT2gfIgPbR583y4y82GxJ/0YwkOGTKbNhbgojptHuBBqG
ZPhS4Xj+gNsyfsGE5VjjATKsGNrdjd25mbTf1kLF5yAZ0iTXg0vvcJFEOPrb
xA4T+7mq5KziLI4FdFmdIZmRwe2+N9P2IH7Md2N3yllzMrgqFvnuN+DCMtRl
6lctybA5NdejT5ULK677VhJjTYbYtQM8t45Mo3761Wc6p8gQbnGONTCbjTTX
MaVEsyGD1vSNvIFdvShflPbmmh0ZZqe99EuTt2K37JO6Wc+TIWoFRYnoC5CW
JFaW4y8Qz98PzDj/ZhTfccFpfLcjGUSfq4ae2TSNmzT5ZdVcJoPwvoP/mpZ6
8PsdZgeir5ChPOz0niIlIUzfJsHLwZUMC+1X9HQ4BbEBBh1zVTcyBOub2+31
XEPAVFrzz50M90I+qFyvZCC5sDFN4p5k6H/haKODE/PU7uRfAV5k6HzN8YAn
fQoZqLkrHPQlQ1vYgPtU7Ry+iZdPj+MumbjfqWM0dkJPHrBe40+G1cLG8p60
OZR0I9PpWQD5f/Wh8E7qzpFAYj/3ukX4PHtQCh/ay/6EDE9/VDrtc2bAVs7g
CWUhZNAVgCvPb84h8jPrnPvPyRBgaqX+04KM6+rm+O4LIwOyd5Q0PcmCPbse
82fmFRkKL/3xFjm5iIcWpW7+Gkm839jfmnNgBPUYfWw8H00GOzsZTgZVIex+
sLqVYCwZDLesx5fs5MHEvzD4V7wl6sfhA+sfgVX8i06lnc97MvDezvJhYJjD
6VZ7xnckkqFU+/in06Pd6FzUsmprEhme5b6Qz+8XwK4qlMo8/kIG8n67039b
GUnSSQY1u1LI4MLEu9e2jpG0DZNW6k4lQ/WIS9aPFxsoIm7LvuB0MkylXw05
FbKC6y3gjFo/yLDYmUneEc+M7WOl+bf+JEP7ldMsEr7DqHLzRpZ/Dhk0q732
x+j8RR9Lxz/I/SbDqPETZ3ASwh4GHTxYSSIDdxOPbbgTM3ZIJi/pauF/8cZn
J0mcJWRoOXat/uU5Piy260VYShkZFO1zFF03sZPOm5tIHq4kQ64Lx4Peai7s
+P7fTsPVZHhw6rkxx4d1tEs66trDOuL5bBkONYZN2H32AA1JMqHvKNeGVhlG
Um2QbEY2lQyXvc3fX6kawj1/yUyZNxJ6mr05U5TLSgrSV5gcaibq75TJt8/l
LFjdaXqKXxsZ8qUt5VdnGbCAfOoOvk4yzIRFR2s8nUeapHLnj93/7X9N5cSV
PX1kcI6IiTtDYcDWPGRUKgbIkFXNw/GWsoa7P6BmnBwmw9+HVZE2pE48pmXz
ysAoUa+twRpv6jmxr0HOmz3GyZDyiGVRIHIC91OKaFubJEOkwIkwvgdr6Nmo
qseTaTL80/d47ficARt+1NzAN0eGR1zVI46qgpiksdbcm3ky7FqKGk7YLYCV
sHR3b18igz5PjWXsCT5Sm9q98E8rZBgTvVN1QJKbZFrwnVd5nQyWcj0GRRx1
aMlQ4EQaAwVqPrmHhIvOoCstBx01mCn/O5+0xjiWsYkC1dkjSW5MMyj/WXyf
xmYK3NuVf/4BqQOPLlm1+s5BgfmFvZccv64iBezjCxVuCtTtP6f3pouPJP5P
880XXgqIRwiEhSuzYTYjXOJLfBR4zSS9IHRyECU4e0aYClIgLHardyk+jeL4
h5mihCmgQa7LbspgxHw0+50GtlKA1CGXbKU3jp8tGCrREKOAwXt+WvAAK5Zx
yU3ET4ICD4qDXI++5MMU7i5fLJeiwC0bp38tbINIiWfTZ14ZCuwa2WlFucOI
CVE4B07JUUAl+dGohssiOqH2VPSdAgVMm7UkLvWykHhh4/CgEgXsSdnp3+gs
pJ+1/bd2KlPg3Yi7TMrNLdgfy6zY66oUKGrveU82mcadl8fwDHUKzN00VMLD
a3CtxE1ts5oUiD398x7bwzHE2H5nVlubAvvD5v9e9KjB3/ZVst/aQwHM86xT
/YV2VPntskSWLgWK99jt2h3HTkrrqleb2UeB4PDqm3ktbCRBsq+eOvZfPp4+
7TdzAQp89NxG3TI3hS/VPzjzyYACXet3jzXy1iBrznqnHiMKmP8W0X+30YYf
vaR/a5sJBWRIlV+9/3Jgp39aPLQ0pYD1P8p4XM0UXvv49qsnhynw9td0nE3D
MiqR2JGYb0asl+e1Zl/Qhva6dv+cPfbf9w9LbKlRtKQA25oQKk4k9PhCs//M
cQr4B2D2nWOzyK0ld/3ZCQqsLsFl7rAt2OFCScn8UxQIuHbluvUdIWy4vNFg
0ua/9eylra9K2FEgTXyn5l7LP4jlN0/0kXMUeAazLdkG1ej2bt8ab3sKlFBP
k38kzaKREY5NSRcp8Mrdo7FHpg1dG9A2Jjv+t97fCZdny5cpUBsf9F3roQBW
HiDbLnuFAoU9p29w/GtFMc31mmYuBJsczUpRZ8AGWnrCbl6jwDSp/Nqf2Hn0
d2ft4hs3ClzdMSyRVdGKK+xkvlrg/v+cf2xhoP8mBYTGL9YVJrfilfvFr7Ld
poBozSBTR0wryv3Qu7TDm4gvdTklkLSKxO1yI474Evo+9q1rXKIfPXcQ3O/q
R9RbTtP57dV/UfAVh4mn9yigPESt6WSbxd+2Cn/7ep/IV7QAl5ZlFc7SGu9V
GUABw2/Fp6SDWDC+gy4Wg48ocEe7b9f2B3+RC2lsD+NjCnyreW28t4MJEw57
oSweTIFJnXLf75v5sbG6MrU9Tynwt9P4UuvmKpSsv6Zv/pwCLrWBbzRDOLBt
1z5edHpBAWGW15XG45XIP3xHxL2XFLh/TMsnXOgvfur7cmNEOAWyxEXPT/Iw
Yie8A5W+RlLgLP11OJqZxHMu6DzLjyKeN5IzTe6ZxFli7zJS31Dg1Iz/WnZS
C4ItZU8GYgl9DBf+OLrCjCV3vLwuE0+B0OIEg318HCSe0AHs/HsKCPyVsErx
WUR6v00WYhIo8M+9TPDX1RZUFG8Q2/iRqPfXjx802G7GDoic28n7mQI+xsO3
Xp9cQeuf5ZIOJlNAvXOIS01vBHV4S3D5pxB64j/XwTfIj42fJJ//mUqBfd2X
yiK29uF+WaXv/3ynAIvpkY233H0oJPlBg2QmkR+eD21RzC2Ife75uGUWBWy3
kzuE/lXgCotuiw9/UYBTzef20jgjFliYOpuVQwHP4T5O1LKA0tZruwby/tPH
fs7jeQIkCvAqKa28+b2Ayw2VBhkUUMDqNHPa2dQKtFnn84HrRRQ4IISvC4Zz
kJ4evTf3poQCMduEkqq/MWL3pOtfl5ZRQGyEv9FFlBnTOS6qMllBgeHAO37O
2xmwJeWhLOFqCkT+LZOR8J3D2eKzNPVqKcDB+F4HcTNgIwc2JzrWU+Ci4wNl
RskJtHTJgT2ETAFWcf2dV+Z4sTNTBy+lUSlwcPGra44DI8nnrk42hU4BGy2K
eirGgilZ/tiYbaLAsfdCnZatq0jgDAKh1v/O16J5/PbuduJ7qgVV915vIDMJ
7yTrTgrwqK1t/64xjRi5les8uv973uzt2MSLXgr8zk06s3xuA4UI7938rZ84
TwuJ/0zJPP7q2ivxikHCTyb2fuf41YTTjG4r9w5TQPdeS2cabRZFD1/cvTxK
gY7VnRZSlbPosnXTPv5xCrQ/3hfpFFqOJHYdQzsmifzF+W8+/KAJ3W07uA+m
iHynParW9WzCpcz1d1vPEOdvPuL1/j5xXzTKUnWeI/y4zkacD1/Hvbdtl7sz
T3B4grZsJhsW2bOx9fkiBUozJZpfR68jgdMNXPHLFGDaFSj6ZlcTEppkZ0hb
pcDdcg8/LJgNu1G4cxZfp8DOuqwsAdEhPDfu21A1A/V/5/dk4GhvZqJC4VT3
ZxJDOX59G4ncz0IFn3HPX+92zyKWcqicZKVCoPyJ7vRrU+hMJGfx4mYqcHZt
sxNsb8QfVbzJZ+Skgtm1ofK39f/Q2lGHfHZuKsx2ubP5+C6itJqeoi28VJgc
80nZusGEmUWGVAnzUUHhkcE2KWDAAjNaGsUEqBAbLvG2w2IRt2k1HJYSokJk
8JPdrV1MmLm3/rqMyH/7DftmKia/jQpHzdYtkD87yfkgVU9BjHhf6uytANdN
2I6641cUJIjzxPpfdrcvw5tvGcXKS1GhWHfpjIt1GS6nKtIoK02F8/KOxjdM
N2H3Xh0QkZalQsz0sHDOCDNmVGUvJShPBYu+zqnsECbStrbkvayKVLhiSipS
kx/EvfRCLy8oUWFvam5y5LZB9HeH36fhnVTwfWtyS4FE3KdDepeaVKhg+GJ3
RMnDDXScXeVCmRoVTvLXyafQVnE39qqOTA0qHH5/kzF6jI5+Jstfe6dFhWtS
1BC9rctItDSN/6k2FT5q5ugYwAY+M0Guu7WHCpLnq84OrowiR+/F+PO6VLCz
Eg2pmRhFgTdeBpnuo4LOzHe5/O5RFPyOLVADUaHSk72hBC2g7pDyGBE9KtiI
c554H0dH4Z57K9eAyFfOwJL/Szp+zLaGu9+ACu/JxwTiq7rwmeUhlwojKggy
9PBXcrBhprXzfV+NqWDA89rc5gYd99l06ebzg1R4W65f/qNlGtnGxEq4HaLC
6lp4sduZAdwZsfSZH6FC34KcVbA5HUnYbi5SP0qFe5vux15gYMbE5fh+85hT
4TT9gpS56RLu+PAxedyCCj/7Xy2pJE/jt2XpjNVWRL7CdaWPyc3hGdfOm3+y
psKJyAzZiwpdyCzkZe6Dk1S4tLJLZrmOCcu1p+rbnabCUGp6jfWmUfQlKnhw
9xkq3M/V2vVlaRa3j5T8wmNHBc0aG6Zd7tNo1H/xydDZ//R0ALv3hHSeCos2
qzFHT8yjmzeFP4dfoMIrW5Lp+ew1vPWJ4qCzAxUCQvca3/i1GXP6KGKEXaLC
durjE0V5JehFqlnRFicqWN5OPugyxkJiOqpi3+9MhSa0c6+oTycuOS62/edV
KiSxGDaWx9JQ4c/7jEGuVFBtfbDy6GU/MnxdwHLyOhWYe1HT9OFO5LIf2yl/
gwpy21Cg2F0azi90zmPWnQrfva+aW/X+Q7PWQZ2FNwl9fWGrojv3I7a/21yf
3/rvPEFv/CRtvIh4SKt6p1v3o4A6vn+yPlRISPP6zjA1jl6Wo6kJXyrITOr6
RbcwYGcf2m/J9qPCVMKnE84si3hUWfcJ/3tEfbmu9tap0PDD/BJFJvepQFJ5
LM1kwYENZfhacQdQ4cCPwwL3hhmx7+lnOGgPqdDfIxMm6/4PRXVJjkYFUuFh
Smuw1OV/eGqD0l/bx1Q43q15LshnHGl0tIpLBVOhRmz/57npGZS9PdyjN4QK
j7HdoYYjffjtez+nEp5RIX6pv3vg6DhuEPshyiGUCr+1pO21Q4Zx9r5sJ9kw
Qm+fjnbb1fTh4QGnL/S9pMJIgfvyqO86zujR/+h9OFG/2+KF9l6Ywlev5lDP
RlJhXuHa2YI0Kp49seeIaBQVBr17nYyTinFh/fzJxmgqcKSWreGjY4jj7HvG
mzHEee8dNgzraMf7WBpteeOoILD1o8KhkD5UyZS89vUtFRS7cl/Jeiwh+3nn
YeN3VCg/9Dxii8gw3n78wrae9wTzzW1WlJlCDI5d4T4JhL/E+bQGOvWhuwdU
TvF/JPS86+P706FjeNnwa4evSVQojQk6bHayD78hdDXX4DMVulIaDZlYppDw
1enTLV+ooCw3qaJq3IfyTnkbXv9KhRbFIJmwhDX0Tv7wbeZvVAjlandDx1bQ
06mMuahUKrgynvCsleTAur8uk5S//6eP3+Ju1Px0KsTxXT/eM7CICw7YaFlm
En5yUywFe/8XNXpu6ur7QQWTmCAfbo5ifGYr3njzJxX2mZVPZzH2oZdTFdtY
sqnQdut53TBRD0IzHl/Dc6jQoVF7LmG0Db//h/WJTB7hd/X6nPs62xD73brM
9N9E/d+583nDdAM1yG5R1iNRwTr3+xabliI8Rn3rdHU+FcpKni0aqvxF8xVq
m04VEv74JP3ogsciej4W59RXRNRnYtOR7OZVtO6WsvVaCRXYNuQ2MrOnkTFT
4taFUipg9Uyd0d970V2FWqf75VQQPV/d+OgzBR3RdWNlr6TCo5fR3kb7F1H1
VfpcWBUVvDxCN65HUVB9pdGurTVU+Mfy+JfsqWVE195UHF9L+Itt6hH3x9PI
4Ir9B7l6Kkw/OaC4Fziwk4txlOQGot6FOoOfehXhn8yYjqtRqOCfZijwqI8V
S/nSLJ9JpUIQu1kIyYmCn1F0PLybTsTrq8H13kMM2OTvycLsRiok3nH7xsHS
hsS18oP3NhN+EJBsvN+XGburti0pr4UK9Syzgs6m04hXzURgfxsV1IciDn7Q
n0YFQU/pee1USPNrNOjRpaDbTuqjezupcGNgd+erxAW0tcXLMqeLyF9G+/Ga
m/9QfO5X7j09RL2z24eqX92EnS7nlvzRS/i7wuxgjP0/NPZyKEC9n/Cn+leG
Q8YsmH2wL0oZoMK4txo56OgmzG6W54jCEBUyJeV+o6QVpDg1kvZ+mApPt2LK
omKzeKPPUWfRUSIfjLQ7InOFOOb4wCv8D+Hf9y9wvhgnI9OzVR2c41QgCy7J
cQ0WoqnxK9EPJ6hQ1TV7c0ZwE2Z86/PX5UkqMFnE4K1TM/gXrXIB9ynCL2yC
DGvMV1Dbfg760DQVUjksH+pUkJFYQPaY7SwRX1629YaCKSRG4bMlz1GB/VTi
Pwn2zZhXg53MgXkqFGWEKPNlkPFT6+0G2QtUWHj/g/R6fRGvz6Xm7lgi+iG/
QJNTwhRa130UErtM7I9VUVUsdgrtCVwiK68S9XFItXdPeCFqtXI8/nuNCu75
5nWnn5LxuOJt/Ic3iHhvYR67/3AKPS++zt3CQIOxgNJd3+/0IG2eHONLTDR4
3/jJvTG1BVWoHf49zUyD6Lj1Om3ivnXqjs/1u5tosN78tEwTX0fUrTHnN7PR
/lefR5c3Ql9tpgF9Jn3+c8Q4ztK7virGQQON/RybjY9OIZLdn+SPnDRwmV97
aHlsBr2vEXqtwk2Ddy+qP905Oocen6EX/eChwdrb1HtLRnP41k0+qvu20ODc
fPie0/rzaCPyZGsB3/9Z74spUuzBuz8VlB0QoEGbmPqnTKkp9PM962ylIA1G
+uwi9kkO4KW/714wE6aB59fFM+zbRvC+jdt8DSI0SClAko3cLcjvwAFmy200
yGjpOWPNtAkr0dDRoYrSwKbe686PuQK8b/+HVCtx4v3djcau481oSyrtMlWC
Buo7jfzP9C4gUqyUg6UUDc6SXE+4Vhag0L+NCQ3bacAR6uNvUTOM6uwPKhyV
oYEp8z/luep+XMG7dKJKlgaljrtOOf8cRtiLt0vG8jT4WZL4qadgGt0iyxwu
UqDB5xoy7W3sZkxb52P3fiUawEF37ry3/9D8C/e8nztowF5Wkfv5bT+K8m5r
U1Mmfpfcgvb4L6Dz9moGn1WI/d0zDcx9OotmH+MTkmo0CKsJdy6+MoyaGek9
keo0uPNokJxiuYR2ZJaIcmnSICL2zg5ZkyW017wt9oEWDTZp2+eJcDcg4QuX
Hed30SBGaOMaggW0w/CX59XdNDiqE9rVxriGdKW21nXuoUF8GsWr7mg/7rHQ
es1Clwb3rAMufZNqxkPjDp0q3ksD3z4zn9OoH41nZgXv2k+DGwVnN431/sGH
Mpw3fUQ0mMlTbFzbOYuK+jOrBfSI/MpXHD/7th4vu9TTGgA0yGsJT9GXZ8Ie
KOntmtangf+flJoLvUOo+O/W5nOGNPhmtDHwLukP2rAildUY0WDSlt/7zuV8
XJjktaFjTANj9ogOiz/M2HvXiEeJJsR+FinKt3PmcTnP8yd4TGkwaBrfT8K6
cIk8OQ/vQzQ4vdnFSO1jExJYUm/vPUwD64kCw7BZBiyroDbssBkN2u9pBtoK
5SNFd5PwzKM04J+Sn1gp7UO0AyN928xpsMzc7vJhmYTmTNb871vQgPKcvf1e
4xTCTpOvDlnS4OQGvya33B/cRe1b4pHjRP3ti3T5/G8FTR5v35luTYODfR42
KgUMpCtKXxgET9Lg2bNSh2Phfehbj5281ykaML7uvWqfUoeqg4zetJ6mgZ2L
4J2Hf5bQ5uXnPbJnaFCXPxljfYe4fzdioddsif2tnjbMv9mHTsyEJvyyo4G8
R4GcqmsfimQnSWycpQHebC9sy9+ENLOYGQ6eJ+Knl7X5OPs8UneJPxRqT9Rj
ZNVa9IkZNPy4cpl+gYi/rJF9xaFOnGxEEhBzoAGrxMeLjRgJ5eZkR9g70kDu
nl76jcFBNNozczfpElEPPdI65TozOHdUcsPoZaL+WFIv/Lk9iq6+Fg5RdaYB
r6iWiA+2gpjveKbeuEIDpsynmZFMJORUtLb3x1UaPEnocqbP1yKTinH1fy40
+HP9zhnr9EZUU33nxZ5rNPD2xd75GY2ioLGB017XaXDB3OZxIa0WL99x8Vm2
Gw3Kr7vJSFV2IEUn1Z0LN4j41vQG0f714mcv39fa40EDPT6NR9GT03hoTUSS
502i/hdDDa4mdeDy4h8fZnrS4IyhxYEU1lGctWC49u8tGmw9vkP+eiiOYlej
H6h40WC7Y3nBSgCOT65PfXD2phH3mQHhl144yqYoqX30oUGf4BNZNddx/MZF
H4VuXxpcEeJSjDcdRN73xZ5u86PB/o4XBv4nxtFyx0G743dp0DknbbzrMI4f
59SJeXaPBjujJ3fsUm9Emfeljcv8aTDHNXrE/P00SomAs2v3aRAXR4s9K9mI
t96v6tMOoIHHpLWdgvUsOnFhodHl4X/+7KrNqJPw6D+eaJNkbQmkwdO4rxle
d6fRka1PjLgf08Dtuq17uccIfuuV51+DJzSgLn/OdBinIyaqGMftYKJ+CFHJ
DAyga4Y/w5NDaFCJTZh0N9Tg7Zrezzqe0mDXaaPwDBod96fEzvE8p0G25cun
jHljyG33qVr9UEIP719qnCwZQG3WvQIeL2iQ+OhqyBeTXpyBw70mIYwG318Z
2rq8GcNP8GOz1Jc0IHPXl//7OofjPH5PmcJpEMX+Js5ibhJXfugYoRlBgx9y
PMmpyoyYbrMKj30kDep/Jlm/ZBhBYyc4l56/psFVAWPS7oVhlKW658TvKEJf
942seyYW0PyNfpmRaKJeDYq6br9Zwr2EDl0UjKHBhOGZ+QKj3/jCXJyAfixx
Xs/9g/j4KmKuE9RxiSP6i9VZntdNjNiU3lBt5FsaNDJ9reKxHUBWZJPGgnga
bBMcbnq1rQb/8sfFYvQdUf85aR+tjhD3z/YQPf4PxPqmH839jOiogN7ybl8C
DbBHR7/dt1lHD8dDPC8m0sA27cHT1pfDuJ5EEx78kQaCbF65hXdnUL3xX+/0
JKJ+zPpfSLS3oegdnMlNn2iwMWlxu5Zcjd48G3o8/5kGtYMrDpuFBtDYn7ge
oWQaGCjXZiTheeh16vkf2l8Jv1E3mo/NrMbT5OwZjqfQINXneUL0l2qc+XFD
xY1vNFg9tezf9f4f7jjTxR6a+p9ecl0Kyr+mEfU20NydFVKNxrs+rJd/J/x/
yOPJU90ZtEUqO6MvnQbmumMnh2//Qe5D6j1rGf+9H9aEQrb+IPTwNWhMyyEP
d/PmSdfKosHzB97XbkrMIDXUaGn2kwav3sx8znfvwV/5FLld+kXMH5bvjM5l
9SO6GzPHvWwaBNzP0526x4KRjGu2v86hAe1MX7KdVhuew34oKzWXmC/WCr9f
tZlCHRnfSkvzCL/dNbMm2T6ENosrWLX/Jvzc5CuFKawfjXEP2k3jRPzihK/k
cuahOe1tg6z5NLC486pSiqkafVWY+SNWQPiN7ne5K7405G7/7rpGITHfZMxz
mtOn8aqDFjcOFNGAhzLI5jWYi/bs1J46VUyDw2q3Xf+1t6InmO/k1RIaNBiF
iz2T7UHv31m63C0l2OE7D0vVKMJPjl5+UUb43+LdZFykB522vNH7vpwGx5d7
bHf+asWDLwu1Z1T8F7/nJ9isiytpcEmsSUyatQddLvc0o1YR8RpP6aq7PIRc
Dz0r7a0m9ATizKEq/Xj+KT98qoYGRX6XP914PIpLHL+pvVFL+J+zsUNNHgPG
EPROhbuemK+0C9zSRGgoTVY9SbSB0J9MfW/Rllm0y9QiXpFM+GOc77tW9lmU
tKixVZtCA92CqaCDNlVoTGaDX59K+KEvgITFKM4VPxJ6hEYD6ci57Ga3ccSx
U+zZSToN9N3JohbPu3HhG6UcFxppgFyeWCrxDOG+TPycLk3/nY9qp/ncs5kG
3fPu9jMmq4hlwPzl3RZinlD5tvn1tlykNhQjEtRKg8viib3BxLzDFAvbQ9to
8Njt1pdItlb0UNYlJbKdBmoGXGVv11vQkZDDuXEdRD8PDyHbC44j+xKOw4md
/30v9lvL2eQuYj8fRztqxbvRSe7eubRuGuxgxGT+tS2i9NcWvFk9NLi5WbMs
nrUbBfcfT83ppcGjfN1Ag6oWPMdbpAHvI/RyaDfdrbASzy2t8CzsJ/pt4JGg
xOxKpLn9ZXzJAA06DrXh4W1dKLrunVn5IJGPIXUmsU8jeMSSlH/lEA0cgj7F
cmSMocI8bE/1MDH/OY00fo6oRH/55D1qRmggHBq+6vl2DCn8YdxVO0oD0dcB
OcNiayh9K4NP7R8aaD9rlV8IXkGzbsJrvWM0CD5/4Lyxewta9JiZmh8n5i0D
5tNTZwbRucoaa85JGtS4uqzEncvBWxZblaT+EvODur73p6tdyNrN+prWFKEH
u7M/Qk+MIX4fDxnjaRqYfT6G6g1bUJmxi+mpGaIe1zVpywe70KvhW93Os8T8
+9gg56JGC77peNWwzxwNxl2D1ncr5iDf83EXQv79F++pcvmjMfPE+x2Z0jtF
u3AuhbivyQs0eDgUU961mYq7ru72zVkk9jfsSc9nasFff9uBly8Renwj2/19
qRkx+KXeoC/ToDihQvTuXC86GL4Q1btCzAfnyn/mTfTi7OuY1uQqDdJuGd2l
9M3hu1N+wfIa0U+7UGla4wISvRZVuGmD6McvyatFdlNIdUno5xYGOsyo7fMq
y+rE7484SYgx0kF3ur4+KXkCvc4uXpJjosNFd1/GJ2W9eFC57WE1ZjqIm6iz
DeRTcBkbZ14dFjpcLcuWsH1fgRpfSxyCTXRID5IceBrVjC+EpC+YsNIhj6n7
VHFoNp4rd1LsGBsdPo8Ieq4HVuAKOkZZ1pvpcFutd5f+3Wzc1+db8Rl2OgQ9
bki9FDWNOoLKTew56OBycI+4uc0f9KurTP8SJx1sbjhuVXSoQJ8GutKvcNFB
/Sox/p/JRhE9xlHXuOmQW/W2u8NyGLWvq83d4KHDn4lWDjumKVzOor7iJi9x
HiGm4i/62XhR1Sn+21vo8MAxYlpYNxv3M96gefHR4WuQof61lQ5EfrDI5cNP
h8PRA8w/GmYQk4wXyUeADu8/qGb0nuxFW9LSBn0E6aAyV7tevjiK2l9RA32E
6ICbXvzC8nsGKcgIx3sL0+FC/fsEpawZRHn1Tc1LhA56D5WlxCXmUBxDlc6t
rcT3rnQ1n8voQF9c43M9ttEhROta0sVHf9FW0vksN1E6JFtIk0L7y5EXCZRc
xehwE3Qlddub8KeS7kLO4nQQ1uTxev+4Aw+/reDnIEGHl6bTaTHVv3A9g1d2
5yTp8I6c0ni8+Bfe0T3067QUHVZoTrv5837h2m9OPrXaToeWf0dP2W+aRp1v
BNqOSNPhQKdS98MsRmzrnHniARliP3dPxlccGkeL77BhJEuH++5qfi+gAw+4
w/NJW44OixLhFJGXv5D/4bluZXk6qC1E9GQPTaG+X9sjZRTowHS1KwVPn0X5
FmVlWxXpwCPdf/5F2xRiCxXw4FEi1pO72HifTkYKNSiGeQcdGh1W60qZiHgc
9tBbJLg6ZEgtd3EM+e0ePDe+kw6CLCVdL043oeGY8pVuZTpYXZJ8E2bRhLYe
YGwsVqHDlv2OC8v+/UjxCSNKUqXDpxH3cxkGQ7gq61+Nx2qEft8i1V8pZLzj
0PQPZ3ViPyfpdFgaQcM16mWHNOiwZmbslHJ8Gf2apjju1CTyefu+4E/3SfSZ
e+MVhxYdqq4WP4q9t4CUz3eZ/yH4/9b3Q/6o2KpddBCx5xiKnllF2w0sbn/R
Jupr0pRbKbAHvzWt0RO0mw57jmwqzPTvweVF7Fsd99ABY34vfXJxEG0KZ7lo
qEOHu5Y9LUd4ltGmXca+Urr/rR+QaSqzSrC3dcmbT32DSChv95mWvXTIcNrl
7Nn+E4/u1pLJ2kcHrutBv3uY11HQp8u+L/bT4dL+uy7idY3ohf/CxauI0IfU
vVlvazLaVMXZcQAj9Fuq1kfPL0PJ9VWDknp0iHStP13IMItGqk7dXyQYmvh/
vE1vxL/0tqdQgA6Z7o92P0kuw1/t9HP+qk+Ho/b85g4Fa4jt87lfAQZ0MDra
du5K7CBiOJgcecaQDq6HX2ycjyjDL448YNUyIur9ETqaMdWGN57kYWc/QAcJ
19RDNkGNaPyI59tugs9127jdaOhDAm6tJT+N6XCDScX/ceAESjjh4PfUhA6p
yqlflVynEdtDnQr7g8TzVbp3Hl3uRUnOdz7uNqWD6pkIxVCHMrRxyVqQ4xCR
f/cPr1R+TuLfK4eFuwie0tEezT+RhK7XnvmWcZgOnac3ZQhYTON6sVT6oyN0
eNTbMLc+VoAsj3qGnTL7L/5bRh27dxz9j80dqopWCPb+IkDLChrCdd6V69Qd
o0O81Le6rY/70KnrDwzizYl8/LZayPKbQxlhkt3XLYh4PqvjYSxpRjlZxVvA
kg6GW++qmd+iouter5p4rOiwkbBnSezzGHJ1zNToIjj/KpdC9NE2RP1nIpV6
nDhPtOhbJZafuGeEZ8Ida0L/1SFW6n7dqCzqfN6hE4TfdMg0sg+OID4TFSeR
k3SIfZXcKanyB99LX/8yQLBdbAQWH9SMc19e8c84RdRXV+3tmr6PaDePyfjd
03SoSRe9Uk+eRyL1TJOHbOjwVu/xp4CJHrTz9YlAoTN0uIPV2qQT8yHd+GJm
D8EGYu6K39gWkUOK2a0UW0Lf+58Z1xR9xI0f6dbfsiP02aifgn6Xoj6/QyQ4
SwfFBhuFrt5RNKyRaMh+jg45Ne8sfd3GcSblK+eoBMsYFwxm8Pfh8oP5W2LP
08HSRD7oyO5h5F5ZYeNgT4fXZjsarItacQvVz3uVL9CBT4ZqOXm4H3dXVXNh
vkj4VfHAA83nA7jU0TvS7QR3irCvB+uO44+P/bbLdKCDpLVU6j+1DvxXh6hE
sCMdypWsvjUUDOKCz8ovnr9Eh4afu+i27qW4Ztsf1d2Xif5VU8bGHTiK5lSz
7nE4/Zd/j+ZjJ7oJ/rZzXAqNNKFzW4YzfjjTYeFomYx87CD+c+VLxOMrdDjf
Yaq1wd6Ps34qXDtzlQ6j57w/iph+xC9sOjOh6kKH/o1GU2ODARS59N6BwZUO
022bOsuKmtDEkSJ7KsEZ02qSD4/mo+jvQwOJ14j3dXvrbYy6kGsRmvK8Todn
Zj9UjkwMI9XNfwOM3eigM+g/b5U4hDzmlN4K3aBDaI3npm9bSxGlRwgGCfak
Xm7+x5eFV/H1Ome500FoUDLRiPMjWvz5U/ShBx2GxrW29rBOIqmhfGvLm3SI
4Mm+9+VuE+JMUhSR8iS+9yfDRvV2E17bLXpxnGAovek/O1KHqq6V7M69RQfZ
Y6NmB5yaUNgWs1eBt+ngaLAt0KijEu317Pay9KLDY4HZgv01JCSn/mVI3JsO
ffccsrxsKbhuMblrmOCABeGM9IYfaCr6oX2mDx0SjruFy1fRkCH7mIufLx2u
7xl8ePgwBacd12Q0uUM8f1BKN35XE2L+eH87rx8dvhz41+4cVoc38TJXNxNc
SWt3lfpegiSj+9be3aUDx+Bp8RU/Eh6odAh3ukcHDY2XCwUhI/iXKPtN6v50
yD652/FHQAvO/Nmq9R/B5hcfP0rxHcHZmA/p4vfpYN/25jqvBAU3M7omE/CA
8LM59abopUZ07c9I1MEAOtQz5IbuNapD2y8PRnM9JPzSlD/NYKwRP8v7TJ5C
cHtD+oGbYsPo7E5WvchHRD92kFXZ6kbDE4b8+k4H0mHHxh6/MudEfPjcNgHx
IDoknhDOyhAg4f5vWMhdBKufdr2fXtGIbzx22vbhMTFPxPJ659mPohg2l78X
nxD+O39u7OKFv2ipR8dKLpgOclgZ266eHtypct5gkODVSb8tMkY0nHyWnJ8U
QsxH7gHNI4iGGlQmKi89pYN8La/LHpc/KP/bLXv5Z8Q8UH7c4uXrQfRJ/1Xg
AMG1iebnhuea0QcdF93E54TfLCXmaU5UIKdaJZ8LoXQoHtV2ZZDsR9Xyswel
XhD9VbWwkNY5jJ6cnPnYQbChWbFgi+EAcjt7LOxNGDEflOwJecf5A9eTV+c4
+ZKo785vvDqXB3GeQJyf/xVRX69HAm5sZOITIPm1juD0iur955aKkdYmP/KT
cEJ/0XXXzWeLUfquFXH9CEJP4bf9HVnb0C2XttV5gp/EyCRlq4zhhoxwIzWS
DvtMW1PPBJLRV51jXg6vifUCefdo3ScjLVDl3xZFh3uLWvF7ng6jzXsYDeoJ
Tre5+qF/RyPuovSX+WE0HSazUqz51HH0bIu4rc4bYn65YsqVJz6Ispu+mYwR
XGXJOHIuPxPntywvj4+hQ7DQ6C66YC0+ZfS83TKWmAfI4lbhj3vx0QsKgSxx
dHj6Ro9LPqAXBRz5VfKLYJY/mUr8qwN41osLUc5vCT2UMoiJz6yg2BQzBtF4
Yv40kRVWYlxCbzji1qsJLlmr+zQSmYAesHq+uvOODs027T16Qa3IY3jxt/J7
wv/a+VfSG37jXAPH7rQTXGv/1CxPpAu3kI4hh3ygQ0dMG8MW/0xUlbn+e28C
0a+UL+Vf8MlEUTHvsRGCian2/a+bCcixKvHE60Ri3h9TXBBK+o3uSqqwHPhI
+IP2YuUVZyre53T20DTBr4xucfuulOOaF23l45PosIulViz/aQ0+lXMo+vAn
OoRVLHU+P9WHEKtZwjzBy5tVtmrHzaG9tECjhM90+F6tyOvdXY7yokT9jn6h
Q5r1p357mV70Jk/VbJHgsL8xpZ0XfuPvXvb9SEgm5pWPTZWMHzqR3wW7H2Zf
iVFui5NQZddfxHAu//A8wWZTxh01eDm+nqzs+y6FDqd2WTNXvJlGjqcqDEy/
EfU3ODH1e7YFmThlfZgieNzlxei+15P4WJVQTHQqHWZ9ProcR7Oo9ByPsn4a
sZ5ITU611G8UNVdoPUzw6zINr5+WA7j9IQuR0O/EfNJQFoZbdKIQjm4P7XQ6
nCwTt/E1pqNi+gunNoLvTzSdvbmRgetqB/7zz6AD45KJWMzhKRT8sVdcPpPo
5xqBNg3u5agorKKzimD5hwMryqoD6OlxG93rP+hgqxOw19ymG7Hp5KrwZxF+
O3FiywUg5q1b7L9/ErzF501EmEkDPrDHtf/0TzpcCdbnKCn/gxdFMn9aIZi3
XINZkJeOn4uZZor/RdyvSMICufrT6Ax2ehmy6aAQMflQYKQDMTrZPOsl+Gb0
T42hT3no3l/h3IAcot+2nRCyS+zBe+Mz78vm0sHB8KiGAfsyYlc91l9CMM3h
x27fr2Oo3YCz1yGP8MsCc6vg70VI6RanL/Nv4r4gmx7m4V+Nlx67kZZA8Hjq
c+o+rRk80sT2ngFOh/X15vKSxA70qnRitJvgjCBVg8T6erxs+6HpuySiX3JK
53hG9qKgxNAIsXzivGefyvnik2i6WEEvjeASrmGFXpyGXFtGw/QLCP9G7taz
h9rQX9LMMyrBt7WtXi16jOM5BnZajoV0aNPqvvxsfzXOoWDw4B/BO+yn800+
0/Cr0rhPUBExj51XoCbYduC3uobFRIrpcNq64u/H6L+Ib7XL6TPBfM9G0hTN
xtElbvysTgnRb4psCqpE8vC6N2/Wygk2rJaQCHjWjzNKvDp4spQOlx9t7wuw
78KXWAv3DxKsP9r7TXFhBufDsbabZUT/uDWmd8iqCLFFyssyldPBj/WzNb9k
Bz7S9VI4jGDjgOGT/aYU3LQ9Lkuigg5aXBt2ea79OFeh/dpXgtNeO0d4OdHw
9OyFKZ1KOvj3ZXUeaqnCmXvvvCgl+MLvQOGjlFY80pyt1aKKDgcnz5ccr85F
BpxZdR0EFzXz3VZp+oMit8Rdc66mwws2Ib+LUcMow6I1Z5ZgfMfbg19kM3Cj
jMDv92rooNyVSwlLG0VJXL8t2WuJ/rw2H8h1YRBv1gx/F07w6BWrhr1DnXj4
gOIbiTrifq7ETr+yi4ardb7S+0zw/sP736Zy9SJq5cQLjXo6mNx1YPhOGkfW
h6ye5xLMPZN83yqwCrf917rHsIHw72c5lHy9f7jd6fhn1QRzlnEweS6n42Ez
OaFWZGI/z1vCbdM6caW9RlgbwYrjo79Jqo2I/fXJ6AsUQm/HdS7I4d1I1Jnr
/QjB76qcaqJ9xnAF5nvWblTifuR0udnUox21fy/9+Y/gFSWRoycnptFGylLJ
HRqRv/FXXssqzUh65x5/RuLq+E73wHOaQjNiswofDiK4e+PctjnKe3Raf+ca
ZyOhl4lzjKfaCL9nFSwMIzi+f69N4/lO5PHtioZQEx083jSKcDENoQAffJtE
Mx1YO3yz0/8MoC8sf3JlW4j7ZO8ANpnZgzT+kkM/Eezeo2plU9qH4tdy+Ha0
0kGbS+S23Nf3iHUszzCFYHWNjyXFSWT8hdNfadU2OtRxWWs4fCjE27e6fU8j
uPVZXd3tvH6U88ZqTL2duA+342y7E6aRoW9mYzrBVGvV9efMnUhA//N1zQ6i
H4yU5S+UNSGGy4d+ZRDM612mHppWiqzsMr5pdhL6WhxZs3ycjqc+WbDMINid
72vqg9IWfK+J9ieNLjpE5f/my+ns+P+YuO94rL/3ceAlRSJlRKlQEZmVpFy5
i6SQbBkZDTStkKKiiCKjlOyMJLK3Y++97tuMbMkIJaP1vfzx+70/fz4ft/s4
57yuc53rug1wHHkQn4zuLwy1DMr+ArcT5wzFP2P9ubs22tllAJrbYwoS0c6u
TfOnnlOJR2BS475+KkWH2aFUI6YaWnu3SqSj19t4Trp86CbeEn2SsgO4vt9u
L2IejUCN3DZqKZpf69acp28OkUqd5FYepFL6bmw4axnxifDuvP2vGS09Gpru
690NYRubnugNYT3k+/lu/90vcOEPT1ovOmP7t95kl24yrOt0/9Iwzt+s0HVA
Y5DYO62d+oJ+0s7ib1Q5A8KZfX9ujlApL5znuLwNx7Be3506hz5Vc/981NkR
8LeZXec4iuP/sLxx3XwaqlQs/i2jWw9cucBzIJIozkUF3x/D/p96/Ur9uU8k
6lZp5+ovVAoD+/r82UMj4EqGch+jFx8Ie3yV/gI+NXvkGMYx/oqYYoSFqGBr
H33FC31rz8hnZ+Ec4AtwkdzwFeuLV5qydbu+ELuh5nBv9Mmyc2sL2SJJCG9+
CssExqMgd40sVzc0TuubP0c7mztP1G6sJiETtUUbJ7F+y5jfsYthhFRGiRQ8
Rz99XNa1Z3Ur6Lx4Y7xxCuvRz3tqnJe7IEb8QIwPuj0iWEf+50q+ZXvOPE2l
DNx+w1gxU0ZSR89vf4ZOTrd8qjxRRibf8p9b/w37m6k94a/6swmr4lPBJ+iu
5HfHInpGwfJPchT9DO63tROdEW2UNH1NLnNFr3qj2EW6BiCeN87rL7rlMkve
yboR6IhM+3F3lkq5ECgt/1trBgaufKNfQCeI2OQUfuyBT+fv5tnOYX8qylTb
XVRGvHStOafRXE8eMI+VzxAd8WnOq9+pFEddKd2o8C44F7WJDKH9PtOPv3qQ
TPQsfjAY/8B65qrpOINjMlktkLXUge762Hnc5VYEybC39deYp1JUcp7pMd7/
CmGjik216D5vlTL/mAFSuKCarvATnw8lSWpBu4is3R5zjKAnjpvXuahGkJO5
FrekFvA8hCdec3/aBvuFMhQT0dHNdZfd/WfJvYzYst2LOL83kXS/HpSRuuVQ
ibZfWA9Xtg6dkqoinOFDj278w/r+gL14aFIjsbqv/LIdTbfAs56/9Su5E/vs
/PFVNMqorC1H1O4yUNAoaI5Hr7KVb6S9DicXs+Z/s62mUeRD31oq+iXB4j/l
3nvoNdF6Dm+za0nquTabYfTlju8Xhvrboa0gJk+VjkaRag7i6vj3HQ7r07Iz
0O8/Gl0WrxkDvb33rm5fQ6MwSaas0grrBr09iU2P0M3Ogi9FL4XDkvz9r1/R
Kkd+Msn5dUPSDYY8DXoaZVA4Zudx7UYS6XpBLgcdzsB/NiQ3i4Sef+W4cy2N
wuvxk2t9RiWcLqq68hgtFvxJaeFYI0w7Maz/iiYS/E/8pBvJB4XrZufW0SjG
4WFyzr2DcKmR0SoDLUIezHWFtUNp6fz+rQw0iqI3B7HmCyd6xUofXNAOfJ/S
WgJG4fYFjs4BtOCm250lmwvBYK9NviIjjXJ447SjFVMSYY+y045Hj29x0KYE
jEDm6f3RzOtplPmL3+IUPg4Bh09RnBW6oLvUzftHA/B0HrzYiubzK/owb5MF
j72iW6WYaJRNmj12j2+0g8Di7qVXaGm2xynTu7qhyKaWtojeyGyU6N3RAGtl
Ey0NNtD+/+cNNN++1Hx0+RnJF79Zu2ExyiF1OzONEtkSlWanUQl64V4WLujl
7lNtJXlhZDxKlNqL9udz1XmdHgaV1bcXjrHQKOupnVsHf9YAN69jSxi6/4Te
w93CY3Aw8fTFP+gt2ppvIqUridfNv/FGG2mU6z9rLuUzdUKh3sf3+ehZva2f
fopkQZTuNeNtrDSK/V9xKpfaMMBZ5bo7aCOpae4a1zBo5Lz4rR2tEjv+M/P7
GGlxrayV2kSj+OX2nkiwK4Blfe8LAega8ScCb280kHPG1XHf0HL7f30fzakh
/Kd841U30yh/lgbfS7n3k39F8xfj0W9OtOYW6A7ChM0m6lo2GqVPQtvG9ncm
cC19/22G/laxXCO9kAmHvmb0FqBna5we2a2aAekWC4et7DQK53GOveqKpeC7
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
dYNlu+SakiMk/7uWn5jKKsLjCuwi+4lVhQNuLjtSC48mqleWHGag9dOjzxg8
QZD5y2pMkTjiyUTMS64Y8L35/mWxLtlvqWXCuikNYHdbT0+R+Pyh6W0KdhUQ
xJ/QV6Tzb38k9Uf19xF788Rpf1uWji/vFUgr1Cb9KIvG9/dWFfh+r/LUf793
/LD9pOcPlXz8XNN8XYEWmV+Pt18cf1oEtX5XJPZo/bseX7KvcJ4m6e8Cj4TI
Hq/AzzKif8kT85vE+r8b64KriTmV2RokP6Hy7FPhRRDysM1hJ7HJl7uduXOB
mPv6178Z6gz0qZf+K2GkDnrObHXfRszHU5W8clctzBqe70tTI/Gzda1lpXc1
GGiXikoTK7YcOfsnqAiP6ogaJx9ioLil8d1oexKkmCbYSRDvZyjM94+Wgp+T
sm2iKgNJF/e1qky3w8VH33W3EHttU1e8JlULqqUd/M8Okv7Kwu2rx2AgfB1v
axImPv5A4s0ZfQqc1n89G41IP/B44pZRZx0OVlP7IEAslB4pKyCaBMo2lXrh
Kgy0dTzhHnN3Gj571SF2DfGubAu7MzsqYNBOl/FQmYFqg1yFrjZ3QZzS6S/c
xJHdw8zVQknYe/jVQgAw0AGD9N3jTzrh5WvTdZ4HGKhTldpaokyBXrl7spMi
mY/i2zrYeZug3+Zw2+Q+cl5/Rd4sys+Gj2pX+22Jg1p9dt/mzMf2Gl87RxQY
KPU235ONudnY7WhnpiUxr9qms3fzo4HrOM/Vvr1kfe/X6/llZcNuxfSNpsR5
PKOG2qz5sGwwI6dzD+lv87zW6Gyn4P6O9dv0iDNjRDR3MifhiFOnrpXvZqBg
1/DtLGmlYJLc8Gw78fCiL3/V73J8sNgsM3YXmUelnY/I/M4DLyXB5zzEDoE3
LfKT6mCwb4WLpzzZb/nVca/FKGhX2b59Wo70T7J3dr+PC8TuK/0bLYjN3v0R
Gf7SCHGfRbRadpJ+8Y+GbsBzGqT7fklRIn7fweGAIkuh0XXFTNoOBrrWGPEq
daoR8s/Y8gsS7z5pv9AVGgiTY9yiAdtJfmeKCNNZNQDeKUy8P7YxENcL9NBb
uQE0VDXe2xJbPiy2Ur6fhkv0ByO7ZEk+W+/FxB1UCl8d2uXVZf/7vbOPggHh
NOjeJZyZK8NAy1Zu2CYbRsP9So08W4h3RtXktYbQoPrSEbc/UuT5PjZTF+8o
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
                "]]}, "Charting`Private`Tag#7"], 
             Annotation[{
               Directive[
                Opacity[1.], 
                AbsoluteThickness[2], 
                FaceForm[
                 Opacity[0.3]], 
                RGBColor[1, 0.75, 0], 
                Thickness[Large]], 
               Line[CompressedData["
1:eJwdznk41AkAxnFKOXJlldikjNtShN1SKhspZyY2W451FEa5QmNlhI2idHgw
FpM8mGgYM+OYn3iNe36PlCIlz0RFoX1Y9rGPjrWz+8f7fJ/Pf++O4GjvsDUy
MjJU6f6rDfe1k5chG3G7IsjDFzkg3Q//mGLFRp0k6ogLnQOGn6Zu9X42Vrkj
Q67JHFSt9T+z4sOGiD6lSk3h4HjBKe+bV9gIzwg1C07joMTTtyrrPRto05pN
z+Zg7u+C+RL2fRglqVQNFnHgq6KYcda4FremNSR5Qg4maY6z233r4EDrkpyS
rYO+4j6KRRkXgpS3thFOdShfVeBnyPKwkFu9lXK1DoMKjUXVdD4MS8PaBp7V
4eK9zYvbnggwrOMcVKNTj2nfVwztvU0wNmhQHw6vhzkjciA4vxmbsrwm5Jrr
MdbrtXTucQv61PzFbBkuQrM46zK2EpC95va90JSL8Z25v+S7tmLkTHz2My8u
LGvDyyPPPUSFqSBwJokLWWZP3gSrDRVDcyPWFVzEB/1WRGtqB9NswiJ+gItJ
t1epIePAE/VWDcNPXCyONN7OTO7AOCl4rmjSgPDXeR5vVjoQMaN16BG1AfsN
eZMH00TIu5TOPJ3ZgN7iuT3mn0TIbJ3xFPEaYNPacZWR3AmljB+M9083wIGa
0N74VycSViOM1HV4eCCp1w0K6cIb97ubmK48JDp+aG8b7UIBy+pDVToP0RaJ
WHuoG6nbhqsCmnmgnbwTp1nZDZmSyzk+H3l46Xb0IUW1B/SsZZGLMR/a4cVu
s1E9cI+xsO8I5GMs0O/15ic98Ajqr2SW8cFjHKibsOiF+Bp1QVHCh8PO3C7z
9F6c/nj17lMdAUyz3m3RHeuFo8MGk9sBAgRkOtOXTPpQoLCnkskSYO8r1TnL
+D74FcXu0JoUoFjVbp9nRx80vlUvsjRrRKeBa6vyun5wxVYxp2IaYcCntG9w
60dYZ/AzTnsjum/XEHI5/Rg5prewRqkJkX9eTr7b04+Ds5nfrPVtghM1QfxA
VozFfqMtSzVNKNSPWQ22E8N1dGNZzZcmsLXL17+kiRHLHyRWf2rGkq2joKhE
DBeWUzVT0Iy40BuTvF4x5PTNXZpVWmA8llNfviCG2VP3zxdiW3Ap+jrlgCaJ
XzvpE6yhFjxK9xQN7iYx1XIy9Y21EMfVZWwdvEmo2X038Y4lxGjCiD1basou
i+H0ciF8XKuUNKgk9uqrfN1eIYSBvYXMlNS8pet/+FcJUVp74Vi2D4nm53nH
xh4IsXJDya/7JIlZTcaXcaEQU5WGRzQCSVCTRAylYSEcozJq5GgkPK60ySso
EthW/NmRJjVFb9x2SolAbl5h/pDU3DVgdyoTSPE0DimNIsGMXu+fqk5AzVmX
Y3WeROyyiuyKFoE5Na0Ft1gSrORix89GBPxVbql5JJF4L6+vaONE4AR9sbNW
anuT/BntIwSmG15YKl4k0Xg/UV3mKIGyQ3q7uqTmGnRZPXIjYHpz/YvdySTC
vi53RZ4g4Hu+t0X+Egm59ofW/BACzkobF4OkTohjppWGERhl3XgrlPqAm2hT
9lkC8sqq85GpJBxumW4OoBG4KcmtFjOkf75KYlTiCei5SMq3p5GwDC38tHKB
wD9me04kSX30iuLAdCIBm9TlCcplEjZZ3s6iZAJ3fvVopUtNs3aar0shoKv8
u/tjqe9Zm06UpBL4efF5oUE6Cf9EZe2cNAJ281+YdKn1/i+BfwEBHtLd
                "]]}, "Charting`Private`Tag#8"]}}, {}}, <|
          "HighlightElements" -> <|
            "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
           "LayoutOptions" -> <|
            "PanelPlotLayout" -> <||>, "PlotRange" -> {All, All}, 
             "Frame" -> {{False, False}, {False, False}}, 
             "AxesOrigin" -> {0, 0}, "ImageSize" -> {360, 432}, 
             "Axes" -> {True, True}, "LabelStyle" -> {}, "AspectRatio" -> 
             Automatic, "DefaultStyle" -> {
               Directive[
                Opacity[1.], 
                AbsoluteThickness[2], 
                FaceForm[
                 Opacity[0.3]], 
                RGBColor[1, 0.75, 0], 
                Thickness[Large]], 
               Directive[
                Opacity[1.], 
                AbsoluteThickness[2], 
                FaceForm[
                 Opacity[0.3]], 
                RGBColor[0.363898, 0.618501, 0.782349], 
                Thickness[Large]], 
               Directive[
                Opacity[1.], 
                AbsoluteThickness[2], 
                FaceForm[
                 Opacity[0.3]], 
                RGBColor[0.772079, 0.431554, 0.102387], 
                Thickness[Large]], 
               Directive[
                Opacity[1.], 
                AbsoluteThickness[2], 
                FaceForm[
                 Opacity[0.3]], 
                RGBColor[0.528488, 0.470624, 0.701351], 
                Thickness[Large]], 
               Directive[
                Opacity[1.], 
                AbsoluteThickness[2], 
                FaceForm[
                 Opacity[0.3]], 
                RGBColor[0.922526, 0.385626, 0.209179], 
                Thickness[Large]], 
               Directive[
                Opacity[1.], 
                AbsoluteThickness[2], 
                FaceForm[
                 Opacity[0.3]], 
                RGBColor[0.560181, 0.691569, 0.194885], 
                Thickness[Large]], 
               Directive[
                Opacity[1.], 
                AbsoluteThickness[2], 
                FaceForm[
                 Opacity[0.3]], 
                RGBColor[0.880722, 0.611041, 0.142051], 
                Thickness[Large]], 
               Directive[
                Opacity[1.], 
                AbsoluteThickness[2], 
                FaceForm[
                 Opacity[0.3]], 
                RGBColor[0.368417, 0.506779, 0.709798], 
                Thickness[Large]]}, 
             "HighlightLabelingFunctions" -> <|
              "CoordinatesToolOptions" -> Identity, 
               "ScalingFunctions" -> {{Identity, Identity}, {
                 Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
             False|>, 
           "Meta" -> <|
            "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, 
             "Function" -> ParametricPlot, "GroupHighlight" -> 
             False|>|>]]& )[<|
         "HighlightElements" -> <|
           "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
          "LayoutOptions" -> <|
           "PanelPlotLayout" -> <||>, "PlotRange" -> {All, All}, 
            "Frame" -> {{False, False}, {False, False}}, 
            "AxesOrigin" -> {0, 0}, "ImageSize" -> {360, 432}, 
            "Axes" -> {True, True}, "LabelStyle" -> {}, "AspectRatio" -> 
            Automatic, "DefaultStyle" -> {
              Directive[
               Opacity[1.], 
               AbsoluteThickness[2], 
               FaceForm[
                Opacity[0.3]], 
               RGBColor[1, 0.75, 0], 
               Thickness[Large]], 
              Directive[
               Opacity[1.], 
               AbsoluteThickness[2], 
               FaceForm[
                Opacity[0.3]], 
               RGBColor[0.363898, 0.618501, 0.782349], 
               Thickness[Large]], 
              Directive[
               Opacity[1.], 
               AbsoluteThickness[2], 
               FaceForm[
                Opacity[0.3]], 
               RGBColor[0.772079, 0.431554, 0.102387], 
               Thickness[Large]], 
              Directive[
               Opacity[1.], 
               AbsoluteThickness[2], 
               FaceForm[
                Opacity[0.3]], 
               RGBColor[0.528488, 0.470624, 0.701351], 
               Thickness[Large]], 
              Directive[
               Opacity[1.], 
               AbsoluteThickness[2], 
               FaceForm[
                Opacity[0.3]], 
               RGBColor[0.922526, 0.385626, 0.209179], 
               Thickness[Large]], 
              Directive[
               Opacity[1.], 
               AbsoluteThickness[2], 
               FaceForm[
                Opacity[0.3]], 
               RGBColor[0.560181, 0.691569, 0.194885], 
               Thickness[Large]], 
              Directive[
               Opacity[1.], 
               AbsoluteThickness[2], 
               FaceForm[
                Opacity[0.3]], 
               RGBColor[0.880722, 0.611041, 0.142051], 
               Thickness[Large]], 
              Directive[
               Opacity[1.], 
               AbsoluteThickness[2], 
               FaceForm[
                Opacity[0.3]], 
               RGBColor[0.368417, 0.506779, 0.709798], 
               Thickness[Large]]}, 
            "HighlightLabelingFunctions" -> <|
             "CoordinatesToolOptions" -> Identity, 
              "ScalingFunctions" -> {{Identity, Identity}, {
                Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
            False|>, 
          "Meta" -> <|
           "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
            ParametricPlot, "GroupHighlight" -> False|>|>], 
        ImageSizeCache -> {{4.503599627370496*^15, -4.503599627370496*^15}, {
         4.503599627370496*^15, -4.503599627370496*^15}}], Selectable -> 
       False]}, 
     Annotation[{{{{}, {}, 
         Annotation[{
           Directive[
            Opacity[1.], 
            AbsoluteThickness[2], 
            FaceForm[
             Opacity[0.3]], 
            RGBColor[0.368417, 0.506779, 0.709798], 
            Thickness[Large]], 
           Line[CompressedData["
1:eJwd1nk4Vd/XAHBJERFlTvU1RKKJIkm7UfPkSiWZypBKoQxRKVIkJUlIxgxN
pkz3nnOX6YZD5gxJkcqYUBl+Se+67x/nOc/n2c+z99prT0vZ9pyJnaCAgMAo
fvz/tPaWQuZPLKms9Txqx2sBbWrRnSGxOJJKt1x+W9QC+9c9PzWlEEd6pU8s
1eO2wEj5f6oqenGk/qOx0qy8Fpim1r0s0DmOPOo5Z5eT2gI6WmXH6z/FEb/8
thiN4BaQ9Ym9pF8aTzZPJaq4sdBDDt8CwhJJrOfbqrSuZogqZ/UpRqSQ4+Gi
8tXjTdBl5Gnv4PicbNFICmxXb4KfLuv3Ki1LJ0Nro3+W2bwDW9mnAdVxmcRs
zb6W+PBG+Pj3gGamXzapihvO/fmpATYbKxnXBeSQ8K+brE6pNUCZsvjlhIt5
5OJUxBGni/UgNTd0IlK/gIio1g4KvK+DQ8duRZpKcYiLV31nkkEdVEo84mnR
FOn8PC9z0/NaKLD+UXfYhEvSfFTrddVrobzP46HTBJBeKc9FDw1q4FO7rpc6
u5D8ne0jF7KtGmp3eTtzrhQRMZGNs9/tfAtNWpYdNXrFZE/aUNWoZRU8EM6k
77wvJuLZEpJbQyrhc8255rt+JWTkr/fssFwGTDPlxY8olJIB6ntD/mgFiP5L
V1HILiXVZZk5YSsrwMRIQCV0E4/8/Xbt72GPchB54FgvDjxyq+1GqG19Gczr
X7NPh7wh7j4mCTEaZbDvXFhqePobkhytZnv07hvYqWZurSJXRiyW9/5wFngD
3+3Krdb7lpHzTllSymd4kLKwe8brtjJipnh9a353KVQ/0rrRoF9O7OU+itpa
loL94McZVrfLyeBLLeeL7SXQ+3Dm8v0N5cQ9m2rRcSqB+0Ux5ROKFeTy6eT+
YyPFoMlldkofqSBilSv9pG8WQ65l4LSskApyoH4Pb0oZ/fKRi25pBbleKlH8
NL8IPrsl53wYqiDClvPzDcyL4Iy0pEPWfIa8H37/8uNYIQTc9dKP2MAQKkv8
Q2RsIQiOClmpWjBEZvSKDdlTCLu3BT1V8GCIjuzBUbc+AFrijMsF9PXyMfWx
boBV1Sd/V6M3xsvlXPoKYFGZu9jPkyGTM717r3cAaObHLOnxYsg/s7aMiCaA
5sJLdJIPQ1xk7J7VFwMo7TVm9VxjyN+5wVV3ogHks+zTom4zpCjg44T0PoCD
bT4VvWiv968SvXcDiHXMj1gbzJDZpqq5n3cAuPfLGL5DRwUkSGdtAajO6EoW
DWFIe3psziEDgGu6y2Ts7zHEubDxQoYaQF6RScCnBwzZt2s9K/sPF0rEHzio
hTPkVd3qHvUJLjQY2o85ot0mNLuiRrngxmtXGUYHP8wV9R/mAv1pMu3vQ4YI
q0otPNbNBW7NHF/hSIZ0L43ZotTABRWbGr+PjxkytyBtovcZFxI3H10jH8OQ
d8sDqi+mcoFzyiLyIFrbb810wWQunPYc8CxB07KFt+fHc2EOIxSR+IQhRyTP
yrEiuOBsF3XoUBxDJF64izT6Ybwr1CSvJjLkgQenSuk4F7x4+ovS0dvd1Dxe
m3Nh05+Mzo/oAq/pV/cc4YLZyWFfoySGxBi2Jl9mceHJk4uaY+ip6DbTLzu5
8Kinc4lFMkMOZYgqluhx4a1g8rzvqQzRUnUp50lyQXih2iypNIYEfJCKCpXg
Qv/6Imo1uq1NhHN8Nhfyrp6z9Eb3iULfqDAXrj9bHzzjGebXNeuf9j8ajBdF
PRR/zhAD65GRlO80nDfIO78M3W20KNuzn4aYzH2z9qKNWQVFO3tpUHSc7n4b
7Wjyp2LgCw3Ox1U2zHjBkJpwlRt6H2iI+744ZAAdb+IY2cLQMBEcYiLykiEz
U1INXpVjfy8r36miNY+f1/B/Q4NpXau8Odqhx6J/ZTEN6r86Q0vQFwSV5oUU
0CCy0dc06BVDfJvK35ml0mB/861IAtpfsXn7qmQaFm7Y4VOA/iMTNHN2Eg3z
xT7EdaN//n56qjiWBktzuc6N6QwxOq7N04mgoTz82eZu9A8lPZ5yAMYnWhE6
iRZo3S3V4EeDRrV8uFQG7ueEi7n+12iYMeWQvw5NnnPFen1o+NcV4BqI5jxe
25HjRoNozvCJx+j9GQI/T7nQsGsJb1Y6mte633LhORr2+xa5NvDbNxttuOVE
Q6R9LVs+E/Ot6qRsbUODAG8jXugM+ebrOyprRUN+xoEoA3TGrPuq1Ra4HgFO
e46itcetbxgdwfxrb9MMRzcml9n9t58Gz2kuJxPRXQm14617aDj7zdU0Ey3U
v7MrbBcNOtOkWVX8dqMdXBFjGtzFAyun0KOD94JG19NwYErllWgWnudlBs1Z
63D95Cu2yaLzOssunVtLw7U80wfaaHsx0ze9ujTMSd++Wx8tZbTCOWUVDT05
Nnmb0BPmL87YraDhDm9x+iF0xL/tZz8vpWHL6vZ1VugU263n4pfQsPlKk7cj
+orTkzJrdcz/8bQFl9CX9mp4dyjT4CJyuzMSrR2Y0d8lT8Ne+dny8ehtC7hP
nsrS4L1XSCgVvSMoPsVBmgb9VxcmX6O7WcnsgTk0fJH/nwiHH9/g09J0cRpW
akhVFqKr2vTV3MRoWB8tcb4SnXu4put/M2nQ0hVk1aKjt2RvASHsryG+vxHt
avRt3E+QhkDJXwat6JNXDk/fKYC+8s+oHS20ZdRWYooCtXRmrAM9Xpkp1/iH
gigdC4cvaHFLL+WoCQpeRrCDu9Fim9f7Wo9RcOD0gEMfWrq0V1fjNwU2Cok1
A+gA1rdp0j8pKD/EHR1EO+swCtOGKYh32dI+hP5Xf9N7cJACO0rfbwTd90xK
48MABZH+cT0/0Sd0zJWYPgouy/mJ/+bP/yvrWH4PBUpFX4b5Ntw03JX8jYJN
VUz4KFqrXC03/AsFXtfXTfC9cqqjzv8zBau1DZTG+Pk+La9/oYOCW5JVU/x2
w0j664mPFFy5OB7H9z2ZknbWBwpqY0sE+Q4/P3/R1vcUjNTrqPHHo4wK0la3
4HwP7p7xC71l3t3Li5so+HJsbjI//n1Bd6NkGynI1Lkzc5ifH/JSQKSegn3S
Reo/0G2179MnaijYvCF75nf+/DtFU/vfUlA34JjMz5+u3Mre9koKJI91z+jh
r6e8kVttBQVvinUXf+WvX6iacUkZBULWuxM/omWT9r5JK8H+pisLtqGdEi64
xRRRYOLd+l8zOqFz46lQoOBHnvCTajRv9oPllzgU3O64OVmBbrggMOVcQIFI
8j9FHlpTtl3mZB4F5sV9EWz07wVZC/dnUxDn5jjK34+tcvfmbMuk4Kr7iHQ6
Ot01bYdhOsYvv/F+Alrl/tGwJc8p+CsiMRyNTp7WlLQojQLHgck54fz5ahyd
kk2hYKuySUgAOk2CBM5MpOBzQfH3K+jg0JvsqTgKFBsdxT3QLvsTdMeeUBAs
4XTHHi2grPi3J4qCpo6ae5v559HwaX/NfQqkG71H1qJFE6XMmXsU6GsHSK9A
H23tnsMLoWCvPROpiBbOijnICaIgzDA2bRDvC8n8Eq3n13E/P6qS6EKnqs5r
TPGlIHnYd3Uzeir1ZEnSFQqMqu4XcdFsi/fusZdwf7F6Pgeh/W6lrHjkSsEZ
webQy2iPZZZq8ecpyOvun34erXhpyOKZMwWphtGrTNF78j0iaScKjss+yFZA
m8nAhm5bCvafFzOLxPvUwfjFiu0sPB/r7hvcQu+R9rIwPUjBkUNBHe5o19M2
VTb7cX8odXqy0B4ihy5e3k1BgvTzhlno29WX+vK2UKB3kLvmNN7/Vj5Whw1W
U9D4IsDEDP2+hZWxSwf3u4Wo7ib01lXJuy1W4nrNNSOyaKfKNTt9tSkoWXD1
Bo3vTURPnmWlGgUflspWCaAPqIn2npWhYEbxPFtzfA+H3/hofhnlAG+ZcJgh
ela2hmPjLw7UkdeXldAJyw1/lo5wQFDexLcd39cjR2wGkwc5UBZiaGiB7nwn
5eH8jQNSrvnBe/D9dvLbyRNr4kDv90TeeApDNgn++nElhwO/J3LW1qHjMx7H
emZzQLlvtX0a+pNnR6RrJgeifO4OHUEvvSng7PCSA1mbD5a8xvqiI0YmzPQp
BzpZdXZWT/G9v6lXuj6cg/d/WalvAkNC5kpbb73Iga4I50oW2l96/MApNw7Y
3ZN7qI5++HjPtRAXDixSuOZRGc8Qd1vFuNazOJ6X1um56N375rxzteeAlkO8
Qngs1qOvo+ZmHuYA1TSecRbrsWaZ8BCLdRyorlu50QBtEDt5OHAtB4jJzzAh
tJmFq1WuHgf+pS4JjIpmyHKexRIpXQ5Ivq94VhLFkEeKk3EVWhxQ0AquFsV6
r730s6rxAg4k5QvnnMH68NnNfLWzAhh/o8IXTXSWwgftM1NsGNpUUPEN683j
V5N8T0+y4VNSbr4VWiOuR/T0OBuCD+5U3xfGkNqhuNSzQ2wIEMrbuiAU11f8
5x/fDjb4HE3K8cf6VkKoPfpTIRs2FOkU8evf5u16k91cNkjLCPgPYH3cUGGT
PETheNvPrmCh/eaPNgsWsOHEsObCBUEMqc65/mppJhvySrutEm9i/dj0QulW
PBve9Q92mqArtdznhceyodD69nxB9LV7y1gJMWyweRCZYxWA8x9Z9pKOZIPW
mbgbcjdwvNe9FWOhbNho1l1a6o/3zexHM4XvYbyLBzkuaNvHJbdlQ9iQGXeg
jvFjSOw683N6QWxw/ZT7wx1dsC7trfEtNrxdMsJTQfsfNrpwOIANcsXCptXX
8X2+L3LC0Z8Nej8mI73Qq/7/z4b/A3ecV9E=
            "]]}, "Charting`Private`Tag#1"], 
         Annotation[{
           Directive[
            Opacity[1.], 
            AbsoluteThickness[2], 
            FaceForm[
             Opacity[0.3]], 
            RGBColor[0.880722, 0.611041, 0.142051], 
            Thickness[Large]], 
           Line[CompressedData["
1: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
V8HIA0f45zap0jk30uy2e13h1fzn/wEW6rzG
            "]]}, "Charting`Private`Tag#2"], 
         Annotation[{
           Directive[
            Opacity[1.], 
            AbsoluteThickness[2], 
            FaceForm[
             Opacity[0.3]], 
            RGBColor[0.560181, 0.691569, 0.194885], 
            Thickness[Large]], 
           Line[CompressedData["
1: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
44PW/f+TAf8DRzHZTQ==
            "]]}, "Charting`Private`Tag#3"], 
         Annotation[{
           Directive[
            Opacity[1.], 
            AbsoluteThickness[2], 
            FaceForm[
             Opacity[0.3]], 
            RGBColor[0.922526, 0.385626, 0.209179], 
            Thickness[Large]], 
           Line[CompressedData["
1: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
LMPo/cP45za5Er4b6fZbjl/m1f3n/wMNlAee
            "]]}, "Charting`Private`Tag#4"], 
         Annotation[{
           Directive[
            Opacity[1.], 
            AbsoluteThickness[2], 
            FaceForm[
             Opacity[0.3]], 
            RGBColor[0.528488, 0.470624, 0.701351], 
            Thickness[Large]], 
           Line[CompressedData["
1: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
OvGG9NHwR0YM+KrCa59okocu9+jq/zVhgHepyPM/6hnY9/H3ITdzBjDQW0EH
wwhcFDWjPWBJ4KsZfZh4IAN3+KrdPH6CAdoZt53/nmpCfcu5URU2DOD+po+a
mDbglV/r3DadYYCWfXnwXeMGPP92VjbmHAN+F4cVKfVx0I2nEbkLtgz4WbE1
TsSiGJdgjyXOdgz47Oric06NhL//KVXqdGDAh4Is4fdzPXhB2EhZ05kB9+xK
5hwpTFz3TGtF/iUGPKpdV6ihUoUdT8SWiLsxYKX/5BUNvSYU9k53V+hVBpiK
HJB8vKMVD/La3PjozoB/BrurX6km4TsmjOc2XgzQXTxbK93ExOzrmU9afRgw
k6u7Z/XWDGy3fezsHj8G2K5J/CVbTEYSQmHziQEMaKabpz/SKMZ7GLGXlgQx
gJ671XWDYh5etUqo8EowA3r5dGNVs9rwzaAvrb0hDHhqVrzl79se7N2oXaR1
hwF98p5CwypN2MCPzy3/HgN2qRxL83/WjKmq+mJJSYS+ivFj3dhmvFd8HV9g
AQP23FjPa/yYhk/c353eW8QAq2/n1GUEy9GqSde1yqUMCDkyLnNBOA+rZnee
iSlnAJ/NvaUfBfPQmImT37tKBtSH+GcGCNSiZxcVLuvUMOCHTPHftyuqsJyt
qFJKHQMMc0+KJa5IwsnkPcz5Bgb8tWif2Lq8FgVKBh62aiLq8yXk7ZJ7A/hh
z687Rc0M4AQZhV9f0oq/+xenrmhjwMNA+bPHQ5vx2tDER3YkBgz1PV5tyZOB
G11rTjZQGFDSE9Cy6V8lWiwT+SZGZ8DlxfcGvxaLkFFnuv01JgM2p9Z5yP5J
RxeOu+dR2ITf4294tgW8wmciAto2dRD4Z/GrEwvhOE60tSKgiwFjHa/Dpmfr
cfcZw4DOHgbwuN8tvjsbTsxDa8V29TOgwcN4tGcuHS8Kbbp7Z5ABz6FnNvML
C807eNCGXhF4p1+dm5hpxCo2yydURhgQPvdGx6u0H684N951f4wBFlu8j4V9
rsE7pviTx8cJv/BGpL79UI9SrviraLxlQNQza/s2r2ZEv6CS+eQdAyTytXdQ
39UjcxWNd++niX6RvIr6630N1jz9eMnRT4Q/rh0uSX4Xjga01b4lfmYA6wjJ
6OBUIuq/qFgz85UB9gFH1dQcaVh5s7/FsR+E3096zq8cq0caC+Itz2YZcOLG
h+vjQywUb7Fy+bd5BkQ8ENlg9r4FH3lqtUn/N6GXkLXxZs5tKEhrViTlD6HP
02CjO9WC35d+6/7+jwFb3W+Uci6QcZiNobvBEiZ8v/DoWZRtL76f+vd1Ch8T
ynjXqlv31qPk76sVfixnwu6WhZxLr7vx08bbmgYrmVDT3XhXpz8RdzifUEwR
ZAJZ5iYvraMe9dhEff8mzARPw+iDe0fLcPi8/AO91UyQuzVziPuiE28v3fT3
2Rom2Kwu6U6nsLD25F2dL2JMkBI5M1RgSsONf8xtddczAWaScxVfteA22zDT
JEkmDCzsEx0woqGJK1vFPm5gQrzFYtC+wQ68zlQnZb0ME1YqTDTqDqTjgfKT
S3U2MUGiXDBpE4OCeRrsdK7JM6F/Ui/5Sl8LLr3nZJuswASrcdqcoFUXztrn
YN2+lci/qIHHm0LBK4bPbvm8nQmRLxtPHCIn4shs8w7JXUyQXbbmtx2zEp/I
0z6lu4f5v/lCcIlK/bW9TJiKLHd6W1+Putnyc0n7mBBLfWgVWVePT+5cK9Km
Qry3Nm9mW3Muyt27bMknVSaE/dHIW6pDxs4LC5x16kzY474DTNlluDT9m7/W
ISac2mfnGkVMk9LaXxYvIyZI6o4O784vwuXfv5+N1ST4/H34/mG9NpxhcMJZ
TY8JSsKDwSuoLThnqbvcgBkT4k7utmuVY+J5h0EVXksmCD00L05qa0GilSfl
dlgzoaqdTHdUIeaDFZPvzU8y4d1SyvTMNhpa5hkW43+KCV8VXh/0rm5HikuR
UNoZJlinXR/yi2ehIc5yZ8o5JtSfMBJ7ptuM/d9NPZ2xJfDZmjE988LxyPnR
fHE7JljszLmin5uLPbS+xiMHJmzWlSk6W1aJRNI2nHNwYsK6hnsP6xrKkFD0
xT+RLkxYwMI9Q/UtWGttS0DpZSa8GKHuCt5Oxkt1NTt63Zjw2FyF/iayCEvt
Hlj65yoTRFapah6r7cBD/U9EN3swYcQohO17uBnz21z5pe/FhOrILo01Kbm4
b/XeNd53mJDUWJTQXJKOI3pPlCTeY4LtJp3lTumV2KAjZxsOZ8L+QIEk0WLi
ff7NgaORTNA19pDqv0PH/LcZL/mi/6t3px/6ERvHBL2W5lIJ9yK89nGHa00C
E8Zv2TTbBNGxrEAyHkxiQuf8+xVBS2h4fjL2/Z+nTHDfr6HUHkHBstvavm56
wYTWxts34y8XoQTOth6dVCaExlBVHP3q0avR1ljndEK/B9eUBNxLRB/Oxu+J
zGQCxc9z3u4uBSsdTcsoyGbCvMDhXZXe9XhG3FtsMZcJu55r1UrfDscH9Vec
Nc4n9CQXofc5pAYv32h7/Xkhcb6lMbj1ViIq7/d3/ljMhKOJb3VrDXtwZ9Op
XaiMCc15xVoSV+ux/pp/7fcrmLB3f5Cw0osyfET8qspQFROkl2UxeMXa8P6V
Wdd31jJB2HXQ/mMABQ8oZj8IqGeCctjde23+4fgo2TOQiplgcm5VYGVyC65f
JXh4PTAhPADYvUkteOy4V5dTCxP+ea3vNvZNxEmFeZqVbUxYv5quomTRiNfc
LAleQmbCYtTZrzzeuZj2IzzWnPof/z5mKjdT6Ezo2tncEBmXjrZSyzU+Mpmg
r4ZnY93DkXLyCs5BDhPsfv1sbljZhVUXldXCO/47L77zgE93FxOCb6hSfzWy
0Z8za8LkeplAlanffPVUPfYhU69c62eCpn4On7NuEVbMPLO9YZDQ43bPubLA
Sqy+jVa7YpjoF8MC2olHi/BUuLiM9QgTuLRrL2Oca/CbBa1TaWNMMFt5v8Xd
KRyvKDN2+ThO6HegYfjw/TJ8Z/SgkfpbJphTPCyXoiLUU7+S7+47Jsjz/KV4
rm3G1Z6NjznTRP3frhhrikhH+w+c/CH1iQkO9cybr1sYuEC9Z5fzZ4Lvy+Fl
NNtwnJOnoV72lfBPXmOr/4MBLFkVJbn4nQlnTV7Z7NSnI/noNs7xWcKvomme
bTQuNjg7debxPBN4wyzSKo/V46Nmc/VDv/7jZ23cj89b/jChV+6FsIEioe8T
owvu/4h88zTICjaJqAs39NfxsuD9snWs+yFlSONnePRSPha0vZBsfHqkHvlt
Oy5uspwFSzgLkVNWNehr4JxXAj8Lrn80emj8vRW7Sr3IHhFgwXzr0ZRIl3b8
eod60XZhFlzemPNpSKERpXJpkZ4iLOAbVw5+crAeae+30qgXZUGYf/jo9TYq
TgvoaVkixoKgqx5zN01y0at2i41G61hgKaHQJTnTiT0O0kxiJVjg9uZMZ7h/
GVryC1kNSbGgcW10ooVhOH6wvXjP5o2s/+Vr/3bjsKssCySbk6TV9HPxausY
u3I5FnyMH2fu1EvEjo//1C9sZkGpU5J1ok86Cmx0f6+1lQU5+5Tu//4LuHl2
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
            "]]}, "Charting`Private`Tag#5"], 
         Annotation[{
           Directive[
            Opacity[1.], 
            AbsoluteThickness[2], 
            FaceForm[
             Opacity[0.3]], 
            RGBColor[0.772079, 0.431554, 0.102387], 
            Thickness[Large]], 
           Line[CompressedData["
1:eJwdynk41Akcx3E6jStJriel5I5ClO34bsoRI9a1tXIspRhFuTI5h3WkUOuJ
kcK2GDSMmXHMT3yNK/NbFTkqecbo2tA+LLuelNbO7h+f5/28nuezPSjC4+wq
GRkZT+n+qzNnwt5dn4V7LULJY1fY0ON67GiCBQuLxOGOTvFsYJ5S06k6xEJ6
w8igC50NnNV+IUveLPxAf6fsmcCG0Nu+HvkZLLRLO2MSlMKGWjefyszfWTjW
pjHNyGKD+qfbsyWsapSNVap8UsSGECVK2jnDWox4ryrOE7BhlmY3retTh/60
LrGvbB3oUQ7qmd3jYMTVN9ah9nVQvSLHS5Plos6Nqi162XUwJNdYVBXPw6i7
Z9v6h+og4hf1+a0DfDyq7RBYo10Pb3xeJWt904Qjeg0qw+frwTY5rD+ooBkt
Mtwla5rrQdzrvnDhaQuObfATsWQ4kJrJXpu2hcCBbOo+gTEHxnZf/7HApRU/
hURlDblzwKb2fHnYhYcYaMwPmIrjgAKzJ09S2oZlgzMjlvc5kBD4UxGtqR1/
NZGYRfVz4CX1VVLwOOJjlVZV/c8cWBppvJVO70AhyR+lGDVA+ETeiddLHUif
0jjy2LMBDulzJ79NEWJ0IoN5Or0BRMUztqafhejXOuUm5DbA/taO7GR6J44x
9hseei/9e8a0N/7VidEroQYq2lyoEtfrBAZ34W+uZZuZLlxIsPvQ3va8CxNL
LT5UMrhAM4vF1Ue60WvrcKV/MxfOnfz5slpFN87dSc3x/siFIerxh3rKPRiQ
uSh0MuTBxvPF1OnwHvSJNDvQEcCDsYBTE+oDPegW2FfBvMcDIhnqJGa92H7N
c44i5oH97utdpoxeDP6YXfZMmw9GmW81dcZ60fawgtEtfz74pjvELxg9wko5
2wpmKR/2vVKeMY96hDFFl7ZrTPIhX9nmoFvHIxzVVikyN2mE3p0urYpr+7BY
ZBHpG9kIBjy9dgVqHwZ2Bg2x2xuh+1YNsSanD0nnbXOr5Jsg9s9UellPHxpO
p29a7dMELp4xogeyIhzoM9BcqGmCwh2RK0E2IrR9vvFezXITVGuVr3tJE2E0
7wmx8n0zLFjb8YtKRHi41L6KyW+Gy2dyJ7m9IpzeburUrNQCVmM59eVzItR9
5vol+lILpEfc0AM1Er/rjJeUDrYAyXATPrEicaTlZNJrSwF4qchYH/YgkWKz
S/K2VADjMSMHWFIr7zEbZpQLwNulUl7Vk0SbHUpfde8LwOKAmcw7qa8t3PjD
r1IAZbXRzlneJLaN5jmPPRDA37nyp7pPkjihlrw8LhDA2wp9R9UAEv3ihMny
wwI4Gp5Ws4ZG4umMtvVyFAJMi7/Y0aTW3DZu/U6egOy8woJBqTtXIatTkYAo
N8Pgu+Ek5kas80tSIWCTgw7b4iKJIYtKsksaBMxs0JijXiIxkV5s98WAAH+l
mxtOxJE4s34HZa89Acfj5ztrpTY3KpjSciRguuGFOeUKifnVsSoyxwkoPbJt
T5fU5Tu7LB5TCTDMX/fCik6i19fFrjAvAhwu9rasTyRxvu2hJS+YAEf5jfOB
UgddZqbcPUvAy9LcNwKprajCzVnnCFhWUJ4NSyJx101jdX8aATni61WiZBIn
v4ojlaIIMHISl+umkKhzpvDzUjQB/5jYesVJ7Z1B6X8fS4BV0qJEL5VE7UwP
ByGdgPyrJ1rjpQ6wtJ+tSyBAU/GO61OpSyyNJSVJBFDnRwt3Mkj8IVZRKyeF
AMvZZWa81Pr/l4B/AYyNq4A=
            "]]}, "Charting`Private`Tag#6"], 
         Annotation[{
           Directive[
            Opacity[1.], 
            AbsoluteThickness[2], 
            FaceForm[
             Opacity[0.3]], 
            RGBColor[0.363898, 0.618501, 0.782349], 
            Thickness[Large]], 
           Line[CompressedData["
1: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
Mx1YO3yz0/8MoC8sf3JlW4j7ZO8ANpnZgzT+kkM/Eezeo2plU9qH4tdy+Ha0
0kGbS+S23Nf3iHUszzCFYHWNjyXFSWT8hdNfadU2OtRxWWs4fCjE27e6fU8j
uPVZXd3tvH6U88ZqTL2duA+342y7E6aRoW9mYzrBVGvV9efMnUhA//N1zQ6i
H4yU5S+UNSGGy4d+ZRDM612mHppWiqzsMr5pdhL6WhxZs3ycjqc+WbDMINid
72vqg9IWfK+J9ieNLjpE5f/my+ns+P+YuO94rL/3ceAlRSJlRKlQEZmVpFy5
i6SQbBkZDTStkKKiiCKjlOyMJLK3Y++97tuMbMkIJaP1vfzx+70/fz4ft/s4
57yuc53rug1wHHkQn4zuLwy1DMr+ArcT5wzFP2P9ubs22tllAJrbYwoS0c6u
TfOnnlOJR2BS475+KkWH2aFUI6YaWnu3SqSj19t4Trp86CbeEn2SsgO4vt9u
L2IejUCN3DZqKZpf69acp28OkUqd5FYepFL6bmw4axnxifDuvP2vGS09Gpru
690NYRubnugNYT3k+/lu/90vcOEPT1ovOmP7t95kl24yrOt0/9Iwzt+s0HVA
Y5DYO62d+oJ+0s7ib1Q5A8KZfX9ujlApL5znuLwNx7Be3506hz5Vc/981NkR
8LeZXec4iuP/sLxx3XwaqlQs/i2jWw9cucBzIJIozkUF3x/D/p96/Ur9uU8k
6lZp5+ovVAoD+/r82UMj4EqGch+jFx8Ie3yV/gI+NXvkGMYx/oqYYoSFqGBr
H33FC31rz8hnZ+Ec4AtwkdzwFeuLV5qydbu+ELuh5nBv9Mmyc2sL2SJJCG9+
CssExqMgd40sVzc0TuubP0c7mztP1G6sJiETtUUbJ7F+y5jfsYthhFRGiRQ8
Rz99XNa1Z3Ur6Lx4Y7xxCuvRz3tqnJe7IEb8QIwPuj0iWEf+50q+ZXvOPE2l
DNx+w1gxU0ZSR89vf4ZOTrd8qjxRRibf8p9b/w37m6k94a/6swmr4lPBJ+iu
5HfHInpGwfJPchT9DO63tROdEW2UNH1NLnNFr3qj2EW6BiCeN87rL7rlMkve
yboR6IhM+3F3lkq5ECgt/1trBgaufKNfQCeI2OQUfuyBT+fv5tnOYX8qylTb
XVRGvHStOafRXE8eMI+VzxAd8WnOq9+pFEddKd2o8C44F7WJDKH9PtOPv3qQ
TPQsfjAY/8B65qrpOINjMlktkLXUge762Hnc5VYEybC39deYp1JUcp7pMd7/
CmGjik216D5vlTL/mAFSuKCarvATnw8lSWpBu4is3R5zjKAnjpvXuahGkJO5
FrekFvA8hCdec3/aBvuFMhQT0dHNdZfd/WfJvYzYst2LOL83kXS/HpSRuuVQ
ibZfWA9Xtg6dkqoinOFDj278w/r+gL14aFIjsbqv/LIdTbfAs56/9Su5E/vs
/PFVNMqorC1H1O4yUNAoaI5Hr7KVb6S9DicXs+Z/s62mUeRD31oq+iXB4j/l
3nvoNdF6Dm+za0nquTabYfTlju8Xhvrboa0gJk+VjkaRag7i6vj3HQ7r07Iz
0O8/Gl0WrxkDvb33rm5fQ6MwSaas0grrBr09iU2P0M3Ogi9FL4XDkvz9r1/R
Kkd+Msn5dUPSDYY8DXoaZVA4Zudx7UYS6XpBLgcdzsB/NiQ3i4Sef+W4cy2N
wuvxk2t9RiWcLqq68hgtFvxJaeFYI0w7Maz/iiYS/E/8pBvJB4XrZufW0SjG
4WFyzr2DcKmR0SoDLUIezHWFtUNp6fz+rQw0iqI3B7HmCyd6xUofXNAOfJ/S
WgJG4fYFjs4BtOCm250lmwvBYK9NviIjjXJ447SjFVMSYY+y045Hj29x0KYE
jEDm6f3RzOtplPmL3+IUPg4Bh09RnBW6oLvUzftHA/B0HrzYiubzK/owb5MF
j72iW6WYaJRNmj12j2+0g8Di7qVXaGm2xynTu7qhyKaWtojeyGyU6N3RAGtl
Ey0NNtD+/+cNNN++1Hx0+RnJF79Zu2ExyiF1OzONEtkSlWanUQl64V4WLujl
7lNtJXlhZDxKlNqL9udz1XmdHgaV1bcXjrHQKOupnVsHf9YAN69jSxi6/4Te
w93CY3Aw8fTFP+gt2ppvIqUridfNv/FGG2mU6z9rLuUzdUKh3sf3+ehZva2f
fopkQZTuNeNtrDSK/V9xKpfaMMBZ5bo7aCOpae4a1zBo5Lz4rR2tEjv+M/P7
GGlxrayV2kSj+OX2nkiwK4Blfe8LAega8ScCb280kHPG1XHf0HL7f30fzakh
/Kd841U30yh/lgbfS7n3k39F8xfj0W9OtOYW6A7ChM0m6lo2GqVPQtvG9ncm
cC19/22G/laxXCO9kAmHvmb0FqBna5we2a2aAekWC4et7DQK53GOveqKpeC7
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
dYNlu+SakiMk/7uWn5jKKsLjCuwi+4lVhQNuLjtSC48mqleWHGag9dOjzxg8
QZD5y2pMkTjiyUTMS64Y8L35/mWxLtlvqWXCuikNYHdbT0+R+Pyh6W0KdhUQ
xJ/QV6Tzb38k9Uf19xF788Rpf1uWji/vFUgr1Cb9KIvG9/dWFfh+r/LUf793
/LD9pOcPlXz8XNN8XYEWmV+Pt18cf1oEtX5XJPZo/bseX7KvcJ4m6e8Cj4TI
Hq/AzzKif8kT85vE+r8b64KriTmV2RokP6Hy7FPhRRDysM1hJ7HJl7uduXOB
mPv6178Z6gz0qZf+K2GkDnrObHXfRszHU5W8clctzBqe70tTI/Gzda1lpXc1
GGiXikoTK7YcOfsnqAiP6ogaJx9ioLil8d1oexKkmCbYSRDvZyjM94+Wgp+T
sm2iKgNJF/e1qky3w8VH33W3EHttU1e8JlULqqUd/M8Okv7Kwu2rx2AgfB1v
axImPv5A4s0ZfQqc1n89G41IP/B44pZRZx0OVlP7IEAslB4pKyCaBMo2lXrh
Kgy0dTzhHnN3Gj571SF2DfGubAu7MzsqYNBOl/FQmYFqg1yFrjZ3QZzS6S/c
xJHdw8zVQknYe/jVQgAw0AGD9N3jTzrh5WvTdZ4HGKhTldpaokyBXrl7spMi
mY/i2zrYeZug3+Zw2+Q+cl5/Rd4sys+Gj2pX+22Jg1p9dt/mzMf2Gl87RxQY
KPU235ONudnY7WhnpiUxr9qms3fzo4HrOM/Vvr1kfe/X6/llZcNuxfSNpsR5
PKOG2qz5sGwwI6dzD+lv87zW6Gyn4P6O9dv0iDNjRDR3MifhiFOnrpXvZqBg
1/DtLGmlYJLc8Gw78fCiL3/V73J8sNgsM3YXmUelnY/I/M4DLyXB5zzEDoE3
LfKT6mCwb4WLpzzZb/nVca/FKGhX2b59Wo70T7J3dr+PC8TuK/0bLYjN3v0R
Gf7SCHGfRbRadpJ+8Y+GbsBzGqT7fklRIn7fweGAIkuh0XXFTNoOBrrWGPEq
daoR8s/Y8gsS7z5pv9AVGgiTY9yiAdtJfmeKCNNZNQDeKUy8P7YxENcL9NBb
uQE0VDXe2xJbPiy2Ur6fhkv0ByO7ZEk+W+/FxB1UCl8d2uXVZf/7vbOPggHh
NOjeJZyZK8NAy1Zu2CYbRsP9So08W4h3RtXktYbQoPrSEbc/UuT5PjZTF+8o
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
            "]]}, "Charting`Private`Tag#7"], 
         Annotation[{
           Directive[
            Opacity[1.], 
            AbsoluteThickness[2], 
            FaceForm[
             Opacity[0.3]], 
            RGBColor[1, 0.75, 0], 
            Thickness[Large]], 
           Line[CompressedData["
1:eJwdznk41AkAxnFKOXJlldikjNtShN1SKhspZyY2W451FEa5QmNlhI2idHgw
FpM8mGgYM+OYn3iNe36PlCIlz0RFoX1Y9rGPjrWz+8f7fJ/Pf++O4GjvsDUy
MjJU6f6rDfe1k5chG3G7IsjDFzkg3Q//mGLFRp0k6ogLnQOGn6Zu9X42Vrkj
Q67JHFSt9T+z4sOGiD6lSk3h4HjBKe+bV9gIzwg1C07joMTTtyrrPRto05pN
z+Zg7u+C+RL2fRglqVQNFnHgq6KYcda4FremNSR5Qg4maY6z233r4EDrkpyS
rYO+4j6KRRkXgpS3thFOdShfVeBnyPKwkFu9lXK1DoMKjUXVdD4MS8PaBp7V
4eK9zYvbnggwrOMcVKNTj2nfVwztvU0wNmhQHw6vhzkjciA4vxmbsrwm5Jrr
MdbrtXTucQv61PzFbBkuQrM46zK2EpC95va90JSL8Z25v+S7tmLkTHz2My8u
LGvDyyPPPUSFqSBwJokLWWZP3gSrDRVDcyPWFVzEB/1WRGtqB9NswiJ+gItJ
t1epIePAE/VWDcNPXCyONN7OTO7AOCl4rmjSgPDXeR5vVjoQMaN16BG1AfsN
eZMH00TIu5TOPJ3ZgN7iuT3mn0TIbJ3xFPEaYNPacZWR3AmljB+M9083wIGa
0N74VycSViOM1HV4eCCp1w0K6cIb97ubmK48JDp+aG8b7UIBy+pDVToP0RaJ
WHuoG6nbhqsCmnmgnbwTp1nZDZmSyzk+H3l46Xb0IUW1B/SsZZGLMR/a4cVu
s1E9cI+xsO8I5GMs0O/15ic98Ajqr2SW8cFjHKibsOiF+Bp1QVHCh8PO3C7z
9F6c/nj17lMdAUyz3m3RHeuFo8MGk9sBAgRkOtOXTPpQoLCnkskSYO8r1TnL
+D74FcXu0JoUoFjVbp9nRx80vlUvsjRrRKeBa6vyun5wxVYxp2IaYcCntG9w
60dYZ/AzTnsjum/XEHI5/Rg5prewRqkJkX9eTr7b04+Ds5nfrPVtghM1QfxA
VozFfqMtSzVNKNSPWQ22E8N1dGNZzZcmsLXL17+kiRHLHyRWf2rGkq2joKhE
DBeWUzVT0Iy40BuTvF4x5PTNXZpVWmA8llNfviCG2VP3zxdiW3Ap+jrlgCaJ
XzvpE6yhFjxK9xQN7iYx1XIy9Y21EMfVZWwdvEmo2X038Y4lxGjCiD1basou
i+H0ciF8XKuUNKgk9uqrfN1eIYSBvYXMlNS8pet/+FcJUVp74Vi2D4nm53nH
xh4IsXJDya/7JIlZTcaXcaEQU5WGRzQCSVCTRAylYSEcozJq5GgkPK60ySso
EthW/NmRJjVFb9x2SolAbl5h/pDU3DVgdyoTSPE0DimNIsGMXu+fqk5AzVmX
Y3WeROyyiuyKFoE5Na0Ft1gSrORix89GBPxVbql5JJF4L6+vaONE4AR9sbNW
anuT/BntIwSmG15YKl4k0Xg/UV3mKIGyQ3q7uqTmGnRZPXIjYHpz/YvdySTC
vi53RZ4g4Hu+t0X+Egm59ofW/BACzkobF4OkTohjppWGERhl3XgrlPqAm2hT
9lkC8sqq85GpJBxumW4OoBG4KcmtFjOkf75KYlTiCei5SMq3p5GwDC38tHKB
wD9me04kSX30iuLAdCIBm9TlCcplEjZZ3s6iZAJ3fvVopUtNs3aar0shoKv8
u/tjqe9Zm06UpBL4efF5oUE6Cf9EZe2cNAJ281+YdKn1/i+BfwEBHtLd
            "]]}, "Charting`Private`Tag#8"]}}, {}}, <|
      "HighlightElements" -> <|
        "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
       "LayoutOptions" -> <|
        "PanelPlotLayout" -> <||>, "PlotRange" -> {All, All}, 
         "Frame" -> {{False, False}, {False, False}}, "AxesOrigin" -> {0, 0}, 
         "ImageSize" -> {360, 432}, "Axes" -> {True, True}, 
         "LabelStyle" -> {}, "AspectRatio" -> Automatic, "DefaultStyle" -> {
           Directive[
            Opacity[1.], 
            AbsoluteThickness[2], 
            FaceForm[
             Opacity[0.3]], 
            RGBColor[1, 0.75, 0], 
            Thickness[Large]], 
           Directive[
            Opacity[1.], 
            AbsoluteThickness[2], 
            FaceForm[
             Opacity[0.3]], 
            RGBColor[0.363898, 0.618501, 0.782349], 
            Thickness[Large]], 
           Directive[
            Opacity[1.], 
            AbsoluteThickness[2], 
            FaceForm[
             Opacity[0.3]], 
            RGBColor[0.772079, 0.431554, 0.102387], 
            Thickness[Large]], 
           Directive[
            Opacity[1.], 
            AbsoluteThickness[2], 
            FaceForm[
             Opacity[0.3]], 
            RGBColor[0.528488, 0.470624, 0.701351], 
            Thickness[Large]], 
           Directive[
            Opacity[1.], 
            AbsoluteThickness[2], 
            FaceForm[
             Opacity[0.3]], 
            RGBColor[0.922526, 0.385626, 0.209179], 
            Thickness[Large]], 
           Directive[
            Opacity[1.], 
            AbsoluteThickness[2], 
            FaceForm[
             Opacity[0.3]], 
            RGBColor[0.560181, 0.691569, 0.194885], 
            Thickness[Large]], 
           Directive[
            Opacity[1.], 
            AbsoluteThickness[2], 
            FaceForm[
             Opacity[0.3]], 
            RGBColor[0.880722, 0.611041, 0.142051], 
            Thickness[Large]], 
           Directive[
            Opacity[1.], 
            AbsoluteThickness[2], 
            FaceForm[
             Opacity[0.3]], 
            RGBColor[0.368417, 0.506779, 0.709798], 
            Thickness[Large]]}, 
         "HighlightLabelingFunctions" -> <|
          "CoordinatesToolOptions" -> Identity, 
           "ScalingFunctions" -> {{Identity, Identity}, {
             Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>, 
       "Meta" -> <|
        "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
         ParametricPlot, "GroupHighlight" -> False|>|>, "DynamicHighlight"]], 
    Axes -> {True, True}, AxesLabel -> {
      FormBox[
       TagBox[
        StyleBox["\"p\:2081\"", Bold, 14, StripOnInput -> False], HoldForm], 
       TraditionalForm], 
      FormBox[
       TagBox[
        StyleBox["\"p\:2084\"", Bold, 14, StripOnInput -> False], HoldForm], 
       TraditionalForm]}, AxesOrigin -> {0, 0}, DisplayFunction -> Identity, 
    FrameLabel -> {{None, None}, {None, None}}, 
    FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
    GridLinesStyle -> Directive[
      GrayLevel[0.5, 0.4]], ImagePadding -> All, 
    Method -> {
     "DefaultGraphicsInteraction" -> {
       "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
        "Effects" -> {
         "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
          "Droplines" -> {
           "freeformCursorMode" -> True, 
            "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
      "ScalingFunctions" -> None}, PlotLabel -> FormBox[
      StyleBox["\"Vertex trajectories\"", Bold, 16, StripOnInput -> False], 
      TraditionalForm], PlotRange -> {All, All}, PlotRangeClipping -> True, 
    PlotRangePadding -> {{
       Scaled[0.05], 
       Scaled[0.05]}, {
       Scaled[0.05], 
       Scaled[0.05]}}, Ticks -> {Automatic, Automatic}], 
   FormBox[
    FormBox[
     TemplateBox[{
       TagBox[
        FrameBox[
         StyleBox["1", Smaller, StripOnInput -> False]], "Placeholder"], 
       TagBox[
        FrameBox[
         StyleBox["2", Smaller, StripOnInput -> False]], "Placeholder"], 
       TagBox[
        FrameBox[
         StyleBox["3", Smaller, StripOnInput -> False]], "Placeholder"], 
       TagBox[
        FrameBox[
         StyleBox["4", Smaller, StripOnInput -> False]], "Placeholder"], 
       TagBox[
        FrameBox[
         StyleBox["5", Smaller, StripOnInput -> False]], "Placeholder"], 
       TagBox[
        FrameBox[
         StyleBox["6", Smaller, StripOnInput -> False]], "Placeholder"], 
       TagBox[
        FrameBox[
         StyleBox["7", Smaller, StripOnInput -> False]], "Placeholder"], 
       TagBox[
        FrameBox[
         StyleBox["8", Smaller, StripOnInput -> False]], "Placeholder"]}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    PointSize[0.5], 
                    EdgeForm[None], 
                    Opacity[1.], 
                    AbsoluteThickness[2], 
                    FaceForm[
                    Opacity[0.3]], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    Thickness[Large]], {
                    LineBox[{{0, 12.5}, {20, 12.5}}]}}, {
                    Directive[
                    PointSize[0.5], 
                    EdgeForm[None], 
                    Opacity[1.], 
                    AbsoluteThickness[2], 
                    FaceForm[
                    Opacity[0.3]], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 12.5}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    PointSize[0.5], 
                    EdgeForm[None], 
                    Opacity[1.], 
                    AbsoluteThickness[2], 
                    FaceForm[
                    Opacity[0.3]], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    Thickness[Large]], {
                    LineBox[{{0, 12.5}, {20, 12.5}}]}}, {
                    Directive[
                    PointSize[0.5], 
                    EdgeForm[None], 
                    Opacity[1.], 
                    AbsoluteThickness[2], 
                    FaceForm[
                    Opacity[0.3]], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 12.5}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    PointSize[0.5], 
                    EdgeForm[None], 
                    Opacity[1.], 
                    AbsoluteThickness[2], 
                    FaceForm[
                    Opacity[0.3]], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    Thickness[Large]], {
                    LineBox[{{0, 12.5}, {20, 12.5}}]}}, {
                    Directive[
                    PointSize[0.5], 
                    EdgeForm[None], 
                    Opacity[1.], 
                    AbsoluteThickness[2], 
                    FaceForm[
                    Opacity[0.3]], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 12.5}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    PointSize[0.5], 
                    EdgeForm[None], 
                    Opacity[1.], 
                    AbsoluteThickness[2], 
                    FaceForm[
                    Opacity[0.3]], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    Thickness[Large]], {
                    LineBox[{{0, 12.5}, {20, 12.5}}]}}, {
                    Directive[
                    PointSize[0.5], 
                    EdgeForm[None], 
                    Opacity[1.], 
                    AbsoluteThickness[2], 
                    FaceForm[
                    Opacity[0.3]], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 12.5}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #4}, {
                   GraphicsBox[{{
                    Directive[
                    PointSize[0.5], 
                    EdgeForm[None], 
                    Opacity[1.], 
                    AbsoluteThickness[2], 
                    FaceForm[
                    Opacity[0.3]], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    Thickness[Large]], {
                    LineBox[{{0, 12.5}, {20, 12.5}}]}}, {
                    Directive[
                    PointSize[0.5], 
                    EdgeForm[None], 
                    Opacity[1.], 
                    AbsoluteThickness[2], 
                    FaceForm[
                    Opacity[0.3]], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 12.5}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #5}, {
                   GraphicsBox[{{
                    Directive[
                    PointSize[0.5], 
                    EdgeForm[None], 
                    Opacity[1.], 
                    AbsoluteThickness[2], 
                    FaceForm[
                    Opacity[0.3]], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    Thickness[Large]], {
                    LineBox[{{0, 12.5}, {20, 12.5}}]}}, {
                    Directive[
                    PointSize[0.5], 
                    EdgeForm[None], 
                    Opacity[1.], 
                    AbsoluteThickness[2], 
                    FaceForm[
                    Opacity[0.3]], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 12.5}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #6}, {
                   GraphicsBox[{{
                    Directive[
                    PointSize[0.5], 
                    EdgeForm[None], 
                    Opacity[1.], 
                    AbsoluteThickness[2], 
                    FaceForm[
                    Opacity[0.3]], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    Thickness[Large]], {
                    LineBox[{{0, 12.5}, {20, 12.5}}]}}, {
                    Directive[
                    PointSize[0.5], 
                    EdgeForm[None], 
                    Opacity[1.], 
                    AbsoluteThickness[2], 
                    FaceForm[
                    Opacity[0.3]], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 12.5}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #7}, {
                   GraphicsBox[{{
                    Directive[
                    PointSize[0.5], 
                    EdgeForm[None], 
                    Opacity[1.], 
                    AbsoluteThickness[2], 
                    FaceForm[
                    Opacity[0.3]], 
                    RGBColor[1, 0.75, 0], 
                    Thickness[Large]], {
                    LineBox[{{0, 12.5}, {20, 12.5}}]}}, {
                    Directive[
                    PointSize[0.5], 
                    EdgeForm[None], 
                    Opacity[1.], 
                    AbsoluteThickness[2], 
                    FaceForm[
                    Opacity[0.3]], 
                    RGBColor[1, 0.75, 0], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 12.5}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #8}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", "None", "]"}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "2", "]"}], ",", 
                   RowBox[{"FaceForm", "[", 
                    RowBox[{"Opacity", "[", "0.3`", "]"}], "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", "None", "]"}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "2", "]"}], ",", 
                   RowBox[{"FaceForm", "[", 
                    RowBox[{"Opacity", "[", "0.3`", "]"}], "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", "None", "]"}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "2", "]"}], ",", 
                   RowBox[{"FaceForm", "[", 
                    RowBox[{"Opacity", "[", "0.3`", "]"}], "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.560181, 0.691569, 0.194885]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", "None", "]"}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "2", "]"}], ",", 
                   RowBox[{"FaceForm", "[", 
                    RowBox[{"Opacity", "[", "0.3`", "]"}], "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.922526, 0.385626, 0.209179]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", "None", "]"}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "2", "]"}], ",", 
                   RowBox[{"FaceForm", "[", 
                    RowBox[{"Opacity", "[", "0.3`", "]"}], "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.528488, 0.470624, 0.701351]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", "None", "]"}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "2", "]"}], ",", 
                   RowBox[{"FaceForm", "[", 
                    RowBox[{"Opacity", "[", "0.3`", "]"}], "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.772079, 0.431554, 0.102387]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", "None", "]"}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "2", "]"}], ",", 
                   RowBox[{"FaceForm", "[", 
                    RowBox[{"Opacity", "[", "0.3`", "]"}], "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.363898, 0.618501, 0.782349]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", "None", "]"}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "2", "]"}], ",", 
                   RowBox[{"FaceForm", "[", 
                    RowBox[{"Opacity", "[", "0.3`", "]"}], "]"}], ",", 
                   
                   TemplateBox[<|"color" -> RGBColor[1, 0.75, 0]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}]}], "}"}],
            ",", 
           RowBox[{"{", 
             RowBox[{
               TagBox[#, HoldForm], ",", 
               TagBox[#2, HoldForm], ",", 
               TagBox[#3, HoldForm], ",", 
               TagBox[#4, HoldForm], ",", 
               TagBox[#5, HoldForm], ",", 
               TagBox[#6, HoldForm], ",", 
               TagBox[#7, HoldForm], ",", 
               TagBox[#8, HoldForm]}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.953800598401398*^9, 3.953800627760898*^9}, 
   3.953800668019562*^9, 3.953960891561984*^9, 3.9542979909134903`*^9, 
   3.9543034163560658`*^9, 3.954921397224845*^9},
 CellLabel->"Out[93]=",ExpressionUUID->"9ba09cc1-1138-40ce-b9b2-abb88f7625e2"]
}, Open  ]],

Cell["\<\
Now, we know that vertices 1, 2, 3, 4, do not work in all the regimes. But we \
need to individuate the missing vertices. To find new candidates, we consider \
the following:\
\>", "Text",
 CellChangeTimes->{{3.953800788641035*^9, 3.953800831099201*^9}, {
  3.953800885135063*^9, 3.953800895212281*^9}, {3.953806150249803*^9, 
  3.953806184033741*^9}},ExpressionUUID->"39a6f980-d2b7-4765-9e8e-\
03e89aecc60c"],

Cell[BoxData[
 RowBox[{
  RowBox[{"ineqsN", ":=", 
   RowBox[{"Flatten", "[", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"Transpose", "[", "\[Beta]", "]"}], ".", 
        RowBox[{"L", "[", 
         RowBox[{"i", ",", "j", ",", "k", ",", "l"}], "]"}]}], "<=", 
       "1.001"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"j", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"k", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"l", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "}"}]}], "]"}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.953803897069242*^9, 3.95380390067212*^9}},
 CellLabel->"In[94]:=",ExpressionUUID->"3cb1645f-d843-41a2-b1d6-1cf0e3f47ff7"],

Cell[BoxData[
 RowBox[{
  RowBox[{"pointsAtTheta", "[", 
   RowBox[{"\[Theta]val_", "?", "NumericQ"}], "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{"#", "/.", " ", 
      RowBox[{"\[Theta]", "->", "\[Theta]val"}]}], ")"}], "&"}], "/@", 
   "coordFuncs"}]}]], "Input",
 CellLabel->"In[95]:=",ExpressionUUID->"fd9cae3f-0446-4672-8a6a-6ca7a8de37e2"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"verticesAtTheta", "[", 
    RowBox[{"\[Theta]val_", "?", "NumericQ"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"allPoints", ",", "ineqsEval"}], "}"}], ",", 
     RowBox[{
      RowBox[{"ineqsEval", "=", 
       RowBox[{"ineqsN", "/.", " ", 
        RowBox[{"\[Theta]", "->", "\[Theta]val"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"allPoints", "=", 
       RowBox[{"pointsAtTheta", "[", "\[Theta]val", "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Select", "[", 
       RowBox[{"allPoints", ",", 
        RowBox[{"Function", "[", 
         RowBox[{
          RowBox[{"{", "pt", "}"}], ",", 
          RowBox[{"And", "@@", 
           RowBox[{"Chop", "@", 
            RowBox[{"N", "[", 
             RowBox[{"ineqsEval", "/.", " ", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{
                 RowBox[{"p", "[", "1", "]"}], "->", 
                 RowBox[{"pt", "[", 
                  RowBox[{"[", "1", "]"}], "]"}]}], ",", 
                RowBox[{
                 RowBox[{"p", "[", "4", "]"}], "->", 
                 RowBox[{"pt", "[", 
                  RowBox[{"[", "2", "]"}], "]"}]}]}], "}"}]}], "]"}]}]}]}], 
         "]"}]}], "]"}]}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.953804018986401*^9, 3.953804021244464*^9}, {
  3.953804121832797*^9, 3.95380412551348*^9}, {3.953804191122669*^9, 
  3.953804193017638*^9}},
 CellLabel->"In[96]:=",ExpressionUUID->"81705418-9b46-47a6-a086-3ad7d65210d8"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"verticesAtTheta", "[", 
   RowBox[{
    FractionBox["\[Pi]", "8"], "+", 
    FractionBox["\[Pi]", "16"]}], "]"}], "//", "N"}]], "Input",
 CellChangeTimes->{{3.953804211872496*^9, 3.9538042123272657`*^9}},
 CellLabel->"In[97]:=",ExpressionUUID->"bcabeca5-4941-4961-9b88-510330f853f1"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.1814791290228546`"}], ",", "0.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.14796010969859466`"}], ",", "0.07068125923672561`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.3318213620807009`", ",", "0.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.19891236737965798`", ",", "0.15328148243818812`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.14796010969859447`"}], ",", 
     RowBox[{"-", "0.07068125923672593`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.19891236737965798`", ",", 
     RowBox[{"-", "0.15328148243818812`"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.953804188524592*^9, 3.9538042136352873`*^9}, 
   3.953806279905191*^9, 3.95396089320016*^9, 3.954297992518429*^9, 
   3.954303436699813*^9, 3.954921459122869*^9},
 CellLabel->"Out[97]=",ExpressionUUID->"9383ad9b-ff73-46a0-b844-5047a1ad4185"]
}, Open  ]],

Cell["\<\
As the Manipulate Plot suggests, it seems like there are two regimes: the \
octagon regime and the hexagon regime. Now, we want to find the angle for \
which the regime change (which is probably the angle for which points 3 and 4 \
merge) and the missing vertices.  \
\>", "Text",
 CellChangeTimes->{{3.953806283748268*^9, 3.953806321431197*^9}, {
  3.95380638639098*^9, 
  3.953806439674432*^9}},ExpressionUUID->"29d41070-5fec-4191-bb8a-\
db97d4f6efad"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"mergeq", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"v", "[", 
     RowBox[{"[", 
      RowBox[{"3", ",", "2"}], "]"}], "]"}], "==", 
    RowBox[{"v", "[", 
     RowBox[{"[", 
      RowBox[{"4", ",", "2"}], "]"}], "]"}]}], "//", 
   "FullSimplify"}]}]], "Input",
 CellChangeTimes->{{3.953806461763379*^9, 3.953806517675805*^9}, {
  3.9538067420931673`*^9, 3.953806745841759*^9}, {3.95431615858906*^9, 
  3.9543161867480583`*^9}},
 CellLabel->"In[98]:=",ExpressionUUID->"ccdaf334-891a-4c24-9143-05570882136c"],

Cell[BoxData[
 RowBox[{
  RowBox[{"2", " ", 
   RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
   SuperscriptBox[
    RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"], " ", 
   RowBox[{"(", 
    RowBox[{
     FractionBox[
      RowBox[{
       RowBox[{"(", 
        RowBox[{"6", "-", 
         RowBox[{"4", " ", 
          SqrtBox["2"]}]}], ")"}], " ", 
       RowBox[{"Cos", "[", "\[Theta]", "]"}]}], 
      RowBox[{
       RowBox[{"-", "3"}], "+", 
       RowBox[{"2", " ", 
        SqrtBox["2"]}], "+", 
       RowBox[{"Cos", "[", 
        RowBox[{"4", " ", "\[Theta]"}], "]"}]}]], "+", 
     FractionBox[
      RowBox[{
       RowBox[{"-", "4"}], "+", 
       RowBox[{"3", " ", 
        SqrtBox["2"]}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "2"}], "+", 
          SqrtBox["2"]}], ")"}], " ", 
        RowBox[{"Cot", "[", "\[Theta]", "]"}]}]}], 
      RowBox[{
       RowBox[{
        RowBox[{"-", "3"}], " ", 
        SqrtBox["2"], " ", 
        RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
       RowBox[{
        SqrtBox["2"], " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"5", " ", "\[Theta]"}], "]"}]}], "-", 
       RowBox[{"3", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "2"}], "+", 
          SqrtBox["2"]}], ")"}], " ", 
        RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
       RowBox[{"2", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"3", " ", "\[Theta]"}], "]"}]}], "+", 
       RowBox[{
        SqrtBox["2"], " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"5", " ", "\[Theta]"}], "]"}]}]}]]}], ")"}]}], "\[Equal]", 
  "0"}]], "Output",
 CellChangeTimes->{{3.953806464309773*^9, 3.953806524560781*^9}, 
   3.953806762482146*^9, 3.953960907981664*^9, 3.954298006663425*^9, 
   3.954303458244369*^9, {3.954316168507759*^9, 3.954316198276975*^9}, 
   3.954921472232154*^9},
 CellLabel->"Out[98]=",ExpressionUUID->"10634c00-7caf-473b-a273-d0a11ebb7c0f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FindInstance", "[", 
  RowBox[{
   RowBox[{"mergeq", "&&", 
    RowBox[{"\[Theta]", "\[Element]", 
     RowBox[{"Interval", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"\[Pi]", "/", "8"}], "+", 
         FractionBox["\[Pi]", "64"]}], ",", 
        RowBox[{"\[Pi]", "/", "4"}]}], "}"}], "]"}]}]}], ",", "\[Theta]", ",",
    "Reals"}], "]"}]], "Input",
 CellChangeTimes->{{3.953806714375826*^9, 3.9538067222204857`*^9}, {
  3.953809338024083*^9, 3.953809338733869*^9}, {3.9543034608682547`*^9, 
  3.954303474363855*^9}, {3.954303568827544*^9, 3.954303582508792*^9}, {
  3.9543159977256937`*^9, 3.9543160000475287`*^9}, {3.9543161387567053`*^9, 
  3.954316142133689*^9}, {3.954316172774599*^9, 3.954316173511518*^9}},
 CellLabel->"In[99]:=",ExpressionUUID->"dc2e9a07-e63f-45a1-a76c-5f4f5b8335b2"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"\[Theta]", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"2", " ", 
      RowBox[{"ArcTan", "[", 
       InterpretationBox[
        TemplateBox[{"Root", 
          InterpretationBox[
           StyleBox[
            TemplateBox[{"\"0.334\"", 
              DynamicBox[
               FEPrivate`FrontEndResource[
               "FEExpressions", "NumericalApproximationElider"]]}, 
             "RowDefault"], ShowStringCharacters -> False], 
           0.33391033572434358767111461929744109511`15.954589770191003, 
           Editable -> False], 
          TagBox[
           RowBox[{"Root", "[", 
             RowBox[{
               RowBox[{
                 RowBox[{"1", "+", 
                   RowBox[{"12", " ", "#1"}], "-", 
                   RowBox[{"2", " ", 
                    SuperscriptBox["#1", "2"]}], "-", 
                   RowBox[{"156", " ", 
                    SuperscriptBox["#1", "3"]}], "-", 
                   RowBox[{"17", " ", 
                    SuperscriptBox["#1", "4"]}], "+", 
                   RowBox[{"344", " ", 
                    SuperscriptBox["#1", "5"]}], "-", 
                   RowBox[{"28", " ", 
                    SuperscriptBox["#1", "6"]}], "-", 
                   RowBox[{"344", " ", 
                    SuperscriptBox["#1", "7"]}], "-", 
                   RowBox[{"17", " ", 
                    SuperscriptBox["#1", "8"]}], "+", 
                   RowBox[{"156", " ", 
                    SuperscriptBox["#1", "9"]}], "-", 
                   RowBox[{"2", " ", 
                    SuperscriptBox["#1", "10"]}], "-", 
                   RowBox[{"12", " ", 
                    SuperscriptBox["#1", "11"]}], "+", 
                   SuperscriptBox["#1", "12"]}], "&"}], ",", "5"}], "]"}], 
           Short[#, 7]& ], 0.3339103357243436},
         "NumericalApproximation"],
        Root[
        1 + 12 # - 2 #^2 - 156 #^3 - 17 #^4 + 344 #^5 - 28 #^6 - 344 #^7 - 
         17 #^8 + 156 #^9 - 2 #^10 - 12 #^11 + #^12& , 5, 0]], "]"}]}], 
     "}"}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{
  3.953806727576981*^9, 3.953806766629384*^9, 3.9538093395753517`*^9, 
   3.953960908419354*^9, 3.954298007116879*^9, {3.954303467897238*^9, 
   3.954303475163522*^9}, {3.954303571730569*^9, 3.954303583901437*^9}, 
   3.954316001284941*^9, 3.954316143853619*^9, 3.954316175609393*^9, 
   3.954316208503783*^9, 3.954921475188984*^9},
 CellLabel->"Out[99]=",ExpressionUUID->"80d3c1d0-03c2-40d2-880e-ed2fcb5c1cc9"]
}, Open  ]],

Cell["\<\
This is the angle that discriminates between the two regimes. \
\>", "Text",
 CellChangeTimes->{{3.9538646540425873`*^9, 
  3.953864677546441*^9}},ExpressionUUID->"9850289c-fc23-4e4f-9a47-\
3aaad420e288"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[Theta]T", " ", "=", " ", "0.644539533"}]], "Input",
 CellChangeTimes->{{3.9543035484164753`*^9, 3.954303556438973*^9}, {
  3.954303602125389*^9, 3.954303610512445*^9}},
 CellLabel->
  "In[100]:=",ExpressionUUID->"22d0e3d5-2147-47c3-8951-9215ec87cdc4"],

Cell[BoxData["0.644539533`"], "Output",
 CellChangeTimes->{3.9543035591605477`*^9, 3.954303611733049*^9, 
  3.9549214782369757`*^9},
 CellLabel->
  "Out[100]=",ExpressionUUID->"eff6d952-f612-4c20-9152-31e57ccce4d0"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Vertices", "Subsection",
 CellChangeTimes->{{3.9538683343361263`*^9, 
  3.953868344550645*^9}},ExpressionUUID->"80247696-81e9-40ec-82db-\
f9c4fdb40d26"],

Cell["\<\
Finally, we want to find the missing vertices: we can use the same method \
used for the \
\>", "Text",
 CellChangeTimes->{{3.9538648299385843`*^9, 3.9538648400980997`*^9}, {
  3.953864915360985*^9, 3.953864925922903*^9}, {3.953867784632865*^9, 
  3.953867793195344*^9}},ExpressionUUID->"bcf228d6-50b4-4048-8c91-\
954803a09d8f"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"ineqsEval2", "=", 
    RowBox[{"ineqs", "/.", " ", 
     RowBox[{"\[Theta]", "->", "0.589"}]}]}], ";"}], "\n", 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
   "Label", " ", "each", " ", "inequality", " ", "so", " ", "we", " ", "can", 
    " ", "track", " ", "where", " ", "vertices", " ", "come", " ", "from"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"labeledIneqs2", "=", 
    RowBox[{"MapIndexed", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"#1", "->", 
        RowBox[{"First", "[", "#2", "]"}]}], "&"}], ",", "ineqsEval2"}], 
     "]"}]}], ";"}], "\n", "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
   "Build", " ", "all", " ", "pairs", " ", "of", " ", "inequalities", " ", 
    "and", " ", "their", " ", "labels"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"labeledPairs2", "=", 
    RowBox[{"Subsets", "[", 
     RowBox[{"labeledIneqs2", ",", 
      RowBox[{"{", "2", "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Go", " ", "through", " ", "each", " ", "pair"}], ",", "solve", 
    ",", 
    RowBox[{
    "and", " ", "check", " ", "if", " ", "solution", " ", "lies", " ", "in", 
     " ", "region"}]}], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{"vertexData2", "=", 
   RowBox[{
    RowBox[{"Reap", "[", 
     RowBox[{"Do", "[", 
      RowBox[{
       RowBox[{"Module", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"pair", ",", "eqs", ",", "sol"}], "}"}], ",", 
         RowBox[{
          RowBox[{"pair", "=", 
           RowBox[{"pairEntry", "[", 
            RowBox[{"[", 
             RowBox[{"All", ",", "1"}], "]"}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"eqs", "=", 
           RowBox[{"pair", "/.", " ", 
            RowBox[{"LessEqual", "->", "Equal"}]}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"sol", "=", 
           RowBox[{"Quiet", "@", 
            RowBox[{"Solve", "[", 
             RowBox[{"eqs", ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"p", "[", "1", "]"}], ",", 
                RowBox[{"p", "[", "4", "]"}]}], "}"}], ",", "Reals"}], 
             "]"}]}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"Length", "[", "sol", "]"}], ">", "0"}], "&&", 
             RowBox[{"FreeQ", "[", 
              RowBox[{
               RowBox[{"sol", "[", 
                RowBox[{"[", "1", "]"}], "]"}], ",", 
               RowBox[{"C", "[", "1", "]"}]}], "]"}], "&&", 
             RowBox[{"And", "@@", 
              RowBox[{"(", 
               RowBox[{"ineqsEval2", "/.", " ", 
                RowBox[{"sol", "[", 
                 RowBox[{"[", "1", "]"}], "]"}]}], ")"}]}]}], ",", 
            RowBox[{"Sow", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"pairEntry", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", "2"}], "]"}], "]"}], ",", 
               RowBox[{"sol", "[", 
                RowBox[{"[", "1", "]"}], "]"}]}], "}"}], "]"}]}], "]"}]}]}], 
        "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"pairEntry", ",", "labeledPairs2"}], "}"}]}], "]"}], "]"}], 
    "[", 
    RowBox[{"[", 
     RowBox[{"2", ",", "1"}], "]"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.9538649313089523`*^9, 3.953864989472001*^9}, {
  3.953865068658744*^9, 3.953865097763743*^9}},
 CellLabel->
  "In[101]:=",ExpressionUUID->"167b4e72-4267-4859-b15e-38107e8c27fd"],

Cell[CellGroupData[{

Cell[BoxData["vertexData2"], "Input",
 CellChangeTimes->{{3.953865104825759*^9, 3.953865107918249*^9}},
 CellLabel->
  "In[105]:=",ExpressionUUID->"4d298a0d-fde0-4fb7-a689-5609c524ffe4"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"5", ",", "10"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"p", "[", "1", "]"}], "\[Rule]", 
        RowBox[{"-", "0.18144397389849917`"}]}], ",", 
       RowBox[{
        RowBox[{"p", "[", "4", "]"}], "\[Rule]", 
        RowBox[{"-", "5.577260537083436`*^-18"}]}]}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"5", ",", "16"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"p", "[", "1", "]"}], "\[Rule]", 
        RowBox[{"-", "0.1479353511583941`"}]}], ",", 
       RowBox[{
        RowBox[{"p", "[", "4", "]"}], "\[Rule]", "0.07067587361132055`"}]}], 
      "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"7", ",", "12"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"p", "[", "1", "]"}], "\[Rule]", "0.33181556136700546`"}], 
       ",", 
       RowBox[{
        RowBox[{"p", "[", "4", "]"}], "\[Rule]", 
        RowBox[{"-", "2.605059049814284`*^-16"}]}]}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"7", ",", "16"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"p", "[", "1", "]"}], "\[Rule]", "0.19891461679951575`"}], 
       ",", 
       RowBox[{
        RowBox[{"p", "[", "4", "]"}], "\[Rule]", "0.15328105275509152`"}]}], 
      "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"10", ",", "15"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"p", "[", "1", "]"}], "\[Rule]", 
        RowBox[{"-", "0.1479353511583941`"}]}], ",", 
       RowBox[{
        RowBox[{"p", "[", "4", "]"}], "\[Rule]", 
        RowBox[{"-", "0.07067587361132059`"}]}]}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"12", ",", "15"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"p", "[", "1", "]"}], "\[Rule]", "0.19891461679951591`"}], 
       ",", 
       RowBox[{
        RowBox[{"p", "[", "4", "]"}], "\[Rule]", 
        RowBox[{"-", "0.15328105275509163`"}]}]}], "}"}]}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.953865108558537*^9, 3.9539609092482967`*^9, 
  3.954298007987438*^9, 3.954303493098837*^9, 3.954921486104548*^9},
 CellLabel->
  "Out[105]=",ExpressionUUID->"eb3c8550-967d-41c8-8107-25a3719687ad"]
}, Open  ]],

Cell["\<\
We obtained six vertices! It seems it worked! Now, comparing with the other \
regime,\
\>", "Text",
 CellChangeTimes->{{3.9538651243647947`*^9, 
  3.95386515294936*^9}},ExpressionUUID->"47e0de7f-fd22-4830-892f-\
01e404d745d7"],

Cell[CellGroupData[{

Cell[BoxData["vertexData"], "Input",
 CellChangeTimes->{{3.953865154617571*^9, 3.953865158281375*^9}},
 CellLabel->
  "In[106]:=",ExpressionUUID->"e3285db4-665d-4ce5-9134-3d2f6090fd60"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "12"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"p", "[", "1", "]"}], "\[Rule]", 
        RowBox[{"-", 
         FractionBox[
          RowBox[{
           RowBox[{"-", "3"}], "+", 
           RowBox[{"2", " ", 
            SqrtBox["2"]}]}], 
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             SqrtBox["2"]}], ")"}]}]]}]}], ",", 
       RowBox[{
        RowBox[{"p", "[", "4", "]"}], "\[Rule]", 
        RowBox[{"-", 
         FractionBox[
          RowBox[{"3", "-", 
           RowBox[{"2", " ", 
            SqrtBox["2"]}]}], 
          RowBox[{"4", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             SqrtBox["2"]}], ")"}]}]]}]}]}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "15"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"p", "[", "1", "]"}], "\[Rule]", "0"}], ",", 
       RowBox[{
        RowBox[{"p", "[", "4", "]"}], "\[Rule]", 
        RowBox[{
         FractionBox["1", "4"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "2"}], "+", 
           SqrtBox["2"]}], ")"}]}]}]}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"2", ",", "7"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"p", "[", "1", "]"}], "\[Rule]", 
        RowBox[{"-", 
         FractionBox[
          RowBox[{
           RowBox[{"-", "3"}], "+", 
           RowBox[{"2", " ", 
            SqrtBox["2"]}]}], 
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             SqrtBox["2"]}], ")"}]}]]}]}], ",", 
       RowBox[{
        RowBox[{"p", "[", "4", "]"}], "\[Rule]", 
        RowBox[{"-", 
         FractionBox[
          RowBox[{
           RowBox[{"-", "3"}], "+", 
           RowBox[{"2", " ", 
            SqrtBox["2"]}]}], 
          RowBox[{"4", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             SqrtBox["2"]}], ")"}]}]]}]}]}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"2", ",", "16"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"p", "[", "1", "]"}], "\[Rule]", "0"}], ",", 
       RowBox[{
        RowBox[{"p", "[", "4", "]"}], "\[Rule]", 
        RowBox[{
         FractionBox["1", "4"], " ", 
         RowBox[{"(", 
          RowBox[{"2", "-", 
           SqrtBox["2"]}], ")"}]}]}]}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"5", ",", "10"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"p", "[", "1", "]"}], "\[Rule]", 
        RowBox[{"-", 
         FractionBox[
          RowBox[{
           RowBox[{"-", "4"}], "+", 
           RowBox[{"3", " ", 
            SqrtBox["2"]}]}], 
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             SqrtBox["2"]}], ")"}]}]]}]}], ",", 
       RowBox[{
        RowBox[{"p", "[", "4", "]"}], "\[Rule]", "0"}]}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"5", ",", "16"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"p", "[", "1", "]"}], "\[Rule]", 
        RowBox[{"-", 
         FractionBox[
          RowBox[{"3", "-", 
           RowBox[{"2", " ", 
            SqrtBox["2"]}]}], 
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             SqrtBox["2"]}], ")"}]}]]}]}], ",", 
       RowBox[{
        RowBox[{"p", "[", "4", "]"}], "\[Rule]", 
        RowBox[{"-", 
         FractionBox[
          RowBox[{
           RowBox[{"-", "3"}], "+", 
           RowBox[{"2", " ", 
            SqrtBox["2"]}]}], 
          RowBox[{"4", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             SqrtBox["2"]}], ")"}]}]]}]}]}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"7", ",", "12"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"p", "[", "1", "]"}], "\[Rule]", 
        RowBox[{"-", 
         FractionBox[
          RowBox[{"4", "-", 
           RowBox[{"3", " ", 
            SqrtBox["2"]}]}], 
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             SqrtBox["2"]}], ")"}]}]]}]}], ",", 
       RowBox[{
        RowBox[{"p", "[", "4", "]"}], "\[Rule]", "0"}]}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"10", ",", "15"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"p", "[", "1", "]"}], "\[Rule]", 
        RowBox[{"-", 
         FractionBox[
          RowBox[{"3", "-", 
           RowBox[{"2", " ", 
            SqrtBox["2"]}]}], 
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             SqrtBox["2"]}], ")"}]}]]}]}], ",", 
       RowBox[{
        RowBox[{"p", "[", "4", "]"}], "\[Rule]", 
        RowBox[{"-", 
         FractionBox[
          RowBox[{"3", "-", 
           RowBox[{"2", " ", 
            SqrtBox["2"]}]}], 
          RowBox[{"4", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             SqrtBox["2"]}], ")"}]}]]}]}]}], "}"}]}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.953865158853831*^9, 3.953960909256577*^9, 
  3.954298008012835*^9, 3.954303495447278*^9, 3.9549214888913193`*^9},
 CellLabel->
  "Out[106]=",ExpressionUUID->"79a4b8d9-8745-41e2-8882-713468704204"]
}, Open  ]],

Cell["\<\
The missing vertices is given by the couple  {7, 16} and {12, 15}! We store \
the vertices in the new regime in a vector:\
\>", "Text",
 CellChangeTimes->{{3.95386518265169*^9, 3.953865218217256*^9}, {
  3.9538654533803797`*^9, 
  3.953865485270289*^9}},ExpressionUUID->"c3a6c55b-4338-4354-b370-\
6ab8c526499a"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"vertexCoords2", "=", 
   RowBox[{"vertexData2", "[", 
    RowBox[{"[", 
     RowBox[{"All", ",", "2"}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"contributingPairs2", "=", 
   RowBox[{"vertexData2", "[", 
    RowBox[{"[", 
     RowBox[{"All", ",", "1"}], "]"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.953865544235406*^9, 3.953865588712605*^9}},
 CellLabel->
  "In[107]:=",ExpressionUUID->"2a05fe37-460a-4657-9c7b-ca450cb190aa"],

Cell[CellGroupData[{

Cell[BoxData["contributingPairs2"], "Input",
 CellChangeTimes->{{3.95386554880064*^9, 3.953865553283772*^9}, {
  3.953865593684368*^9, 3.953865603560355*^9}},
 CellLabel->
  "In[109]:=",ExpressionUUID->"fd09e47d-43da-4a76-bcb5-986905b8f824"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"5", ",", "10"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "16"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "12"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "16"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"10", ",", "15"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"12", ",", "15"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.953865553938455*^9, {3.953865599500239*^9, 3.953865605084622*^9}, 
   3.953960909265202*^9, 3.954298008031826*^9, 3.9543035012906938`*^9, 
   3.9549214937426643`*^9},
 CellLabel->
  "Out[109]=",ExpressionUUID->"d05abab3-d186-48e9-8f68-a1180a4282ed"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"vertexsols2", " ", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"eq1", ",", "eq2", ",", "sol"}], "}"}], ",", 
       RowBox[{
        RowBox[{"eq1", "=", 
         RowBox[{
          RowBox[{"ineqs", "[", 
           RowBox[{"[", 
            RowBox[{"pair", "[", 
             RowBox[{"[", "1", "]"}], "]"}], "]"}], "]"}], "/.", " ", 
          RowBox[{"LessEqual", "->", "Equal"}]}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"eq2", "=", 
         RowBox[{
          RowBox[{"ineqs", "[", 
           RowBox[{"[", 
            RowBox[{"pair", "[", 
             RowBox[{"[", "2", "]"}], "]"}], "]"}], "]"}], "/.", " ", 
          RowBox[{"LessEqual", "->", "Equal"}]}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"sol", "=", 
         RowBox[{"Quiet", "@", 
          RowBox[{"Solve", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"eq1", ",", "eq2"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"p", "[", "1", "]"}], ",", 
              RowBox[{"p", "[", "4", "]"}]}], "}"}]}], "]"}]}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"pair", "->", "sol"}]}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"pair", ",", "contributingPairs2"}], "}"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.953865638120514*^9, 3.953865643579319*^9}},
 CellLabel->
  "In[110]:=",ExpressionUUID->"28a6d989-b570-4617-9cf1-ba2097c6b570"],

Cell[BoxData[
 RowBox[{
  RowBox[{"v2", " ", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"p", "[", "1", "]"}], ",", 
        RowBox[{"p", "[", "4", "]"}]}], "}"}], "/.", 
      RowBox[{"vertexsols2", "[", 
       RowBox[{"[", 
        RowBox[{"i", ",", "2", ",", " ", "1"}], "]"}], "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", " ", "1", ",", " ", "6"}], "}"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.95386567246596*^9, 3.953865688691161*^9}},
 CellLabel->
  "In[111]:=",ExpressionUUID->"0e9e4b1a-ef12-4892-98bd-13dd5f612dec"],

Cell["\<\
Basically, we are done! To verify that we are in the right direction, we plot \
the graphs for the new regime!\
\>", "Text",
 CellChangeTimes->{{3.953865723682*^9, 
  3.9538657553882217`*^9}},ExpressionUUID->"717300fa-70bf-4d2c-9cf9-\
aa3007dcaa1b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"frames2", " ", "=", " ", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"region", ",", "vertexPlot", ",", "verts"}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
       "Choose", " ", "the", " ", "correct", " ", "vertex", " ", "list", " ", 
        "based", " ", "on", " ", "theta"}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"verts", "=", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"th", ">", "\[Theta]T"}], ",", "v", ",", "v2"}], "]"}]}], 
       ";", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{"Plot", " ", "the", " ", "region"}], "*)"}], 
       RowBox[{"region", "=", 
        RowBox[{"RegionPlot", "[", 
         RowBox[{
          RowBox[{"Evaluate", "[", 
           RowBox[{
            RowBox[{"And", "@@", "ineqs"}], "/.", " ", 
            RowBox[{"\[Theta]", "->", "th"}]}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"p", "[", "1", "]"}], ",", 
            RowBox[{"-", "0.5"}], ",", "0.5"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"p", "[", "4", "]"}], ",", 
            RowBox[{"-", "0.5"}], ",", "0.5"}], "}"}], ",", 
          RowBox[{"PlotStyle", "->", 
           RowBox[{"Directive", "[", 
            RowBox[{
             RowBox[{"Opacity", "[", "0.3", "]"}], ",", "Blue"}], "]"}]}], 
          ",", 
          RowBox[{"AxesLabel", "->", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Style", "[", 
              RowBox[{"\"\<p[1]\>\"", ",", "Bold", ",", "14"}], "]"}], ",", 
             RowBox[{"Style", "[", 
              RowBox[{"\"\<p[4]\>\"", ",", "Bold", ",", "14"}], "]"}]}], 
            "}"}]}], ",", 
          RowBox[{"PlotLabel", "->", 
           RowBox[{"Style", "[", 
            RowBox[{
             RowBox[{"\"\<\[Theta] = \>\"", "<>", 
              RowBox[{"ToString", "[", 
               RowBox[{"N", "[", "th", "]"}], "]"}]}], ",", "Bold", ",", 
             "16"}], "]"}]}]}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{"Plot", " ", "the", " ", "vertices"}], "*)"}], 
       RowBox[{"vertexPlot", "=", 
        RowBox[{"ListPlot", "[", 
         RowBox[{
          RowBox[{"verts", "/.", " ", 
           RowBox[{"\[Theta]", "->", "th"}]}], ",", 
          RowBox[{"PlotStyle", "->", 
           RowBox[{"{", 
            RowBox[{"Red", ",", 
             RowBox[{"PointSize", "[", "Medium", "]"}]}], "}"}]}], ",", 
          RowBox[{"PlotRange", "->", "All"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Show", "[", 
        RowBox[{"region", ",", "vertexPlot"}], "]"}]}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"th", ",", 
      RowBox[{
       RowBox[{"\[Pi]", "/", "8"}], "+", 
       FractionBox["\[Pi]", "64"]}], ",", 
      RowBox[{"\[Pi]", "/", "4"}], ",", 
      RowBox[{"\[Pi]", "/", "64"}]}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.953866411645029*^9, 3.953866437997904*^9}, {
   3.953867043962171*^9, 3.9538671084099207`*^9}, 3.9538673114049673`*^9, 
   3.9543036531397343`*^9},
 CellLabel->
  "In[112]:=",ExpressionUUID->"80e8853a-8e6f-4366-9887-969e63f67cb7"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   GraphicsBox[{{GraphicsComplexBox[CompressedData["
1:eJx1VQ1M1GUYP6Rgg641E2SXXOgSzjm0QJa5ycOSPsacEqMwrAthbQkCyUCD
1cCYV6E4mhcBHV8D8viIE0M4uPPeg7vje+Mw4jZMmXa4cA4dUUZaV9673+v2
d7CxZ7//+3z8ns/bmJ6b9OEamUxm+f//odzw1MiCO6abJrrDQ7QuK7NzKbC5
P6Bcs1RDW7kegz4w9IH/4vpCwh4Y9sCwBy7KOGyK0Q7Tan6kEv6A4Q8Y/laz
k0rYr/ZdKi97/fVThFfPzsa9uI1u8O+CN7DM+1dnXuB67HluR8DIFxgSdpCI
A3tgSPCChB54SzH4wz/6CT1pfxEH+qgT9KV9AY86rywjjbcvvSzKq9cs5ERv
VZJ83kEDXl7nKdjk1WdOjsU7MOzWcSn0YY94x3k8wQP9QP7AeWn3SsyaQdq9
tkPtSrQIDL7ID3ljvoCldZfOCfyBD3Akjyf0sH/QK+J6Ij76gHqgDuAjrSfm
CH1BvqgT8pXOGeIAwy/qDIw6gx/6jvjoD+IjT8SX5o+6rVYn1AP6wIgHftI8
8B0S+nhvqv05WmUwPHYPM5YPpC/V2MU+74zOnfQUm1jFpP+sp9jx2H70lpcE
aVMusJTUoMseT6v4Diy9T/4/BE4oxloI/lAn8JHepeTbnfaY5EFKr5LrNHkX
qHXRl/b0DbA3uyKS5JuHyHgufr02pYteOmy55i7opz93LFpj8u0soM3io/3i
Etl8NzVnlTiYsj3eGjPdTMbB7N87fSxswb8jY2nWRom2V6uz9CamDh362PWM
ndKu+n2Xpe9nM5+UjijGvn1031Kb4lS5enGnbhesPWrWtLN30h/2I0ngSrUX
087kqDiVQc8UXJKu4TV9lqqUjH5rQgrLjbSpcMzT6TMs7hjiJ/L4BH5xnB+B
v57zF/ku8nxF3Q7y/tGOm+NRat+Bx+7Ue7ye4q41Nx46afazMujjPh5xPxFR
KK9g6Dfma7h2OlE+3yP2s3PuYFChvF/UpT7kjFzr0oj93Mz7zZCv9N5HcH0x
l+f4PBHqDZ7ggzzAx8j5iDzrOB+xlyo+v4R+Yo/gV8fzpxzWfaLR3Cf8oF9D
vF8M/YRcvvuuLuu3VnZj35Ecs18t889tnneXD1HlaaV7NNBAU/F/X/d4Gki3
zTHrvmhmYWcz812yQVJxyfYeq38wunWAGhL2P2m4bmP6auOYoqySzZRGr4w+
96OY7xE+38J/N/fPvswPC9S+PEIGL/8Gwed7zofw/jV/J/gf4f4Fv9Ocn9iv
Rr5fBL6Q4FvF+Yo6Yt6AcT9qpoJl2uMWUh741ccw5WA+VcWRal+72Cfr8k2n
IsBGV3ad+vdsCmMrux+8vVTTLuYs58x2XZZsTPT5hVpPW2LsKL1xpStMvecU
c2Z/9JOHRqmh5W5xo7mM4X1y1vtOeFfxd0J88ET8cR6fcC9M/F4Q+Adz/qR8
8R+tJq+Hwosi12nX2xjmBfuC+522ZaNTUWRjttDkOU/xoLivuOuheaXHXE4r
S/pmPkK9fZj2fn4/VvVBK7ulfXrGwx79nr1/wjTtKR4RewGMuYZ/7D38B3H/
VPXsQI55poOqlH31GrWVzaSdvOP+w0qvGMMHYpLtTNcdcb+zsZoyPy09an7d
xGTGua8aNzjoVsa9LWrfHrZ/scCpSGhi11o+CzQcOs8y/fJbE5VtbOWtqw5F
QrXAlzgm5LON50Pw9wv3J/hUcD6inkpeT6rYlROrMhSyiTud2S7nRQZs4ZjA
x8n5EPincv70H9ULLWY=
       "], {{
         {RGBColor[0, 0, 1], AbsoluteThickness[2.], Opacity[0.3], EdgeForm[
          None], GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJwBEgLt/SFib1JiAgAAAKsAAAADAAAAQUAWGAMHCAMEREMbMTACCQQFQgcM
HAwQDQcIEQwNIigDEg0ONzYSQ0ILFxYDQDAEAwgHIB8UTjU0GhgGSB4RBw0M
CA4NGQkFBAkIDggJNA4JLiQcTUw6KRoGDBwLSDYTJRwQHRIOKBcDIxkFPTwZ
KyIYAxYEGisYRh0OHSYSS0ofGCIDDBEQER4QLyUQKiYdMyMFHicQHCQLDRIR
TCECTxgHIywZR0YPJS4cJy8QOjABBDAFMjECEjYRRjQPNDUPMTMFMDEFFkAE
SjYUODcSJjgSNzkUOzoBMDoCPDQJGTwJUU48Pz0ZUT0KPT4KNjcULD8ZMEAB
e70kC0IMRUMLQ0QGUE9CQEEBUEMGNkgRRkcdSUgTNEYOQ0UbJC0LSEkeGE8G
IUwVOkwCO006SksTH0oUTE0VNkoTQk8HT1AGPE40NU4KQ1BCPVE8TlEKm2Yb
sXMhslQXnpw1vXwkYXIWvoEnlm4ftFYaTTsVpl8Vpac7u3Uioq85rJ0KiagC
rZAPgm0eemcbbKI5jI0scG8geKs+Ul0Bs1UjqZoymFMhhoUph14qXXEBl2AV
uH8maI8tlXAgvH0lrpQUXJMTkoAnU7EhVIgXgL4nkFkPnKA1o5YfmmIyb6Qg
ZbQan60PboMfX5cVdrMjfrwlWrgmdLsic4ohZ5sbk1sTZncbjqwKZLIXGUd6
JA==
             "]], 
            PolygonBox[{{91, 185, 73, 19}, {161, 108, 57, 55}, {164, 163, 31, 
             32}, {145, 123, 36, 46}, {127, 107, 56, 38}, {94, 90, 38, 42}, {
             88, 182, 69, 11}, {117, 132, 40, 34}, {138, 137, 2, 33}, {139, 
             116, 34, 43}, {157, 158, 53, 10}, {153, 99, 51, 49}, {175, 174, 
             20, 57}, {131, 186, 75, 31}, {113, 165, 59, 1}, {107, 161, 55, 
             56}, {96, 152, 33, 21}, {87, 134, 41, 6}, {160, 159, 15, 53}, {
             89, 183, 71, 15}, {85, 140, 44, 35}, {143, 88, 11, 45}, {182, 
             122, 27, 69}, {181, 87, 6, 68}, {183, 106, 29, 71}, {167, 166, 
             21, 59}, {121, 170, 61, 63}, {141, 121, 63, 44}, {170, 120, 62, 
             61}, {176, 82, 1, 65}, {168, 169, 50, 2}, {185, 130, 30, 73}, {
             171, 142, 10, 62}, {132, 100, 23, 40}, {133, 101, 26, 41}, {129, 
             105, 47, 39}, {86, 139, 43, 26}, {114, 176, 65, 22}, {105, 126, 
             37, 47}, {99, 118, 35, 51}, {124, 104, 45, 36}, {148, 149, 32, 
             20}, {125, 145, 46, 37}, {106, 135, 42, 29}, {119, 181, 68, 
             27}, {109, 146, 39, 30}, {136, 97, 22, 23}, {98, 153, 49, 50}, {
             186, 92, 19, 75}}]}]}, {}, {}, {}, {}}, 
        {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[2.], 
         LineBox[{187, 117, 132, 100, 178, 84, 136, 97, 114, 176, 82, 93, 113,
           165, 167, 166, 95, 151, 96, 152, 83, 177, 115, 138, 137, 168, 169, 
          154, 98, 153, 99, 118, 179, 85, 140, 141, 121, 170, 120, 171, 142, 
          172, 157, 158, 156, 160, 159, 173, 144, 89, 183, 106, 135, 94, 90, 
          184, 127, 107, 161, 108, 162, 175, 174, 148, 149, 112, 111, 164, 
          163, 150, 110, 131, 186, 92, 147, 91, 185, 130, 109, 146, 128, 190, 
          129, 105, 126, 188, 125, 145, 123, 189, 124, 104, 143, 88, 182, 122,
           103, 155, 102, 119, 181, 87, 134, 133, 101, 180, 86, 139, 116, 
          187}]}}], {}}, {{}, 
      InterpretationBox[{
        TagBox[
         TagBox[
          {RGBColor[1, 0, 0], PointSize[Medium], AbsoluteThickness[2], 
           PointBox[{{-0.05394890518121984, 0.}, {-0.04715967991782626, 
            0.05755820246540245}, {0.20313889165984333`, 0.}, {
            0.1254747402698969, 
            0.1748626928905737}, {-0.04715967991782626, \
-0.05755820246540245}, {0.1254747402698969, -0.1748626928905737}}]},
          Annotation[#, "Charting`Private`Tag#1"]& ],
         {
         "WolframDynamicHighlight", <|
          "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>}], 
        StyleBox[
         DynamicBox[(Charting`HighlightActionBox["DynamicHighlight", {}, 
           Slot["HighlightElements"], 
           Slot["LayoutOptions"], 
           Slot["Meta"], 
           Charting`HighlightActionFunction["DynamicHighlight", {{
              Annotation[{
                Directive[
                 AbsoluteThickness[2], 
                 RGBColor[1, 0, 0], 
                 PointSize[Medium]], 
                
                Point[{{-0.05394890518121984, 0.}, {-0.04715967991782626, 
                 0.05755820246540245}, {0.20313889165984333`, 0.}, {
                 0.1254747402698969, 
                 0.1748626928905737}, {-0.04715967991782626, \
-0.05755820246540245}, {0.1254747402698969, -0.1748626928905737}}]}, 
               "Charting`Private`Tag#1"]}}, <|
            "HighlightElements" -> <|
              "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>, 
             "LayoutOptions" -> <|
              "PanelPlotLayout" -> <||>, 
               "PlotRange" -> {{-0.05394890518121984, 
                0.20313889165984333`}, {-0.1748626928905737, 
                0.1748626928905737}}, 
               "Frame" -> {{False, False}, {False, False}}, 
               "AxesOrigin" -> {0, 0}, "ImageSize" -> {360, 360/GoldenRatio}, 
               "Axes" -> {True, True}, "LabelStyle" -> {}, "AspectRatio" -> 
               GoldenRatio^(-1), "DefaultStyle" -> {
                 Directive[
                  AbsoluteThickness[2], 
                  RGBColor[1, 0, 0], 
                  PointSize[Medium]]}, 
               "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
                   Identity[
                    Part[#, 1]], 
                   Identity[
                    Part[#, 2]]}& ), 
                 "ScalingFunctions" -> {{Identity, Identity}, {
                   Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
               False|>, 
             "Meta" -> <|
              "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, 
               "Function" -> ListPlot, "GroupHighlight" -> False|>|>]]& )[<|
           "HighlightElements" -> <|
             "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>, 
            "LayoutOptions" -> <|
             "PanelPlotLayout" -> <||>, 
              "PlotRange" -> {{-0.05394890518121984, 
               0.20313889165984333`}, {-0.1748626928905737, 
               0.1748626928905737}}, 
              "Frame" -> {{False, False}, {False, False}}, 
              "AxesOrigin" -> {0, 0}, "ImageSize" -> {360, 360/GoldenRatio}, 
              "Axes" -> {True, True}, "LabelStyle" -> {}, "AspectRatio" -> 
              GoldenRatio^(-1), "DefaultStyle" -> {
                Directive[
                 AbsoluteThickness[2], 
                 RGBColor[1, 0, 0], 
                 PointSize[Medium]]}, 
              "HighlightLabelingFunctions" -> <|
               "CoordinatesToolOptions" -> ({
                  Identity[
                   Part[#, 1]], 
                  Identity[
                   Part[#, 2]]}& ), 
                "ScalingFunctions" -> {{Identity, Identity}, {
                  Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
              False|>, 
            "Meta" -> <|
             "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, 
              "Function" -> ListPlot, "GroupHighlight" -> False|>|>],
          ImageSizeCache->{{4.503599627370496*^15, -4.503599627370496*^15}, {
           4.503599627370496*^15, -4.503599627370496*^15}}],
         Selectable->False]},
       Annotation[{{
          Annotation[{
            Directive[
             AbsoluteThickness[2], 
             RGBColor[1, 0, 0], 
             PointSize[Medium]], 
            
            Point[{{-0.05394890518121984, 0.}, {-0.04715967991782626, 
             0.05755820246540245}, {0.20313889165984333`, 0.}, {
             0.1254747402698969, 
             0.1748626928905737}, {-0.04715967991782626, \
-0.05755820246540245}, {0.1254747402698969, -0.1748626928905737}}]}, 
           "Charting`Private`Tag#1"]}}, <|
        "HighlightElements" -> <|
          "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>, 
         "LayoutOptions" -> <|
          "PanelPlotLayout" -> <||>, 
           "PlotRange" -> {{-0.05394890518121984, 
            0.20313889165984333`}, {-0.1748626928905737, 0.1748626928905737}},
            "Frame" -> {{False, False}, {False, False}}, 
           "AxesOrigin" -> {0, 0}, "ImageSize" -> {360, 360/GoldenRatio}, 
           "Axes" -> {True, True}, "LabelStyle" -> {}, "AspectRatio" -> 
           GoldenRatio^(-1), "DefaultStyle" -> {
             Directive[
              AbsoluteThickness[2], 
              RGBColor[1, 0, 0], 
              PointSize[Medium]]}, 
           "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
               Identity[
                Part[#, 1]], 
               Identity[
                Part[#, 2]]}& ), 
             "ScalingFunctions" -> {{Identity, Identity}, {
               Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
           False|>, 
         "Meta" -> <|
          "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
           ListPlot, "GroupHighlight" -> False|>|>, 
        "DynamicHighlight"]], {{}, {}}}},
    AspectRatio->1,
    Axes->{False, False},
    AxesLabel->{
      FormBox[
       TagBox[
        StyleBox["\"p[1]\"", Bold, 14, StripOnInput -> False], HoldForm], 
       TraditionalForm], 
      FormBox[
       TagBox[
        StyleBox["\"p[4]\"", Bold, 14, StripOnInput -> False], HoldForm], 
       TraditionalForm]},
    AxesOrigin->{0, 0},
    DisplayFunction->Identity,
    Frame->{{True, True}, {True, True}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    ImagePadding->All,
    Method->{
     "DefaultGraphicsInteraction" -> {
       "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
        "Effects" -> {
         "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
          "Droplines" -> {
           "freeformCursorMode" -> True, 
            "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
      "ScalingFunctions" -> None, "TransparentPolygonMesh" -> True, 
      "AxesInFront" -> True},
    PlotLabel->FormBox[
      StyleBox["\"\[Theta] = 0.441786\"", Bold, 16, StripOnInput -> False], 
      TraditionalForm],
    PlotRange->{{-0.5, 0.5}, {-0.5, 0.5}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.02], 
       Scaled[0.02]}},
    Ticks->{Automatic, Automatic}], ",", 
   GraphicsBox[{{GraphicsComplexBox[CompressedData["
1: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
       "], {{
         {RGBColor[0, 0, 1], AbsoluteThickness[2.], Opacity[0.3], EdgeForm[
          None], GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJwBsQJO/SFib1JiAgAAAOAAAAADAAAARiEgX1E+HQEGWVgfa2pgY2JAaQYM
OC0iWiUQEgoLEwsMFAwNFQ0OQgkQDQYHIi0OSBEXGRITGhMUJyYVMikYKhkb
VksaIR0FEQkKZ2ZRIx8IWEAJYmAKamkLBg0MIg0HXBIYQ0IPCREQChIRDRUU
JBUOPDAlWkgWbB0GDBQTZB8JXBcRExoZPTIqJhoUSxsZNisdV1YoEhkYPgYB
aGEgXl0pDSIONCMILiQOECUPNTEmLCIHaCEFFSYUCxMSGSoYMyobHSsBZiwH
MSgaOycVUWYHOS4OJTAPVVQyJjEaKjIYITYdJzUmIzcfLTkOXz8CMz0qPz4B
Bj4HRT8BMDoPLDgiT1ACQUADY0EEZWRCD0IQREMPZUMIQ0cIEUgQLzsVSEkW
SkkXGksZTEscS0wbTkwcTE0bCUAKP08CPlEHQGIKZ1IeQVMEMlQpPVUyS1Yc
KFYaVlccH1gJQFgDWFkDW1oWSFoQWlslElwRXVwYJC8VUlECXV4XUV8CP18+
YWAECmALIGEEa2EFXF0XYGIEYmMEQWNAH2QIQmQJZGUIQ2VCKV0YSUgXLGYe
UmdRvI4pr6Az1dZPfdEBamsFYGoLYWgFbWxpC2kMs7Qe3N1TiKk65eFXkdMr
jp4p0JBOpNQ2IWggkqErftsDhcVH6povZmce2NpS2YIebWoFwbJB7Zwwk9dQ
bn4Dubok6Jgtx4onj89N0r9Fvb4opqc3eawW4J8ze64bam1p05IrHWwFbG0F
YWtgaWwGu3Yv53EjtXAs6XQul4Mg28ADm+0w4eNXeMkxjL0oh7kkgN5UsHwc
q6o8rHcWicg7ysxJoOAzy3kW4rAci8cnxMNGdMYuvuQomekuc+gtpZQCg8Ig
hOcjduovzY1Ko6I0uLdEgrMev4FFQE7GOw==
             "]], 
            PolygonBox[{{162, 132, 35, 52}, {114, 163, 52, 8}, {150, 151, 32, 
             4}, {117, 184, 68, 15}, {168, 115, 45, 56}, {170, 155, 48, 60}, {
             178, 220, 83, 65}, {127, 120, 49, 53}, {122, 205, 74, 23}, {212, 
             145, 43, 54}, {192, 193, 65, 3}, {124, 208, 78, 28}, {161, 125, 
             1, 43}, {158, 236, 94, 41}, {183, 182, 67, 68}, {197, 114, 8, 
             71}, {195, 111, 33, 70}, {119, 235, 91, 22}, {148, 216, 82, 2}, {
             200, 139, 39, 59}, {186, 187, 47, 36}, {236, 122, 23, 94}, {152, 
             134, 57, 45}, {112, 168, 56, 44}, {228, 229, 87, 40}, {198, 135, 
             36, 46}, {223, 128, 84, 85}, {149, 230, 89, 31}, {194, 196, 70, 
             32}, {138, 127, 53, 39}, {214, 147, 80, 79}, {177, 213, 79, 
             63}, {215, 165, 2, 80}, {209, 210, 69, 1}, {207, 123, 27, 77}, {
             222, 188, 41, 84}, {206, 143, 77, 76}, {218, 217, 30, 82}, {230, 
             110, 3, 89}, {235, 157, 37, 91}, {156, 136, 58, 48}, {173, 223, 
             85, 61}, {157, 171, 60, 37}, {221, 150, 4, 83}, {111, 164, 54, 
             33}, {129, 177, 63, 69}, {167, 149, 31, 55}, {113, 166, 55, 
             35}, {169, 117, 15, 58}, {180, 181, 44, 30}, {154, 137, 59, 
             47}, {174, 175, 51, 27}, {201, 140, 40, 49}, {227, 226, 28, 
             87}, {141, 202, 73, 74}, {144, 206, 76, 78}, {204, 203, 22, 
             73}, {159, 173, 61, 51}, {134, 153, 46, 57}, {182, 133, 71, 
             67}}]}]}, {}, {}, {}, {}}, 
        {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[2.], 
         LineBox[{211, 146, 161, 125, 209, 210, 191, 129, 177, 213, 214, 147, 
          215, 165, 148, 216, 218, 217, 130, 179, 180, 181, 112, 168, 115, 
          232, 152, 134, 153, 233, 116, 198, 135, 185, 186, 187, 118, 234, 
          154, 137, 200, 139, 199, 138, 127, 120, 201, 140, 189, 190, 228, 
          229, 225, 227, 226, 176, 124, 208, 144, 206, 143, 207, 123, 174, 
          175, 160, 224, 159, 173, 223, 128, 222, 188, 142, 158, 236, 122, 
          205, 141, 202, 204, 203, 121, 172, 119, 235, 157, 171, 170, 155, 
          237, 156, 136, 169, 117, 184, 183, 182, 133, 197, 114, 163, 162, 
          132, 231, 113, 166, 167, 149, 230, 110, 126, 219, 192, 193, 178, 
          220, 221, 150, 151, 131, 194, 196, 195, 111, 164, 212, 145, 
          211}]}}], {}}, {{}, 
      InterpretationBox[{
        TagBox[
         TagBox[
          {RGBColor[1, 0, 0], PointSize[Medium], AbsoluteThickness[2], 
           PointBox[{{-0.10157730540543894`, 0.}, {-0.08692000551159278, 
            0.06135725341404979}, {0.2835306787518963, 0.}, {
            0.1763915949092824, 
            0.16067802896433792`}, {-0.08692000551159278, \
-0.06135725341404979}, {0.1763915949092824, -0.16067802896433792`}}]},
          Annotation[#, "Charting`Private`Tag#1"]& ],
         {
         "WolframDynamicHighlight", <|
          "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>}], 
        StyleBox[
         DynamicBox[(Charting`HighlightActionBox["DynamicHighlight", {}, 
           Slot["HighlightElements"], 
           Slot["LayoutOptions"], 
           Slot["Meta"], 
           Charting`HighlightActionFunction["DynamicHighlight", {{
              Annotation[{
                Directive[
                 AbsoluteThickness[2], 
                 RGBColor[1, 0, 0], 
                 PointSize[Medium]], 
                
                Point[{{-0.10157730540543894`, 0.}, {-0.08692000551159278, 
                 0.06135725341404979}, {0.2835306787518963, 0.}, {
                 0.1763915949092824, 
                 0.16067802896433792`}, {-0.08692000551159278, \
-0.06135725341404979}, {0.1763915949092824, -0.16067802896433792`}}]}, 
               "Charting`Private`Tag#1"]}}, <|
            "HighlightElements" -> <|
              "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>, 
             "LayoutOptions" -> <|
              "PanelPlotLayout" -> <||>, 
               "PlotRange" -> {{-0.10157730540543894`, 
                0.2835306787518963}, {-0.16067802896433792`, 
                0.16067802896433792`}}, 
               "Frame" -> {{False, False}, {False, False}}, 
               "AxesOrigin" -> {0, 0}, "ImageSize" -> {360, 360/GoldenRatio}, 
               "Axes" -> {True, True}, "LabelStyle" -> {}, "AspectRatio" -> 
               GoldenRatio^(-1), "DefaultStyle" -> {
                 Directive[
                  AbsoluteThickness[2], 
                  RGBColor[1, 0, 0], 
                  PointSize[Medium]]}, 
               "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
                   Identity[
                    Part[#, 1]], 
                   Identity[
                    Part[#, 2]]}& ), 
                 "ScalingFunctions" -> {{Identity, Identity}, {
                   Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
               False|>, 
             "Meta" -> <|
              "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, 
               "Function" -> ListPlot, "GroupHighlight" -> False|>|>]]& )[<|
           "HighlightElements" -> <|
             "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>, 
            "LayoutOptions" -> <|
             "PanelPlotLayout" -> <||>, 
              "PlotRange" -> {{-0.10157730540543894`, 
               0.2835306787518963}, {-0.16067802896433792`, 
               0.16067802896433792`}}, 
              "Frame" -> {{False, False}, {False, False}}, 
              "AxesOrigin" -> {0, 0}, "ImageSize" -> {360, 360/GoldenRatio}, 
              "Axes" -> {True, True}, "LabelStyle" -> {}, "AspectRatio" -> 
              GoldenRatio^(-1), "DefaultStyle" -> {
                Directive[
                 AbsoluteThickness[2], 
                 RGBColor[1, 0, 0], 
                 PointSize[Medium]]}, 
              "HighlightLabelingFunctions" -> <|
               "CoordinatesToolOptions" -> ({
                  Identity[
                   Part[#, 1]], 
                  Identity[
                   Part[#, 2]]}& ), 
                "ScalingFunctions" -> {{Identity, Identity}, {
                  Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
              False|>, 
            "Meta" -> <|
             "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, 
              "Function" -> ListPlot, "GroupHighlight" -> False|>|>],
          
          ImageSizeCache->{{4.503599627370496*^15, -4.503599627370496*^15}, {
           4.503599627370496*^15, -4.503599627370496*^15}}],
         Selectable->False]},
       Annotation[{{
          Annotation[{
            Directive[
             AbsoluteThickness[2], 
             RGBColor[1, 0, 0], 
             PointSize[Medium]], 
            
            Point[{{-0.10157730540543894`, 0.}, {-0.08692000551159278, 
             0.06135725341404979}, {0.2835306787518963, 0.}, {
             0.1763915949092824, 
             0.16067802896433792`}, {-0.08692000551159278, \
-0.06135725341404979}, {0.1763915949092824, -0.16067802896433792`}}]}, 
           "Charting`Private`Tag#1"]}}, <|
        "HighlightElements" -> <|
          "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>, 
         "LayoutOptions" -> <|
          "PanelPlotLayout" -> <||>, 
           "PlotRange" -> {{-0.10157730540543894`, 
            0.2835306787518963}, {-0.16067802896433792`, 
            0.16067802896433792`}}, 
           "Frame" -> {{False, False}, {False, False}}, 
           "AxesOrigin" -> {0, 0}, "ImageSize" -> {360, 360/GoldenRatio}, 
           "Axes" -> {True, True}, "LabelStyle" -> {}, "AspectRatio" -> 
           GoldenRatio^(-1), "DefaultStyle" -> {
             Directive[
              AbsoluteThickness[2], 
              RGBColor[1, 0, 0], 
              PointSize[Medium]]}, 
           "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
               Identity[
                Part[#, 1]], 
               Identity[
                Part[#, 2]]}& ), 
             "ScalingFunctions" -> {{Identity, Identity}, {
               Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
           False|>, 
         "Meta" -> <|
          "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
           ListPlot, "GroupHighlight" -> False|>|>, 
        "DynamicHighlight"]], {{}, {}}}},
    AspectRatio->1,
    Axes->{False, False},
    AxesLabel->{
      FormBox[
       TagBox[
        StyleBox["\"p[1]\"", Bold, 14, StripOnInput -> False], HoldForm], 
       TraditionalForm], 
      FormBox[
       TagBox[
        StyleBox["\"p[4]\"", Bold, 14, StripOnInput -> False], HoldForm], 
       TraditionalForm]},
    AxesOrigin->{0, 0},
    DisplayFunction->Identity,
    Frame->{{True, True}, {True, True}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    ImagePadding->All,
    Method->{
     "DefaultGraphicsInteraction" -> {
       "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
        "Effects" -> {
         "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
          "Droplines" -> {
           "freeformCursorMode" -> True, 
            "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
      "ScalingFunctions" -> None, "TransparentPolygonMesh" -> True, 
      "AxesInFront" -> True},
    PlotLabel->FormBox[
      StyleBox["\"\[Theta] = 0.490874\"", Bold, 16, StripOnInput -> False], 
      TraditionalForm],
    PlotRange->{{-0.5, 0.5}, {-0.5, 0.5}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.02], 
       Scaled[0.02]}},
    Ticks->{Automatic, Automatic}], ",", 
   GraphicsBox[{{GraphicsComplexBox[CompressedData["
1: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

       "], {{
         {RGBColor[0, 0, 1], AbsoluteThickness[2.], Opacity[0.3], EdgeForm[
          None], GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJxNlndsl1UUhk8LZRQKlAK2QhnVolQqggruYilFpcpSUVRGEWSWvSngitsY
t6IxmriixhlxxK1RjNs44o57xL0T1/vmPIb+8eS73/3de+457zn3fL9BzUsm
txRGxN+inZghpotdxBqxWtSLI0SNGCK6iw6io1gnFouFYqMoEiWiG2Ovq8Z2
F7FJtIoG0SiKRZkoZ49t92ZtV9GHp23uK4ayvhd7va6CfT3EMtEsSsVObXwZ
x3k9RS37+4pKzvM5/Xl63wCe9ms39HA8K8UpnDlH7MW+Ymzat/3EMGw3Yb8f
utajSQd87oYWXdCoFR27ov2u6FyDjsVo3Z15a787sRdhrwR7vfGpFu3s2ywx
Ex1LiLEP+8p5b0KbXtioxP8V6LuHqMNmLb5UsL+ZcY82mlai1UQxCP0GsH4V
mu4pRhBvYZsceP9wUcV7EbmwfqPR2jlYKxax/xCxdxu9qtFjMLm0jaViCdpt
5jfPbxDrxXGxo/7a6ljG7zXYHsm89ZpNHBXEPAzd5hGD/T9A7M97f3z32oOI
37FPFfuI9jwHM64mLtfJieIEcjAR21WcOYpzh3NWFXEfiHZHc57PGhNZkwVo
6nFH4qojNts4FDv28WB0rkFr+7UGW7a5AP0a0b0BLQ8TY/H/GN7bMdfAeCb7
yrDje9s5sm+MRYdp4vDIXuTcNJGfIxk79gm89+N5FDlq4r0vOk1gzWhxUmQ9
Wc9JkbU6gHfnajLzVcQ6hXinoGkhPk7Fz+PRoTM6HUv+GpkvZs00Yqkjr87p
Bn4bwrtzPRTdV3OWczmdvLkPtETWs+dmkNNGNHXf8910jbo+T2a8c+Q98G89
mGtmfih7y3jOws5s9rvWXdu+zwPRaQ5a+Tk3sr69Zn5kPc7lt//7wDw0ns94
IP75t3J0WoCG4xg7Jt9198GOaLIodnyPPO4U2ZcWEtdCNPK4Ho0K0GsJ8y2s
6YQGni/luZSx55ehj5/LI/uhxyuYX857KXGsJC4/VzG2Lq61SnRcSdz15Nex
TELTKuZ8x5z3i8TP+O8a2YBOxr3JdfW7uDmy3tazxrVUw7vHvpP+1pSg2Tp0
ek+8HlnjL4ptkf3Ad7SVfYtZb622RPbQjeCxe2mxHHwksn/cI7ailX1/F/9/
EBdG1sNP4obIe2bfH8X/38RNkT3jD/Fn5F0agybW7HZxNfn8RfwaeS/fEddF
9kWf8ypnfSCuiuyt34sf0buVeDbym2PxXb5GPEauiuT46ZG9+SvxtRgv3hJv
E+O14tvIvvOmeCOyfku19+HI3nO9eC2yt/4j7kfnJ8STkf26vdafFtl3TyX3
Bfi1Bd/OFtsj7+Z34iHsO5ZNrBnLuIF9rcx/JM6I/D7cKZ6LrNszxcWR9+4s
cQn2zxUvRPbPB8RLkfV8r3g+sv5vFc9G1sbT4pnIb8Y24hyJj9ZiFOfcwVkF
missyF78BX54fiv6Wtsb0WUEun6Jts7teeT3c/FZ5P/Wf6kD18At5M+5+1h8
EvkteUpcHvlddJ4fJNefss5rnPMPybvvy1pivFT8FdmjL4ise9f8N5H1MR5t
zkGf98UVkd8/63c+Gl4ZWZeuO9fRfcT7ing58htlXW/j3MfFZZH/KbaTp57k
8G7y6DtxV+S9+A8djO66
             "]], PolygonBox[CompressedData["
1:eJwt03lMz3Ecx/F3/SzMkfzJP4o5YuSYsxyzRgzzc7TCrNba+idWa+tf1oxi
Zo7YHKUy982YGIV/MBazGU3NuSQyd4znu8/rj8c+3+Pz/Xw/n/eRmLsuWhhr
ZhnogQbUYChm4BS6kIXe2IjbSMMEnEXfGLP1jCNRhlv6dgReYi+GYxIq0Iv5
+YyJuI5qzME07MRTzMNAGHP/MYzDVLzHO+3F59SiEalYjircxHSMx1afyxoF
jEOwHV8QRRLeYBOSsQBNmpOkPW1BT77PYxyEc+jHfRFjAl6hFaMUwxvYgQgm
Yh9aFAuPwRE0Yz5W4AT6sF6hxwWXEMd9DuMYnMZrrZ2Ne/iL1ZiFy3rm15N1
lruYqTN1aY1s5fAJfiMT6Zr7Eyv1jZ/tPONoC2f8hR86i8+J5/0VxbJEZ/2u
s0SU23rGFAs59r3uwirt+Zty5rlahv7Mv6DYFitXVcpdgWJz0kJteYz+4Jli
42sO4P0xxa7UQi2eUW68Jh/jq/41F534bKH2luIaDmIJpuAQOnTtNXcHxzHM
Qs17LexnHGuhJrxXIjxba6FnDuOT1o5q7XYs0j8qlYN01cAe1FnopVTNPYDF
+uYjyjFYz+7jgXLtz9os1IzHY6H26jEp1Z4910ct9F6m9rrButuqe89XldMS
nclz9wizlcPd2GahN72nvDY3W+jNHOXig/7te/BeeGuhl7wnLirHnluvqYf+
b+7X6B+xMWEz3tv+7DleKFf+6j8nDIFg
             "]]}]}, {}, {}, {}, {}}, 
        {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[2.], 
         LineBox[CompressedData["
1:eJwt0vk2F3EYwOHfj2wVcQluySW4AF0DLSjJkhZLSWRrkyW7SrJkyxYJqYhE
EqkseRz+eM7nvO/5zpw5MxOfeDYhKRgIBHL4wCibbFFKJ9cp44SDKfqKLqqI
tavUbqo5ZX6g+TzhtPmx9lBDtPmpFvCOSeqIsa/VPtKJMBdqB02cMTfqIBlE
mYv1OXlc4aRdm95lhKtsUMIPfrJOJm+5TKRrWnWYIYLmkMMXwn95zx3WaCbO
vkVv850iVrlEPwM8Y58G3rDHNXaZYoVlvlFPuHumaS+p5DLBOEt85cLxN3rI
Do/4wic+M88iC1zkNX/4yzbltJPNb+4zww3G+EcFYZ7lnM5xk1lu8ZHzvOAl
9wh1Nlmz+MV04OgfOgB2hGMN
          "]]}}], {}}, {{}, 
      InterpretationBox[{
        TagBox[
         TagBox[
          {RGBColor[1, 0, 0], PointSize[Medium], AbsoluteThickness[2], 
           PointBox[{{-0.1438507414523405, 0.}, {-0.12028730745899054`, 
            0.06566767948749361}, {0.31865945156073566`, 0.}, {
            0.1957455356501698, 
            0.15463202492139808`}, {-0.12028730745899054`, \
-0.06566767948749361}, {0.1957455356501698, -0.15463202492139808`}}]},
          Annotation[#, "Charting`Private`Tag#1"]& ],
         {
         "WolframDynamicHighlight", <|
          "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>}], 
        StyleBox[
         DynamicBox[(Charting`HighlightActionBox["DynamicHighlight", {}, 
           Slot["HighlightElements"], 
           Slot["LayoutOptions"], 
           Slot["Meta"], 
           Charting`HighlightActionFunction["DynamicHighlight", {{
              Annotation[{
                Directive[
                 AbsoluteThickness[2], 
                 RGBColor[1, 0, 0], 
                 PointSize[Medium]], 
                
                Point[{{-0.1438507414523405, 0.}, {-0.12028730745899054`, 
                 0.06566767948749361}, {0.31865945156073566`, 0.}, {
                 0.1957455356501698, 
                 0.15463202492139808`}, {-0.12028730745899054`, \
-0.06566767948749361}, {0.1957455356501698, -0.15463202492139808`}}]}, 
               "Charting`Private`Tag#1"]}}, <|
            "HighlightElements" -> <|
              "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>, 
             "LayoutOptions" -> <|
              "PanelPlotLayout" -> <||>, 
               "PlotRange" -> {{-0.1438507414523405, 
                0.31865945156073566`}, {-0.15463202492139808`, 
                0.15463202492139808`}}, 
               "Frame" -> {{False, False}, {False, False}}, 
               "AxesOrigin" -> {0, 0}, "ImageSize" -> {360, 360/GoldenRatio}, 
               "Axes" -> {True, True}, "LabelStyle" -> {}, "AspectRatio" -> 
               GoldenRatio^(-1), "DefaultStyle" -> {
                 Directive[
                  AbsoluteThickness[2], 
                  RGBColor[1, 0, 0], 
                  PointSize[Medium]]}, 
               "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
                   Identity[
                    Part[#, 1]], 
                   Identity[
                    Part[#, 2]]}& ), 
                 "ScalingFunctions" -> {{Identity, Identity}, {
                   Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
               False|>, 
             "Meta" -> <|
              "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, 
               "Function" -> ListPlot, "GroupHighlight" -> False|>|>]]& )[<|
           "HighlightElements" -> <|
             "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>, 
            "LayoutOptions" -> <|
             "PanelPlotLayout" -> <||>, 
              "PlotRange" -> {{-0.1438507414523405, 
               0.31865945156073566`}, {-0.15463202492139808`, 
               0.15463202492139808`}}, 
              "Frame" -> {{False, False}, {False, False}}, 
              "AxesOrigin" -> {0, 0}, "ImageSize" -> {360, 360/GoldenRatio}, 
              "Axes" -> {True, True}, "LabelStyle" -> {}, "AspectRatio" -> 
              GoldenRatio^(-1), "DefaultStyle" -> {
                Directive[
                 AbsoluteThickness[2], 
                 RGBColor[1, 0, 0], 
                 PointSize[Medium]]}, 
              "HighlightLabelingFunctions" -> <|
               "CoordinatesToolOptions" -> ({
                  Identity[
                   Part[#, 1]], 
                  Identity[
                   Part[#, 2]]}& ), 
                "ScalingFunctions" -> {{Identity, Identity}, {
                  Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
              False|>, 
            "Meta" -> <|
             "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, 
              "Function" -> ListPlot, "GroupHighlight" -> False|>|>],
          
          ImageSizeCache->{{4.503599627370496*^15, -4.503599627370496*^15}, {
           4.503599627370496*^15, -4.503599627370496*^15}}],
         Selectable->False]},
       Annotation[{{
          Annotation[{
            Directive[
             AbsoluteThickness[2], 
             RGBColor[1, 0, 0], 
             PointSize[Medium]], 
            
            Point[{{-0.1438507414523405, 0.}, {-0.12028730745899054`, 
             0.06566767948749361}, {0.31865945156073566`, 0.}, {
             0.1957455356501698, 
             0.15463202492139808`}, {-0.12028730745899054`, \
-0.06566767948749361}, {0.1957455356501698, -0.15463202492139808`}}]}, 
           "Charting`Private`Tag#1"]}}, <|
        "HighlightElements" -> <|
          "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>, 
         "LayoutOptions" -> <|
          "PanelPlotLayout" -> <||>, 
           "PlotRange" -> {{-0.1438507414523405, 
            0.31865945156073566`}, {-0.15463202492139808`, 
            0.15463202492139808`}}, 
           "Frame" -> {{False, False}, {False, False}}, 
           "AxesOrigin" -> {0, 0}, "ImageSize" -> {360, 360/GoldenRatio}, 
           "Axes" -> {True, True}, "LabelStyle" -> {}, "AspectRatio" -> 
           GoldenRatio^(-1), "DefaultStyle" -> {
             Directive[
              AbsoluteThickness[2], 
              RGBColor[1, 0, 0], 
              PointSize[Medium]]}, 
           "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
               Identity[
                Part[#, 1]], 
               Identity[
                Part[#, 2]]}& ), 
             "ScalingFunctions" -> {{Identity, Identity}, {
               Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
           False|>, 
         "Meta" -> <|
          "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
           ListPlot, "GroupHighlight" -> False|>|>, 
        "DynamicHighlight"]], {{}, {}}}},
    AspectRatio->1,
    Axes->{False, False},
    AxesLabel->{
      FormBox[
       TagBox[
        StyleBox["\"p[1]\"", Bold, 14, StripOnInput -> False], HoldForm], 
       TraditionalForm], 
      FormBox[
       TagBox[
        StyleBox["\"p[4]\"", Bold, 14, StripOnInput -> False], HoldForm], 
       TraditionalForm]},
    AxesOrigin->{0, 0},
    DisplayFunction->Identity,
    Frame->{{True, True}, {True, True}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    ImagePadding->All,
    Method->{
     "DefaultGraphicsInteraction" -> {
       "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
        "Effects" -> {
         "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
          "Droplines" -> {
           "freeformCursorMode" -> True, 
            "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
      "ScalingFunctions" -> None, "TransparentPolygonMesh" -> True, 
      "AxesInFront" -> True},
    PlotLabel->FormBox[
      StyleBox["\"\[Theta] = 0.539961\"", Bold, 16, StripOnInput -> False], 
      TraditionalForm],
    PlotRange->{{-0.5, 0.5}, {-0.5, 0.5}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.02], 
       Scaled[0.02]}},
    Ticks->{Automatic, Automatic}], ",", 
   GraphicsBox[{{GraphicsComplexBox[CompressedData["
1:eJx1VntQlGUXXy8xjoiiQ1k7Wjhe2jTNzC3x0uFzp6+isoUcw7JXu0AqFcVF
ZtE+7eJmfRKIGNVYsE6akQnmyvWFw+5ykUVoXdBdqbCMGLQiI0irr/bL9+n3
OPM27j9nfvuc55zfuT3nnfJEakLScIPBEDnMYLgkG5wzri0I1NMxITn7yXU1
5oJmiWeNOXq2x+yU8mL16Bz7wLsSqwIT8CQhJYZ9YNgHnjvhgBKwtksMv3o/
wHoJ/8DwDwz/wPAPDP/A6WsubFHtfonBRx+n3i+wXoIPMPgAgw8w+ACDz5Xy
rI9b71cv4R8Y/oHhX68PCX1gv+avms4IySc06ZUY8qwmS9ig/d5X8X+r+F/q
wy9wk+bHR7iPegDfqOk3SLvRGu6kK/mBPWDoIQ78D6yXiA8Y+dKfgyf86/sG
/+O+Pl7oIz7UGRh24OdKeYQ9fX+AL/7X85f11vrPzfM0vQ/45eTPhw46jtFs
jXcdZWn9UEFLBGbTuIXTFEuLvAd9nEP6NPtl3F27qTkU+ozswg7jXpTwJ++5
hD5BH34hwQf+04QdukHkS+YFWN9Heon8wy94dFa8nRDxbSNfU3NJ7w2J39fu
vSH7FPUARp6RR/AGH+QfWL7Lwr6MBxh5wjzq64R8gj/yAx7A8IP84H/EC7uo
F/oJcwOMvto9Ovd+U+lxQv2gp5838EAekQ/9uwI+kLivf09QL/DBvIAP8oL3
FPfiylcfsSodkgcw6on8Ij/IP/IDP+ADP8gX7Oj7G3XR9wnyCIz7sAd9xIs8
43zHlqILBx01sr8rg6v2WbtbSb/H+r+bEmMqVWVfdg/ln2n5juV79OXauc+r
YSpfv+Li2oEu3z/2sz/4qMccdVjm84f+/Dz7wH6Cvv47IPEx+02KpVzW5d6n
L/hDm6sIfFF38NXvnXm1yjRbjkvWY+bSib+2zPJQ1E3l4aX/qqdNsYXTbM+6
eE50W2/Pt0ekzC9su1XZ6eK8f2eXW+s+perz419Wew/RjGWFR0OrmZIz/lgT
MLTR4Ozz803jmOxfPuAPnW6h4JzwW5SpHt5Wecl/LN8/atERc1QN/zQm3WX0
3kcjHTlu48wanj/h442qfS/Nzq3elbK/lquLvlkVMd5HZcl/FqUEKzjfefqr
UNFx+njVunUD75bxoK33i9BpD1eM2FFvjDvAa2Li/6OGNcj+8R72jCh1dVLy
UAZZbC/x+lzDuZ6rG7iz+fsce1oJRSWdS4yI98u+gb9i4Y/irmrJVsP28Yiv
zr7i2FRJ4L9Y8CfwnSz4yv3VJupNe3+Jtdu9l/cZ8uET+aCDFutb9k8bKa+T
lliq3FKv/vvFtymey9+P80R95PdAg5Z3F6e2TJ9l+VWV7yvmKkNderep9PJ3
3krRH+yuvDRvSVIP/PT7ctuOsbMVi5Nvjk84ZtzT+I99eeG65hKr8pHs1/Af
tX5l5FPOb+rKFRGNHbJP8T0xesP4Nx1qvrSPOYL9U8I+4T7Ocb89U7sv57BB
zA+h/qgn8qP/DkoW+ZH7PFvES8gP6gC/3WK+ZX0qRX3kfldFPajzo4eWmB6s
5gWTN8dYTjllvw2IfpP9+57oXzrZH7chcN5Hp6fe8ULAd5ha+yYvsDiOUEbT
7+d7ptTzqA0r91vrqil5Qvt0W209z9haMV1JOUobz9k2q4qHMW8j52jzxl17
Xwwvfbye7+nP9BnjDjPs/yjs8xxnfFpgbgcl/v7wcaN3j8QLBSbcjxH3CXMf
LaSMb6aIT/J9RvAl8FUEX/meZIj3hMA/XfCX+zln5J0vqYpbzu0Ty21Zam8F
J+88scASc0LuF8xz/6A2z/L/c3HdKwaMNXKOg2eiXrMn1NGBF61PD3hd5BSS
n0wtznH8z03b4pdlBCLdbJ82ZmJB1iH2/fyKah4s553HdhXZ08r43o3BpaZb
KuQ+/E3Y5w/mf/i6Y/EuWrv7m7bQalX2WZ/wx/6TBRXW6/fQ7qz8uyLu+uv9
+vt9vF28jzyqI6zYPq+Mfvm59WTPUB3ft/oBsyWmWfoJV53BEDUxbU7KCljz
2Ej7HCl9TazkPLXAYstknI8Q54Tz57Zr53LuEkT+CPG5RXyE+BaJ+Gj9na9/
HSIHP+Ld9te3XhWB/3bBX9Znq6iPzCck8rlF5JMSYjOy1dub6GKff39K0C33
zUKxbxjv3dvivWPoG85q+vIdSxb7jfH+ThDvL4PvesFX7o/BYm1/EOqTKOpD
yHevyLfco+1iPxPe8Ylvjn1VbarnzDEPLzKlttKzYelN5uUuPhC+SAnktVPX
J6bt9rQaTtuaG2s55aOuZSn/dSx2yn1YLPYhP/d1V1jpMA9Xlf8w1dZ2iMsn
tS2xrPNT3+7KdDWshHC/Vdyn6CD19pjf4knDE6cqnirJZ5zgQ+CTJPgQ+HgF
Hzo6zOs0L6/hyIdeG19Q6OTIsblDLbMaOTrJkRmwOqT/sPc0/5wwiT4z/tZB
kXUbe3rMhVJ/uNAnnHfWaufS/nBhn7Bv3xH7lhBviYiX/g9P2wGe
       "], {{
         {RGBColor[0, 0, 1], AbsoluteThickness[2.], Opacity[0.3], EdgeForm[
          None], GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJxNlmdslmUUho+tpS0FCvSjllprW5YMQYoDRGUqgqKlKgriKIKsFpBpW1Gj
UaPGEUc0xLgTNe6duKJxJWrce+CKe+M2cdx3zkXijyvv+z7jjPuc5/m+xoWr
WlcWRcTfolgcJkaI4WKdWCsOFZWihygVC0WbGCJmiAliqOgWXaJdDMNehdgg
1os5olb0Ff1EJzb7iIH48FxB9GSv15WJcuZK+R7AfC9Rgw3vr2ast9iBp+d2
xWaVWC0Wif5iPLmWiCXsrxc7824bc/G3k2hgzD73E2NEnZgsxrK3kfmBzBdY
M0U0Y3se6waj9xC02EPsLprEcjEOn23UoRQdK9B3Ldpbk1Ho3hO929GiC617
46MSTcrQ17qO5L2cuRryrCSPGmxVo8U2favxV0DbCuYL2K1l/xL089waajBa
HCT2RacaNGmgPrXEVI1m9fhs4HsuuhbQpe//4m3C1mx0H4eugxnfKDrELujs
egxCnyHYO1DshaZ7onMRug1Fq57MO+9TInvJNnYjBuewN/p6/Sqxkm+vHcH6
adTP9vaJ7NcqbAzEzuFiInMFNPOalsiz6v5YjO9aNGpGtybybyT2CcTTgDZe
O11MZd0wcnePHRzZl7ZxAFoUEcs0YraePksl7J+K1mOobxVxT2T9THQpJ95J
2B9HvbbFPpn4jxfHMTcLjaqIazo+WyPPRjExziDXUdTSOR1DDkVoMJMYjhJH
RvboJHJuIvZZ+HKt9o/sD+d3CDmWor37ooIYelGTFny1sGa7yPvQsW6Pz7n4
dU5HoNMAxgs8va6O+s2jbu7dDux4bH5kDx/Nu2ObjXZTiLuNeO3/WPZOQdtm
4lxAzAvQq4jY24j/xMg+2zGyl31W+zG2iPGlkWe+nn0L2buY/a55NWsGsM9z
tYwtRZOxvNfzXMa4812ODn6uiOydFXwPQpt2cpzPHmvSzVwJdfIa32cjyacf
8fi9P89VvJ8UeXf15+nv0axfTe5+ruHd/bcWDZeRw1j09HgZz3Ws8W+K70Sf
G/fRemL0cwO5/Cx+oT6/id+pZQ8J/Hhkb74kHsbevWIzcRZrzSORPb4p8s7q
RI+NaNKbsT5o08VYufbeGXmG3xbXkMs74trI/tkiLovszZ/EjZH9uFW8G9kD
P4jzqdH34kfq86t4P/L8Pib+jDz/f+DPvq60DRk5gbi6ibkdjazPhdgqxs+r
+BpPjo6tFT3noEMXdvrI9kPo9pQ4G63OES9GnkH/Vzot8o75R9wWeZe8Kd5C
56vEk5F9Xiqb10XeVd+Rm/O6QbwWeY88LZ6JvF9OFReglTV+lNwfEC9E9lUv
Td4XeWe8J16PPLsfiDfIrwN9rE2Z1t8Sead3kbNrPJweKOG5ife7xPORff6h
OB39/hVnRt7dnezx79et4lK0vQmNrE9f+a0UJ+v9cvERPp3HWeSyGe2s27Pi
ksg7+nq0s26O/Qnidz3PpabuhaAfXCv3t+v1rbg68l53vM8R8xXi7siz7vzu
IcevxDeR9+zX1LuOvD8m9/Miz5jP1+1oYZsXi78i79DPxWeRv9XWYwua3EwN
HL/PpfvMPXYRGlmf+6mra3pH5HnzWftUfBL53/wL8WXk78Qr4uXIO9599yAa
nhHZl+5J99HWlCj+Az0n6Dw=
             "]], PolygonBox[CompressedData["
1:eJwt1FmIiGEUxvFjcENSbnEhowxDM2TfJmMfIw0iZtAoJWUyV66IKCRb1ixZ
xpJ9nyEajG2ULVxYJtvY98h+4f/0Phe/3q/ve9dzzvu1KS0rmpUREUPRCG9Q
j04YhwtYjobogcX4gAlojWtYgF6e4yUOoQ/GYh/2o73nP4amDSJm07bAc8xH
B4zBEjTm+0zatmjC8xH3LcMJvPbe+mILdqAbRmI3rmIISnDUc2hsRyzDV0xC
Jn7jF3KRh3PaJ/1n+N1DPMJo8DouYiOykY9FyODDdNqWkTot9PdpuIEq9EMB
arHXsRyGNXiCno7ReezEKAx0Ll45lsrJe7xDK4zHXZ8p02Oas/5przcHz7AW
WV7jsM+Q7xyddQwVuwH46ZwpV5NxHz/8XIQ/eIAumOJYbPBZdeZVWOq9D8JT
vHButYdd+IdStHPsNtPmRIrhbfzFVBS671zHXmNUO8dpO0eqoe/OuXJd7LEr
vTfN8QWfI9XSRNzDN/dVTpsx3ynnrhzb8DFSLeiM1bjjvXSNVBu6A6p91Yhq
tdrfVLPzIt0J3YXuqMElx1ZnVG3UOveK1xXHRLEYHOkuXPaz7sR2x1SxVI2v
xh7PrRq/iVvoH6kmlPtNGBGpBs5EqsEC97mO9ZHuQm/3PRnpLmlMBT45Vroj
W/E2Uq3pzlc6ZuXOgWp7RaRa03rrcNBzD8cBv9Oz/hGPUReplvRP+Q8EgYUc

             "]]}]}, {}, {}, {}, {}}, 
        {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[2.], 
         LineBox[CompressedData["
1:eJwt0uk6VlEYgOFPmSmdQqfkEDoAnUHGlIQimckQyqwIlaFQhjIUSooUSaII
0cDdpR/39ex37b3Wn71OnzkbGxcUCASu8YaXbPGDap6QTQ1/iOcpSfylnus0
cEAyw+TRQqTDm3WEVqLMd7SQaWa4xwnr7TrKeY6Zi/Ux/aRy3NoDLaGCMHO5
XuUSoeZereQFl/lOFet8Y4N0JkkjxJ4enWCcX1xhn9fc4Cvd7PGTV5TxkGD7
L+oapXzmC6tc4Dlj3Oekb7v0GR1kccpaDJ2ei2gj2nxXP7HCR5ZZopEI75v0
EQXkE/TvJ5IiQ9QSbr6lfWSyzRxvmWKHXW5TRw7v/t+FeRJ4Ty4LfGCRRAYY
5Ca/OUcGm8wGju7SITTWZHk=
          "]]}}], {}}, {{}, 
      InterpretationBox[{
        TagBox[
         TagBox[
          {RGBColor[1, 0, 0], PointSize[Medium], AbsoluteThickness[2], 
           PointBox[{{-0.1814791290228547, 0.}, {-0.14796010969859463`, 
            0.07068125923672587}, {0.33182136208070107`, 0.}, {
            0.198912367379658, 
            0.15328148243818826`}, {-0.14796010969859463`, \
-0.07068125923672587}, {0.198912367379658, -0.15328148243818826`}}]},
          Annotation[#, "Charting`Private`Tag#1"]& ],
         {
         "WolframDynamicHighlight", <|
          "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>}], 
        StyleBox[
         DynamicBox[(Charting`HighlightActionBox["DynamicHighlight", {}, 
           Slot["HighlightElements"], 
           Slot["LayoutOptions"], 
           Slot["Meta"], 
           Charting`HighlightActionFunction["DynamicHighlight", {{
              Annotation[{
                Directive[
                 AbsoluteThickness[2], 
                 RGBColor[1, 0, 0], 
                 PointSize[Medium]], 
                
                Point[{{-0.1814791290228547, 0.}, {-0.14796010969859463`, 
                 0.07068125923672587}, {0.33182136208070107`, 0.}, {
                 0.198912367379658, 
                 0.15328148243818826`}, {-0.14796010969859463`, \
-0.07068125923672587}, {0.198912367379658, -0.15328148243818826`}}]}, 
               "Charting`Private`Tag#1"]}}, <|
            "HighlightElements" -> <|
              "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>, 
             "LayoutOptions" -> <|
              "PanelPlotLayout" -> <||>, 
               "PlotRange" -> {{-0.1814791290228547, 
                0.33182136208070107`}, {-0.15328148243818826`, 
                0.15328148243818826`}}, 
               "Frame" -> {{False, False}, {False, False}}, 
               "AxesOrigin" -> {0, 0}, "ImageSize" -> {360, 360/GoldenRatio}, 
               "Axes" -> {True, True}, "LabelStyle" -> {}, "AspectRatio" -> 
               GoldenRatio^(-1), "DefaultStyle" -> {
                 Directive[
                  AbsoluteThickness[2], 
                  RGBColor[1, 0, 0], 
                  PointSize[Medium]]}, 
               "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
                   Identity[
                    Part[#, 1]], 
                   Identity[
                    Part[#, 2]]}& ), 
                 "ScalingFunctions" -> {{Identity, Identity}, {
                   Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
               False|>, 
             "Meta" -> <|
              "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, 
               "Function" -> ListPlot, "GroupHighlight" -> False|>|>]]& )[<|
           "HighlightElements" -> <|
             "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>, 
            "LayoutOptions" -> <|
             "PanelPlotLayout" -> <||>, 
              "PlotRange" -> {{-0.1814791290228547, 
               0.33182136208070107`}, {-0.15328148243818826`, 
               0.15328148243818826`}}, 
              "Frame" -> {{False, False}, {False, False}}, 
              "AxesOrigin" -> {0, 0}, "ImageSize" -> {360, 360/GoldenRatio}, 
              "Axes" -> {True, True}, "LabelStyle" -> {}, "AspectRatio" -> 
              GoldenRatio^(-1), "DefaultStyle" -> {
                Directive[
                 AbsoluteThickness[2], 
                 RGBColor[1, 0, 0], 
                 PointSize[Medium]]}, 
              "HighlightLabelingFunctions" -> <|
               "CoordinatesToolOptions" -> ({
                  Identity[
                   Part[#, 1]], 
                  Identity[
                   Part[#, 2]]}& ), 
                "ScalingFunctions" -> {{Identity, Identity}, {
                  Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
              False|>, 
            "Meta" -> <|
             "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, 
              "Function" -> ListPlot, "GroupHighlight" -> False|>|>],
          
          ImageSizeCache->{{4.503599627370496*^15, -4.503599627370496*^15}, {
           4.503599627370496*^15, -4.503599627370496*^15}}],
         Selectable->False]},
       Annotation[{{
          Annotation[{
            Directive[
             AbsoluteThickness[2], 
             RGBColor[1, 0, 0], 
             PointSize[Medium]], 
            
            Point[{{-0.1814791290228547, 0.}, {-0.14796010969859463`, 
             0.07068125923672587}, {0.33182136208070107`, 0.}, {
             0.198912367379658, 
             0.15328148243818826`}, {-0.14796010969859463`, \
-0.07068125923672587}, {0.198912367379658, -0.15328148243818826`}}]}, 
           "Charting`Private`Tag#1"]}}, <|
        "HighlightElements" -> <|
          "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>, 
         "LayoutOptions" -> <|
          "PanelPlotLayout" -> <||>, 
           "PlotRange" -> {{-0.1814791290228547, 
            0.33182136208070107`}, {-0.15328148243818826`, 
            0.15328148243818826`}}, 
           "Frame" -> {{False, False}, {False, False}}, 
           "AxesOrigin" -> {0, 0}, "ImageSize" -> {360, 360/GoldenRatio}, 
           "Axes" -> {True, True}, "LabelStyle" -> {}, "AspectRatio" -> 
           GoldenRatio^(-1), "DefaultStyle" -> {
             Directive[
              AbsoluteThickness[2], 
              RGBColor[1, 0, 0], 
              PointSize[Medium]]}, 
           "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
               Identity[
                Part[#, 1]], 
               Identity[
                Part[#, 2]]}& ), 
             "ScalingFunctions" -> {{Identity, Identity}, {
               Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
           False|>, 
         "Meta" -> <|
          "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
           ListPlot, "GroupHighlight" -> False|>|>, 
        "DynamicHighlight"]], {{}, {}}}},
    AspectRatio->1,
    Axes->{False, False},
    AxesLabel->{
      FormBox[
       TagBox[
        StyleBox["\"p[1]\"", Bold, 14, StripOnInput -> False], HoldForm], 
       TraditionalForm], 
      FormBox[
       TagBox[
        StyleBox["\"p[4]\"", Bold, 14, StripOnInput -> False], HoldForm], 
       TraditionalForm]},
    AxesOrigin->{0, 0},
    DisplayFunction->Identity,
    Frame->{{True, True}, {True, True}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    ImagePadding->All,
    Method->{
     "DefaultGraphicsInteraction" -> {
       "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
        "Effects" -> {
         "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
          "Droplines" -> {
           "freeformCursorMode" -> True, 
            "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
      "ScalingFunctions" -> None, "TransparentPolygonMesh" -> True, 
      "AxesInFront" -> True},
    PlotLabel->FormBox[
      StyleBox["\"\[Theta] = 0.589049\"", Bold, 16, StripOnInput -> False], 
      TraditionalForm],
    PlotRange->{{-0.5, 0.5}, {-0.5, 0.5}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.02], 
       Scaled[0.02]}},
    Ticks->{Automatic, Automatic}], ",", 
   GraphicsBox[{{GraphicsComplexBox[CompressedData["
1:eJyFWHtQVPcVxoxVxwGCSChdFc1jYKPBR+KSNEiOyWq1jugmIb7GrDatGLsC
DY4PHg2S6mqtaIsoFIl10YaH8lAWeV08LO8FCsgjG5NCnLhxGiXVMhUfHbtt
7i/fj5nrH+GfM9/es+d8532Xp9+Lf2vLE15eXs+P8/L6TjbZQ4IyXfXUKSQn
/XJbrSGzVWLIOd5t37gN9sfk/ZrJ6daRHIkVgQl4upASwx8w/AHP9z9vdpm6
JP5IPJd+wEfrF1grwQcYfIDBBxh8gMEHeMfme3sVa6/E4Ac/4KfNg5YHsFaC
HzD4AYMfMPgBg5+Wj7YO2jxo/QJrJfgAgw8w+Gj1IaEP3Kv6q6GvhOQBVbZL
HKraaeJvVFzEXurfKQXPO8TnUh9+gVtUPz2E76NewIPCn7Q7S/1+PwHDP/zA
HjD0EAc+B9ZKxAeMfGn1UDfoA4OPtu8RL+oHDPvAiB88YU/bD+ABe8DQ0/JF
PcEX+KOYL+6W2DopTOVxmXar/ispUmDWP/nqc2ajk5LUvm1g6ON5f2X2Wz5f
N3OPaq9MYofA0h7sw16CsEczRXwyfmDkE5+jH4CRX3yulXgOP+APnlbBiwNU
vbMyHvAG/qE+hh3ECf/QB4Y+/EP/ReFfYvBBvpAP1BEY9UN8kJ0i/xLDrrwX
3z9HPjDvwIgHEnkEBl9g9B/4In/AiBsY/Yy5RL8Dzxf9wYG139k9xMCnVD+H
5HxDHxg8cicfXakvvSLziH5HHTBvwEN1Ka0eT7esC+xhzmAPcWN/w/+KS5sq
TOY+Al9g8IV/9AP8A8M/8oZ6oM9QL/Sjtu9RB/BHfsEf8wh+4I3vQw8YccIe
9OEXdvA86IDf/ZJfdJD27p/Mnf2jzKxa2R/v5KXqjYmX5Ry8t3X0truiXtaj
7IPRm845tXL/nW3Omproc44vDkcGJqY7pV1g7T09XLJkm8tUIHlcDG0+aFMq
5D1NmHL0lKWgisBXe/ciNn7x0DmnQeY/1nfGr0ZyGul6u7nNk8oUPD54pf62
gz9vHtw6kuTgJXPDf29LqeDFCR1/tPa28Z5sn1xrQh4vKvyt3TRUTtG/S3vk
PFdPxncG45SWTiq5XWoayblM7eOcV3SHGqhXSB7vteKa+7iT1rw5MdJ4tYH7
Vm2PUyYU87d31uda/lHNr914Ld9kTmYq/DDLUqDwJP9zyYp1P82esXe6+Uwd
h8/788fWjCtkWLZ6o8+WMv58fIR3ZtbY/ZzKIVMTozo423fcAZsSI3GVt4qp
c3hzvaGpn048Nb1P157Gy2+FPpsY2Sv7c9LrscWmoUq+v1iVBH6Dgh9NS9i3
fiSnkH99YtkO5Wc1BL7zBF/Z76dFfSnwzbdLDdvH7iniXyXil/mBvL2/74nS
nzfT6gylR/dMo/yefopXlD7eIffXTlEveY9jJ+xoMUQ7+N8N5cv08WP3GPNx
8E++YWbj2HtymugPDnQMRxgTz8i9D77A9klti43VPbKvsC/m58d/4Corl+8r
+94POGbRp8p9UST6U+YX9Zn3KHjQw31y3+D9ZvKuKUdsSoa0l7lVtUfQR/9D
v2unqk+YH6uYH0I/oJ7IB+YQ+UgS+SDEh+eIb5aIT/L8g5hvQr5Ql70Tg+86
LRWPvT/OEvWS+3CLqA8F5P8meiRJoeGiq/9xnnRw8KWgD5WQJo6sCnEYou18
cNlQselUK1+Z/XKjrr1I9nuo6Hfa+m3rC2aLnUKaPtnlUup5WkXFNpdfGx2o
SY4wVjcy5u+ymD/WjX4WblzfwhsX5F/z8AX+7OrEAffdbko6mfqpJ7WS9auy
2jybuunOGwurDf1VvHbXgkbDC310wnvNOp+/5sl53yDmncCvXPAj6O8R+gR/
UcIfYX+Ei/1BiHeuiJfAxyL4EPh8JfjIeINFvHI/BYr9JPPpFvkk5CNV5EO+
P9g/jdqr3GiQfX6/LtntNlTKvVGTv/RhydM1HLS8/G2fpQPy3mFfBIt9IT+v
f2A8a/Ktk3sj5ZXwfdYRppajR9b57G+gkAWbCy0HG/j9a3sG3BXMG47nLtHP
u8TmvyxItm2v44I7/3R5Si9xZfrepzLXXuTYRY1VhoBqeX96hH1eFzf6ur40
iyd3dc80N9ZyXGiLRbEeoTNn+/NMQ3Wyzw8L/xz2UtywuyKPyv677l2XH3Pv
q4emJaZ/QrnPp++2pbDc1xvFvmZ9xE9ilZZisgc8e9r6TD2/+FJ8tye147Hf
NTdFvgjxrBTxEOLJFvHQjRU1Tp2ukgNTgopNvlVy7otEfgnxviviJcT38G9q
fAT+pwV/Av/Dgr+s53lRT5nvYJFvmrBbUQz9LXR+5rRb7p2Nci6N4t5x44zo
Lz2pY+/HGT9OmG98UC33J+YZdxXvk//ydrcYAhyM/bxW7GeGP7vwJ/8fUC/u
MeOeQCI/ISI/jHuSJO6JvHc6ce8I9T4m6i334FLxfkHDUatLTOassd8b39fz
vKin3GsbxPsHIV7sozz1TnVQjsV/l8vPwYv7L14wBHzMCx0L14wk1bLbExKu
39RFy094LdI/WctzF/Zedx9v5exHxXOND/7/+zctLMbl185Thmet8fn6mMQD
t1RME2yHv/Rs6qUYtqfZlELpL0P4I9h/RdinsDuL/u6hJn65/0KXboWdY0bf
CMps7aEy/5/edN8tZ9jbJ+yx6brNP/NeH90LK9Al+mRJXCuwtKcX9gj2Tgt7
hHiSRDyE+J8T8dP/AJMTz3o=
       "], {{
         {RGBColor[0, 0, 1], AbsoluteThickness[2.], Opacity[0.3], EdgeForm[
          None], GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJxNlmeMlVUQhudeZRFYWKlL2RWWugtKUViKBURFRJBmA0ERKyhFqiAdYcES
azSW2AU19qixd0WxGxNrLFFj1Nhj1+j7Os+N/Hhyzne+c8+ZmXdmvlszc96k
ucWI6FCI2Enj0aKv2EOsFWvEeDFGDBe9RZ/IveVivVgnJoqWorHYRdSJAvNN
okFMFhtFmagQ1aKVaC12Zd2/r+Isv5vLPe1EJfPmoj1jC9vO6DOXiMWiKb/3
/U1ER977nk6MvmO+mCcGiOVigWgj9hW7i0ZiGvfViCnY0UV0E/WiK/MO3NOD
O6p41553B4hBrHVnr/fthX+dxYGc6fOO56xasR+alKFPHbEaj48FtOqNv0PF
ENFTDOa+XqI/+jVDs3K0XIc+zdFqIzEtI1YV3NOKuC1m3oSY90PHeWjWlrMr
8a0Cf0tadSAuJT067qBrJXdU8a49MatBn2ruWoFme4qxYgSxnEIs26FdF87s
SBxKWnXj3FacWUVMW+5gVw9+s1qsEgPFOHQajEa92DMErfyb0WIYOh0q9iHu
MyLzoJ676ojr3mhXJKaeO4fP5neO5UrOtp3LxJnE3XnRl/PKeG6MvSvxrR2x
sS6bI3Pbe/dn3fFaiH/VxGUQMe+Or47XQcztc098tk0Hi1E81+G7c/IQfCvi
h+PgfJsdWWONuH8Ettnv4fju+0dig+3dD5vriWFXzh7D7wajSzfsGIUeQ7Fv
CHEajY2nYF+ROIzFlv5oZnvniNM5176P4x6ffRjnT4isQ/t7BM+l3jcePaeL
YyNzcVJk7TkO63neObLfTsAe14Lr0bVSzn6vHSkOZ/8m5o7hLN553fk/FU2n
8ux7K5k7F47DJsf2GPZ1IcZHReaQ624av5vOvIZxOvvt3xp8HMm53uOesDQy
P2dG1kkto5+dPycyr2U8gXXrc1JkDjk2p+LXyWhWZG0W6xN4VyQes4nJhsh+
1Az9rGM9Gs5hzXtcY6WeNZf4nMFv2zL6eQDz+Zw5Q5wWmYuuRfcm96WFzHdj
9HM146LIGlvEs/f0IC6uM/eixZyzlDg2hcXEuR/3tWZtCfMFrLdhXMbc68u5
y3a4J1SxtoJ1z8+K7KW90bSIbd7fk/fLOdNrq1gfyLyacTXr1mIyGvm8tZz5
vbguMl/nEv9yxg3EtkYF9EBkv/hMvBJZfx+JbZH1+qTYis3nRPY1f7ecM66r
iei1gXv6cEfp2+dvXnPG9dg5mWfPm8mG8kLmVmeNr0bW/SPiRnS4V7wWmavN
tefbyLpurXmbQuZHE41NC5nTLTV+HdnbLhefRub8s6K2kH2wUuPL+PuU2BKZ
e9+JL/DPDWZ7ZM35vNs58wdxQ2S/bEE8/vt2F9LWYcTJ8XKNNDD3vjfETZH9
r6P2PxTZiztpfiHrtvG5SDt/Fzdj2y3iTXLhE3FnZN9trP3fRPbF28Q/QR/U
+h3suUt8HtlP73bsC9kL6jS+hI9fiq/Quqj1QiHr72nxQWQOvyA+jv9zbxN6
NjBvRFw2My+9K8XJ62XEo4E9LXRPRSH7zWPi3cj8v1R8GNlj2+v9uZHfoovE
VZE55v/U50V+534S50f2155afz4yhxtpfk9kL9yOzyPx6RL8cn9z7YxHH+th
LX4Tv0b+Z3+Q+3zXBehn7f7EVtu5Bc2s133YbZvfFg9H9hjn9eORuW1fn8Df
KyPz27ntunw9sjat+Yvo7hp17jpvr3AsC/kddB69Qy69Ja6N/O46j96PzKX3
xMWR/XYreltr59ej2Gz9n2H9au8tZE//W9wa+R27P7J32DbnoPPMOeYcvCYy
D38Wv0R+57ahh7X4Q/wV+S28PrKWnC/W8Ed0vCyyF7gP/AtJkwNl
             "]], PolygonBox[CompressedData["
1:eJwt1OdL11EUx/F7zZZF2x41bPvAhpFCe9G0IqQhSQPLsm0QhCT4B0S2aNjS
etSkQqOwPYiiaNCkaNl8EBU2aVjvw/k8eP3u/X5/3/u9955z7rdT3vLsZQkh
hAlIxE0cwSSMxjbUjyHMo03FLZSBW2EA7mMdhmI83mhMqt7xCA+RpGdaMbAl
MuiPxEd8QjbqoRqd+X+VxhzGLoxBf7zAS/W74zu+oiem4wGOYxCycAKfMQ0L
8RSXMUx7foLHSNa929iutdg7KnEP47AAP1CKXsjBJnRgvSutRS32IA2DsRHt
+X+F5tiMv8hFCs6iC/8X0fbGK7zGKPTADdRgou6dQ1eeX03bBnvxBUM05x/8
RkfMwFp8U2zsmRaMPam1LbJ3RM+J5WIx1iinlsuBmus8bd/gc3bj+qL2Wozm
0WNssS3AOzSL3recNo0eQ4vdfLzXGmzuKbZH+leVyxK8RZPoz07GByRwPYc2
U7E6o70XqVZOKXZWM2253km7BEvRgOuGmBq8ZpP4aRS9dvORSH+rYj3X8s71
UfXzcBeNoz87FtdxELMxAoeCv9j6GaqFfbT9gtfENe2xRPesFi7Qpgevid3a
s+3V1liHA5iFmbgSvGatVofbVIxvHT1XFpNneK7/LOflqFLurGZ34A76WFyx
PvgZydK9/filWsnV3uo0t+2xHXNt0NhCVCiHljs7UzWKucXaavSSaqRYNVOq
GFrs7MwkR89ppnL0L/iZSNGe7Sz/DH627EwfU04sF/YNOq01FSqG9m3YEvxb
Zd+I/wrYhZw=
             "]]}]}, {}, {}, {}, {}}, 
        {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[2.], 
         LineBox[CompressedData["
1:eJwt0uk21WEYxuG9lRRCKUPmJDmdDqEDyIGUhDJFI0ohGlFRISXNg7FIaFCK
SmZda+XDtX7v/ey1v/0zDuTuPxgMBAKn2exxRZ9RxiY7jO/eJ5kkwo7kqvdr
TnGNBLdD+oZ8dtkt2k8frex2u6XnaCPTvqMDtLPHvqvn+cJXOshyv6/DFJFq
X9CXPCLbfqijfKCBdLd6raSYNPupXmaCUkLdmnSDNupGLdGPjPOEeLdeHSPO
u0J36jcN0SCx7GA725jyWx0B7x7J0cd6iVUussZxVqhlkWWWOMZ7Ruhmr/8/
0Hd0ss/u0iEGKSTF7Z7WsEA1t0l2L9ATvKCKJLej+pbrZNg39DnlbLWn9Qef
iLKjuen9c/1b+UyMW7Mm6mGd5QwznOUXefxhjt/M85cjvGKL/4YH/397/wBR
1l/t
          "]]}}], {}}, {{}, 
      InterpretationBox[{
        TagBox[
         TagBox[
          {RGBColor[1, 0, 0], PointSize[Medium], AbsoluteThickness[2], 
           PointBox[{{-0.21496557885394987`, 0.}, {-0.17038068461855593`, 
            0.07662825961190016}, {0.3323677567054131, 0.}, {
            0.1927414088470126, 
            0.15520962098245117`}, {-0.17038068461855593`, \
-0.07662825961190016}, {0.1927414088470126, -0.15520962098245117`}}]},
          Annotation[#, "Charting`Private`Tag#1"]& ],
         {
         "WolframDynamicHighlight", <|
          "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>}], 
        StyleBox[
         DynamicBox[(Charting`HighlightActionBox["DynamicHighlight", {}, 
           Slot["HighlightElements"], 
           Slot["LayoutOptions"], 
           Slot["Meta"], 
           Charting`HighlightActionFunction["DynamicHighlight", {{
              Annotation[{
                Directive[
                 AbsoluteThickness[2], 
                 RGBColor[1, 0, 0], 
                 PointSize[Medium]], 
                
                Point[{{-0.21496557885394987`, 0.}, {-0.17038068461855593`, 
                 0.07662825961190016}, {0.3323677567054131, 0.}, {
                 0.1927414088470126, 
                 0.15520962098245117`}, {-0.17038068461855593`, \
-0.07662825961190016}, {0.1927414088470126, -0.15520962098245117`}}]}, 
               "Charting`Private`Tag#1"]}}, <|
            "HighlightElements" -> <|
              "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>, 
             "LayoutOptions" -> <|
              "PanelPlotLayout" -> <||>, 
               "PlotRange" -> {{-0.21496557885394987`, 
                0.3323677567054131}, {-0.15520962098245117`, 
                0.15520962098245117`}}, 
               "Frame" -> {{False, False}, {False, False}}, 
               "AxesOrigin" -> {0, 0}, "ImageSize" -> {360, 360/GoldenRatio}, 
               "Axes" -> {True, True}, "LabelStyle" -> {}, "AspectRatio" -> 
               GoldenRatio^(-1), "DefaultStyle" -> {
                 Directive[
                  AbsoluteThickness[2], 
                  RGBColor[1, 0, 0], 
                  PointSize[Medium]]}, 
               "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
                   Identity[
                    Part[#, 1]], 
                   Identity[
                    Part[#, 2]]}& ), 
                 "ScalingFunctions" -> {{Identity, Identity}, {
                   Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
               False|>, 
             "Meta" -> <|
              "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, 
               "Function" -> ListPlot, "GroupHighlight" -> False|>|>]]& )[<|
           "HighlightElements" -> <|
             "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>, 
            "LayoutOptions" -> <|
             "PanelPlotLayout" -> <||>, 
              "PlotRange" -> {{-0.21496557885394987`, 
               0.3323677567054131}, {-0.15520962098245117`, 
               0.15520962098245117`}}, 
              "Frame" -> {{False, False}, {False, False}}, 
              "AxesOrigin" -> {0, 0}, "ImageSize" -> {360, 360/GoldenRatio}, 
              "Axes" -> {True, True}, "LabelStyle" -> {}, "AspectRatio" -> 
              GoldenRatio^(-1), "DefaultStyle" -> {
                Directive[
                 AbsoluteThickness[2], 
                 RGBColor[1, 0, 0], 
                 PointSize[Medium]]}, 
              "HighlightLabelingFunctions" -> <|
               "CoordinatesToolOptions" -> ({
                  Identity[
                   Part[#, 1]], 
                  Identity[
                   Part[#, 2]]}& ), 
                "ScalingFunctions" -> {{Identity, Identity}, {
                  Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
              False|>, 
            "Meta" -> <|
             "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, 
              "Function" -> ListPlot, "GroupHighlight" -> False|>|>],
          
          ImageSizeCache->{{4.503599627370496*^15, -4.503599627370496*^15}, {
           4.503599627370496*^15, -4.503599627370496*^15}}],
         Selectable->False]},
       Annotation[{{
          Annotation[{
            Directive[
             AbsoluteThickness[2], 
             RGBColor[1, 0, 0], 
             PointSize[Medium]], 
            
            Point[{{-0.21496557885394987`, 0.}, {-0.17038068461855593`, 
             0.07662825961190016}, {0.3323677567054131, 0.}, {
             0.1927414088470126, 
             0.15520962098245117`}, {-0.17038068461855593`, \
-0.07662825961190016}, {0.1927414088470126, -0.15520962098245117`}}]}, 
           "Charting`Private`Tag#1"]}}, <|
        "HighlightElements" -> <|
          "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>, 
         "LayoutOptions" -> <|
          "PanelPlotLayout" -> <||>, 
           "PlotRange" -> {{-0.21496557885394987`, 
            0.3323677567054131}, {-0.15520962098245117`, 
            0.15520962098245117`}}, 
           "Frame" -> {{False, False}, {False, False}}, 
           "AxesOrigin" -> {0, 0}, "ImageSize" -> {360, 360/GoldenRatio}, 
           "Axes" -> {True, True}, "LabelStyle" -> {}, "AspectRatio" -> 
           GoldenRatio^(-1), "DefaultStyle" -> {
             Directive[
              AbsoluteThickness[2], 
              RGBColor[1, 0, 0], 
              PointSize[Medium]]}, 
           "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
               Identity[
                Part[#, 1]], 
               Identity[
                Part[#, 2]]}& ), 
             "ScalingFunctions" -> {{Identity, Identity}, {
               Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
           False|>, 
         "Meta" -> <|
          "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
           ListPlot, "GroupHighlight" -> False|>|>, 
        "DynamicHighlight"]], {{}, {}}}},
    AspectRatio->1,
    Axes->{False, False},
    AxesLabel->{
      FormBox[
       TagBox[
        StyleBox["\"p[1]\"", Bold, 14, StripOnInput -> False], HoldForm], 
       TraditionalForm], 
      FormBox[
       TagBox[
        StyleBox["\"p[4]\"", Bold, 14, StripOnInput -> False], HoldForm], 
       TraditionalForm]},
    AxesOrigin->{0, 0},
    DisplayFunction->Identity,
    Frame->{{True, True}, {True, True}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    ImagePadding->All,
    Method->{
     "DefaultGraphicsInteraction" -> {
       "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
        "Effects" -> {
         "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
          "Droplines" -> {
           "freeformCursorMode" -> True, 
            "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
      "ScalingFunctions" -> None, "TransparentPolygonMesh" -> True, 
      "AxesInFront" -> True},
    PlotLabel->FormBox[
      StyleBox["\"\[Theta] = 0.638136\"", Bold, 16, StripOnInput -> False], 
      TraditionalForm],
    PlotRange->{{-0.5, 0.5}, {-0.5, 0.5}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.02], 
       Scaled[0.02]}},
    Ticks->{Automatic, Automatic}], ",", 
   GraphicsBox[{{GraphicsComplexBox[CompressedData["
1:eJx1Vn9Q0+cZD62i1xrdFLVjCpValrZDhBGnFXnr0nMtFhe9rUe3XWhpsZux
umPaGufstDYqlVVs9JQiIz0EpZCg40eEkIcE+REKCAGaaU+GNfUq5c4dU9FW
za7f18/j3ddb/nnuk+/7PM/nfX69z7zsjWtyHtJoNIsjNJrv5ZwpHVdC+hrR
VRP/mC3YTGekZLz19T826m3tjHdKTM9IPcL/wGp5s+GRfOtYIWO3xAIY/oHh
Hxj+gRdOrzQFjT2MwQd+wEftF1gtwQcYfIDBBxh8gMEH+M+vjv/NbQ0wBj/4
AT91HNQ8gNUS/IDBDxj8gMEPGPyAwU9dB+q8qOOi5gGsluAHDH7A4Pf/9NQS
+sCfKf4rxJeKbKBBRXYyviK/E7BG+RW7gcEfuE2x2yugd0HaY73HFX4DAhjn
wQN6AWmPzwHjHDD4qr+r+wr8EH9g8MP/wOr6gn2cA8Y5tX/EN0rRLxXLlDx5
CDhBYtYDH2Dwj1XOn+HvwPj+E4k5T8Dqe6vzqO5/fF847dn5JoOfkiVPtod7
4TwwznsVPtUiV+kPn9gqJdvrld8JcbAqduppVuP3dvL4/2LFbh7Ha7Gsb66f
vLVfXHfYu1gPGHrwhziDP/fPPV7vSP8cV3Uf4Dx44Dx4A4OHOp9qiXrAOcQJ
+cQ5YJzHOUjo4x7c1/cw+hv30Ml48D3QL8DQw71QV8BqiTiDB+qfed3zj/vA
P74Dgzf44DvmgXo+wE/RIx++pHP2cV9BH/kDRv52yvoQyFdX/eE12q9aH4gH
6h9Y/V7i+1DTtvZw+KxAPYMf5gL4oX/wXuA+6XVZtUZTP9cNMNfvPX+4D/yh
vxA35Bdxw32QP/BFfsEX8Uc+gWEP8cJ3YOjDLiTiBAw9nEf/4f7AyOeAzAf3
q9ou7EBOvr2pwJrb8cCeNGlGx1JdYiPP8er1nt3WsSb2s2Aw6lI4q5nnSe9i
vd2s2832UC/IV8aS1dvdkaU8727MWfyQ017Lc/c/P/ug0mhycb5W7n/jYui6
i+uuPLAlydTi5XzdGcjKDepauD+yL0x0GYe84nxsdpyl6pQYrTj3nf9jL+24
3NGkT20TrUntM22JPgqMZz5qm91B/pTyvfbUWgoFxeWQ/pD4Q2bGpbBoFpEj
r6TrrvrEVCnpaOycnrDoErm7EqZZ8pto/rmRKEtGJ3Uuz3vLba0i89SYX2pz
3PTKm+OB8Lun6f2XZl9z2Kuo+uGC5uh0N7UMjpiDvWW0uapwrunhJlpypFEY
VveJPUMn/WFy0KqGlAnOHQPi/AfPfGwdy6XH0wz51kAnDbSP5ltzK0TZq2ku
o6eP63dXXdlo6KCP9k7rOGA9VS/g/0XpX5T5Xlwb1DTQISkF+JRIPmLNP5L+
Yl/fzfPkdMLsn+uCTaIy4I2ytfj4/pBtuSWLDJYyzhN4FJqnvx38gZfn5cRB
JR/0lH3gluO1Tj6P/vfNrFhuWNLM/aRJUfJN+yfFXPeba/kdRf5/K/NP4Mv7
kWKnl+cJ5sXeQyv227edpPZV6ze4I7sf2D8+3/bD4VDtCZ4fZlmPhPiiT0pb
/z3DZujn+YP9ylMwNcFk2MX20Qew75L2BfTxHforpL4Af9Q1+G+V/Ple49OV
/hOIj3pfKpH9yPlR758HZH4E8qF+HxpkPsTTgW+OGWMqRem3pmJrnJfrc52s
T4H6z5b1L55/Z+VUi7ZYPHv0brt+UzOt7R8aCJs7hGt+UZLJ6aWk0hUpuo1n
xYKFd2zW3DqasCW2L3okICZEt7XrbSWML/9IwQL92CD7UUA/Ruqzv2Tpj/s7
JPub+RdJ/gJ8qiUfrvMNh7VF1lwf73v7prycqT3m43m68/hrwXC4jusw+XLX
TEv3afJon4yyNHXyPEZ/jsn+pO4n725zt93fv9HPI3lKPwvoIy+YH5VyfohV
7+0cDm32052i+v321JNch3EXbaf0Njfb7f0qO0WXRWLnEVdndF6d2P5d8WRn
hI+Gm/0F1l+4eL5N2dz3hOWCVwytnDsUTmyhm7FWp9HRRmkf/T3CGVFH59c8
dz6c1UoF0g7Bv/ao4p8qXj85GDpIdK1mQ7LhnIvvnSz5UG995D576J+UNq1r
xG9opPgvqpcZLJ9QvaVkjzW3id+lYcmX5pc/NddkyCfPVadxrNBDK1b9ymE0
7abgu+9Fm1o8PH//JOcvHU8d3mJ3bxdtOfSYqYX4fcmU74vYUvt8Y3T6WfYz
69LvPNF53XRl+d48u9tGwFUS8766SeZXIB4LZTwE4oG4zhpfulK30Udpi4bj
TS3399k4WQ8C8QnJ+AjEY4GMh8B9HfK+Avdtl/flelwr65Hz+bbMp0A+m2Q+
RWF0aJ07ksTxN2ZMcl68v9/ukvUrkO/PZb4F3jvohzVV1/yftorSE48+Ycnw
8dxxyveUNAn7lukSK0RaZmSlebKX94bsN29cDdU2E96HGvk+EPhUSz4E+5XS
Pu/L6+R7TLeX6tO1xzrFmH71YHReM3ncfYfNX3/G+xX2gYlzlX2A8L4dlu8b
IR8ZMh+E9w0S72uOfF8F6rFc1qNwzfvyht9s470O9VUn64vndLzcZwTisUjG
Q4D/iOTP+/ZflXntFbgP7I8Npf1Gm1NDJ/J33HTMa6SUyJ9+aJ8TED1fO+86
7OUitTPnoPlf3WL06e3fOiIaxEjLrN9r3+8VDS/sueX/5hT9OCFmgi2xizbF
98dZ3vqE9UelPv0640yNsa5fJPb0pBpuHeDzL8vzAt//2618Z/ufSvvs/7b0
T+B7RPIV/wPQ51rv
       "], {{
         {RGBColor[0, 0, 1], AbsoluteThickness[2.], Opacity[0.3], EdgeForm[
          None], GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJxNl2dwl0UQxu+NhlCSUAIBAgQSkkBoEkQIigooBghN7CAWEEQiIKBIr4KC
IE2xjGV07H3UsTE69t57L2P9gKOOvYz6PLO/jHx4cvfu7e3t7T6790/ZtHmT
5uaklPbLUtpH47FCjdBfWC7MFuqEjcIFwkihryD11ExoKzQXWggXCpuE0UIR
617bIWwX6oVtQp7QStgqrBJWCOuERUKxUMp+294pFAodhI7MWwoljLbTRmjK
efsLBUJ7oQtrttUJ3dZCV2y3Ezoja8OYt5etIuQTOL9cqMKW9/Vg9DnT+O4t
HOR4Ck2ESnz1np7o+n4LhBnINghL8GuYMEiowI9Gv6Zy/+742Jr7jMTXjPzU
EfMK9EuI/TbiVUP+bHuLsJkcDyXntj2OHBaQz3ri3py4FRHng9HJY29T8jmA
2J4gHIfuTnJSwP5SYtGWe5dyn074XIj/HYhBF2LdmPuOxKAzexZhpx26PcnH
RPJXRgzL0/9cqiCe55ODA4T1Kbg4cK8cV3FmJXuWYL+Us6tYq2XeKwWnfTfX
xTRkVeS8N3YXpuDBEOEw4UBys1ZYQxyPJ86O4a4UvGrkaF9y35+8WnaRsFLo
J5yagk+DhUOw4RzMS8HRJtxnEHGoRLcCX2uRHS4M5/tc4tSV8+2zuTeC9V74
OBQ/l3K/ntgYjM3J+NQe2TDOnS+ctdd5w9GvIUY+0zysI7aThFFCDrEYyfoI
/K5lvQ6dI9Cxzxv5tnw5eu6B41PUQAFwLZiP7m9jhFxhbIq6yCU/49Edg/6+
KfreWOJciH5L1sehczQ6ucTI/DA3ZjLvIxyZgsfm8CXMHbczuH8O9o7Cpvk+
Bf0TmZv3rkXzyTyYy9m52JuMTeftmBSc8lkXY8/14vpx7ZjP08m1ZSdh/xTm
3RlPRj4FG+XIp6IzHVuuh0PZb/lprDXWiXXMR9eoa7Wa2MxExz3MnG9BPmcR
k1nEyHPnfzY6jvc88mJ+mW/mYINwZoraaUDffJhDvByrLaz1I9dzkJtr87Hn
XuQ6cY2Y+wvIrceF5PQc5kPQXZyirmag1we5bXVD92zki1mzfA067nuDiGN3
YnM68XG/WooPy5hXMy7DB991Ofd171qFzdXM81P0sxXIR6HvuG4l/vmMK4hz
V84uxYZtDUC2AR8WcYdixrXMLV/HHZeyp5r9a/DB6+vROY/vYuK4gfPXseZ+
7n7jN8n8dw/we+le8Y/wbwre/yncmaKHPWobWXDiKeEuzr9N+D1Fvbk+XCeu
nR+F+8mDe/WlKTg2ER3XQLXsvZWiP/ltdU/JJf6bidsY5KORmXP9iO1m5hM4
2/W4jfPy8HsX59borGdS9KdvhM5Z5K2bxl9T9IqHbSOLPl6osSCLd6O9xp9S
9Mku+vNRCm7cyLfnHwods+jLu4X3UtjZzt3t18/C1ynq0v77fcrnzN3ovyP0
zoLfdeTFNfub8C3x8P6N5G00sWvsqZuI4fXmRRY18rLwKdwYKNmL5P9V4fMU
XLpG+CxFn3xIaJtFzZRpLM+itks0dsqil3wpvE3u7hHeT8G1Wq2/kaL28jV/
nfl9zmcWffAB4YMUtVYsWVEWNbpH+C4FP1tK1jqL3ves8EkKPveV7PIUb7Zz
vpO8FzIvYPSaeeha20qcG+DPbPKyA26MZV5PrrYjX8le1/DjwsfY+Vu4IsX7
cJlwE/x5Qbi70X9y3gqbu/iux77X2+guD6bo8dcJX6R4RxzL14in83Y1uXPN
PZei7lplscf6Nws9sujdjt8r+PCD8H2KN/MrOGE+mFPmTw6+uwbsfzON96Z4
J82Fq+CDOXItPLkhRT1k5OR58uKaeCRFLfwh3J7iTc1xfWTx3mbelMX/Vc7h
X+TxjhS9xvVqTrkvmFe/CLekeNfzsuBoGXl4klw0kbxpFu/qrcITKXqC87CH
OPj8K1P40Efzd1O8Oeam+Wp+PpaCW/bHdV9F7T+done4b7wpVGb8Psuix7m/
vZSirlxT/wGnbCBy
             "]], PolygonBox[CompressedData["
1:eJwtlFdsz1EUx++tPUIVTYygtJQKNf+hqCDSiFF/WorYMYJWg0TipWmIN89i
hQixE3tE7b2DILzZI0GMIubn65yHT865vzvOufd8zy9jZlmyNCWEMAZqQvMY
QjrMwe8KV6EX45XYdHgE24BPoT+8gQ4MyrAjYSN8hLGQAXt8jebGw2aox/op
2PZQF79OtLWT4SR8hSTMhypow/wCbA04D7mMK7ANoS3+Lmw3WAiHoT7fpmKn
w3vYD5OgEDoydw87GGb42ad8r2I0YZwKXfBnwTlIMF7jMXTXM9i8YHe+6zEV
Kx/2wS8YAN3hiPKMNtcXmuIfx84N9sZ/4bfuBEXwwXMu9DfcpLjsWY5tB1n4
mdHO0h2uQE/GlbLBCrMe0wOKYR388bOV02vVhTWLsCNgi/JkvALbGb7DWtfC
ODgGjaO9xWx4B29hFIyGn7DX75rnc7t9r9a0YO8J18pQ2KCz+TYROwFq4adE
80sgB/9FMO0thWfwHIYEq0mDaBqSdqbBfXgKw3xNH+Zv+lutgkues3IdqH3M
n8aWBnuD1oy3B9NWATxUHL4twS6DO6ob49U6G255DJ3dG7Lxd2AXQzl8gkbR
tJXw3LSm3HNUrWO02uR6rAd+V8XsFO2MhJ+5E155bknP5bbXSjmpN695LurR
z/AFhpsU/mv/BgwK1gPqjUP+duqRg1A7Wu+pJ697TUp8j97qR7De1ZtVwzfX
jjSiXrwQTHsVrqWj2H7BNCUtPvHaS5PqpbPBelc9tRXSomkrB1pF+weo9+fB
S2gZzdedpPXLwf5Fla6li15baUq9csBrpZ55LC1Fq6VyahYtpmKpB/8BXsWG
sQ==
             "]]}]}, {}, {}, {}, {}}, 
        {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[2.], 
         LineBox[CompressedData["
1:eJwt0ulWDHAcx+GZLBVSUpaEppQlZElch0voAridlIoWyr4kVCgqJbSKFtEm
a9qFpMfRi+d8ft//zKs5E8o+ffJUMBAIFLHFUa1vKGWzPa0zfCDB3kaNe5Zy
xkj0dkG3a78+YIf7oe7US/qY4+46fcsTDtn1ep0mjthPdYBmjtrP9AZf+cZL
jnl/oe8o4KB9S3toI8tu1UHOk2Hf1V72u1/rPu3WdB3VEuLdm9jIfTtOizVW
72m0biAm+P/3GmaEV+z11qVD7HGX6W6d0vUaRRqddqruYtJdyTp3u57QDr3D
GneFrtVzGqm3dbVGEE6h/Z58JvjOODd5TqbvtOgqDWMFZ+2V2qCHtVG/8JnL
zJPDRZJ8Pqc/+EjITuaR+ydX+ESKt1o9oGf0N1f5xTUWyGWRv/wh+O9PR570
sdVdtfwfXALhAFuQ
          "]]}}], {}}, {{}, 
      InterpretationBox[{
        TagBox[
         TagBox[
          {RGBColor[1, 0, 0], PointSize[Medium], AbsoluteThickness[2], 
           PointBox[{{0.20273017010969008`, -0.13541818830630567`}, {
            0.13630502525008253`, -0.15066174518176742`}, {
            0.20273017010969008`, 0.13541818830630567`}, {
            0.13630502525008253`, 
            0.15066174518176742`}, {-0.24463211264929655`, 
            0.}, {-0.187761274920686, 0.08380254865595828}, {
            0.32471160712296326`, 
            0.}, {-0.187761274920686, -0.08380254865595828}}]},
          Annotation[#, "Charting`Private`Tag#1"]& ],
         {
         "WolframDynamicHighlight", <|
          "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>}], 
        StyleBox[
         DynamicBox[(Charting`HighlightActionBox["DynamicHighlight", {}, 
           Slot["HighlightElements"], 
           Slot["LayoutOptions"], 
           Slot["Meta"], 
           Charting`HighlightActionFunction["DynamicHighlight", {{
              Annotation[{
                Directive[
                 AbsoluteThickness[2], 
                 RGBColor[1, 0, 0], 
                 PointSize[Medium]], 
                
                Point[{{0.20273017010969008`, -0.13541818830630567`}, {
                 0.13630502525008253`, -0.15066174518176742`}, {
                 0.20273017010969008`, 0.13541818830630567`}, {
                 0.13630502525008253`, 
                 0.15066174518176742`}, {-0.24463211264929655`, 
                 0.}, {-0.187761274920686, 0.08380254865595828}, {
                 0.32471160712296326`, 
                 0.}, {-0.187761274920686, -0.08380254865595828}}]}, 
               "Charting`Private`Tag#1"]}}, <|
            "HighlightElements" -> <|
              "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>, 
             "LayoutOptions" -> <|
              "PanelPlotLayout" -> <||>, 
               "PlotRange" -> {{-0.24463211264929655`, 
                0.32471160712296326`}, {-0.15066174518176742`, 
                0.15066174518176742`}}, 
               "Frame" -> {{False, False}, {False, False}}, 
               "AxesOrigin" -> {0, 0}, "ImageSize" -> {360, 360/GoldenRatio}, 
               "Axes" -> {True, True}, "LabelStyle" -> {}, "AspectRatio" -> 
               GoldenRatio^(-1), "DefaultStyle" -> {
                 Directive[
                  AbsoluteThickness[2], 
                  RGBColor[1, 0, 0], 
                  PointSize[Medium]]}, 
               "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
                   Identity[
                    Part[#, 1]], 
                   Identity[
                    Part[#, 2]]}& ), 
                 "ScalingFunctions" -> {{Identity, Identity}, {
                   Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
               False|>, 
             "Meta" -> <|
              "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, 
               "Function" -> ListPlot, "GroupHighlight" -> False|>|>]]& )[<|
           "HighlightElements" -> <|
             "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>, 
            "LayoutOptions" -> <|
             "PanelPlotLayout" -> <||>, 
              "PlotRange" -> {{-0.24463211264929655`, 
               0.32471160712296326`}, {-0.15066174518176742`, 
               0.15066174518176742`}}, 
              "Frame" -> {{False, False}, {False, False}}, 
              "AxesOrigin" -> {0, 0}, "ImageSize" -> {360, 360/GoldenRatio}, 
              "Axes" -> {True, True}, "LabelStyle" -> {}, "AspectRatio" -> 
              GoldenRatio^(-1), "DefaultStyle" -> {
                Directive[
                 AbsoluteThickness[2], 
                 RGBColor[1, 0, 0], 
                 PointSize[Medium]]}, 
              "HighlightLabelingFunctions" -> <|
               "CoordinatesToolOptions" -> ({
                  Identity[
                   Part[#, 1]], 
                  Identity[
                   Part[#, 2]]}& ), 
                "ScalingFunctions" -> {{Identity, Identity}, {
                  Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
              False|>, 
            "Meta" -> <|
             "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, 
              "Function" -> ListPlot, "GroupHighlight" -> False|>|>],
          
          ImageSizeCache->{{4.503599627370496*^15, -4.503599627370496*^15}, {
           4.503599627370496*^15, -4.503599627370496*^15}}],
         Selectable->False]},
       Annotation[{{
          Annotation[{
            Directive[
             AbsoluteThickness[2], 
             RGBColor[1, 0, 0], 
             PointSize[Medium]], 
            
            Point[{{0.20273017010969008`, -0.13541818830630567`}, {
             0.13630502525008253`, -0.15066174518176742`}, {
             0.20273017010969008`, 0.13541818830630567`}, {
             0.13630502525008253`, 
             0.15066174518176742`}, {-0.24463211264929655`, 
             0.}, {-0.187761274920686, 0.08380254865595828}, {
             0.32471160712296326`, 
             0.}, {-0.187761274920686, -0.08380254865595828}}]}, 
           "Charting`Private`Tag#1"]}}, <|
        "HighlightElements" -> <|
          "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>, 
         "LayoutOptions" -> <|
          "PanelPlotLayout" -> <||>, 
           "PlotRange" -> {{-0.24463211264929655`, 
            0.32471160712296326`}, {-0.15066174518176742`, 
            0.15066174518176742`}}, 
           "Frame" -> {{False, False}, {False, False}}, 
           "AxesOrigin" -> {0, 0}, "ImageSize" -> {360, 360/GoldenRatio}, 
           "Axes" -> {True, True}, "LabelStyle" -> {}, "AspectRatio" -> 
           GoldenRatio^(-1), "DefaultStyle" -> {
             Directive[
              AbsoluteThickness[2], 
              RGBColor[1, 0, 0], 
              PointSize[Medium]]}, 
           "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
               Identity[
                Part[#, 1]], 
               Identity[
                Part[#, 2]]}& ), 
             "ScalingFunctions" -> {{Identity, Identity}, {
               Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
           False|>, 
         "Meta" -> <|
          "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
           ListPlot, "GroupHighlight" -> False|>|>, 
        "DynamicHighlight"]], {{}, {}}}},
    AspectRatio->1,
    Axes->{False, False},
    AxesLabel->{
      FormBox[
       TagBox[
        StyleBox["\"p[1]\"", Bold, 14, StripOnInput -> False], HoldForm], 
       TraditionalForm], 
      FormBox[
       TagBox[
        StyleBox["\"p[4]\"", Bold, 14, StripOnInput -> False], HoldForm], 
       TraditionalForm]},
    AxesOrigin->{0, 0},
    DisplayFunction->Identity,
    Frame->{{True, True}, {True, True}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    ImagePadding->All,
    Method->{
     "DefaultGraphicsInteraction" -> {
       "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
        "Effects" -> {
         "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
          "Droplines" -> {
           "freeformCursorMode" -> True, 
            "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
      "ScalingFunctions" -> None, "TransparentPolygonMesh" -> True, 
      "AxesInFront" -> True},
    PlotLabel->FormBox[
      StyleBox["\"\[Theta] = 0.687223\"", Bold, 16, StripOnInput -> False], 
      TraditionalForm],
    PlotRange->{{-0.5, 0.5}, {-0.5, 0.5}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.02], 
       Scaled[0.02]}},
    Ticks->{Automatic, Automatic}], ",", 
   GraphicsBox[{{GraphicsComplexBox[CompressedData["
1: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
4hsvfOl/2quaJg==
       "], {{
         {RGBColor[0, 0, 1], AbsoluteThickness[2.], Opacity[0.3], EdgeForm[
          None], GraphicsGroupBox[{PolygonBox[CompressedData["
1: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
HywZ
             "]], PolygonBox[CompressedData["
1:eJwtlPtrz1EYx8+Ze+bSyMilvkyzjbZhbHO/tTCyNebamAixL6LVJKX2g/aD
P0Du10RuUfziGnO/ZyKXKEJySbnn9fY8P7x6nud8zjnPOZ/n/ZxEdbK8JiWE
UAbNoX0M4Sx2PlTBdmjN2BzsGNgPb2AKJGAfFPJ9g8cJ/EvYkTAZrkAmY8ux
zaBDtD0SniOHuAk7AaphD6QyNg87Dq7CX5gJNbAFnsNEP+9Q5u7FpsN6OAI7
YSxMh6O+p/aqhHbM/6Z1wXJoblvG5vqanvi9YAl+f+iEnwur8RdCwD+JyYNR
0IJ4G3YgzIZTmsLYaJ/zCfoRJ7EVkI2fBUV+5x743SEnWM57fifdpVB3xE+B
fPxZsFX/MZqvHAegiHgjNguewiE75v8anIZignrd3c9y3c+e9Nrd91yqYVfi
dMjGXwSf4Yv/y8FwEbpE+7YY2uC3gkHBNHJTeYk3Bxv7DX+gHKSzXTCE7+u8
ZvLvYguCjb1yzUlrpfACnsBamASP4BwsgPGqEeu/646wEvoSH3atKed7+AAl
we70GN7BVB874TWqcI39gM7Raj3Cc+cRr/EzKFdaNK0W+14DiFf5ng9hOHGD
a+ya/gNxLTZXOlEto2lLezbCa7/rCp8rjUvbWqPat4ymrXzPdczvqpzPgvWI
ekM9IS3vxs4IpumvwXqg0scK+L7DtVAHd3yszmsgLV3wu0tT6t1GP5t6+BYM
Y2wTNhV+wi+YFkxzqo3ekCqvUUY0Daj2y3ztbdeS9pA2z/i/qfd/9yCYlhtc
Szc8lzTVh/iy77U0WO+9DPbWqAfVq8ddK+rZg9AtmlbVYx+hd7S1OvPbYG+Y
3iO9aeehYzRtqUf/Acauhb4=
             "]]}]}, {}, {}, {}, {}}, 
        {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[2.], 
         LineBox[CompressedData["
1:eJwt0uk21WEYxuF/lCFCaaAkmiUlKkPiHDqEDiAH1DxRxkKDJhUaiFCJSlIq
JYQU0nBZy4dr/Z773fvb3qmHiw8dWRQEQQkpjmZ9QwUb7Fn9zSgb7U08cG/W
Of3DGFvsSt2q7/Uh29yPdJAPnCTCWyThXLPbKHQ/0Y+0c8B+qtcZZ4JqThPl
s7N6UH/oJJc4R7S3ZUy5f/KCAvu5fuECefZ9XaUzulLj2U2N/Y7XZNpZ7GHE
Lme9O5m1JLGOMu+J2qirNYE1XLSH+cYrdnnr1a9kuC/rTp3WFbqcdHrsHZrG
L/c94tzdWqQv9S4x7gaN1VL9zB2GFn7LXO/P9DZd5Njn9RNn2G936i2Wum9q
B/vcp7SKevLtG1pHC9n2Ue2nj7c85i+1fGe777TqXj2mgV6Rf1ydn/ZxDdXF
hBDGEk54HyDV3bTwn/wPvwtbfA==
          "]]}}], {}}, {{}, 
      InterpretationBox[{
        TagBox[
         TagBox[
          {RGBColor[1, 0, 0], PointSize[Medium], AbsoluteThickness[2], 
           PointBox[{{0.20827961037936354`, -0.11744815376381562`}, {
            0.06911030308364147, -0.14745807288769286`}, {
            0.20827961037936354`, 0.11744815376381562`}, {0.06911030308364147,
             0.14745807288769286`}, {-0.27062447686165797`, 
            0.}, {-0.2000885167457542, 0.09259655138646705}, {
            0.3111409101013909, 
            0.}, {-0.2000885167457542, -0.09259655138646705}}]},
          Annotation[#, "Charting`Private`Tag#1"]& ],
         {
         "WolframDynamicHighlight", <|
          "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>}], 
        StyleBox[
         DynamicBox[(Charting`HighlightActionBox["DynamicHighlight", {}, 
           Slot["HighlightElements"], 
           Slot["LayoutOptions"], 
           Slot["Meta"], 
           Charting`HighlightActionFunction["DynamicHighlight", {{
              Annotation[{
                Directive[
                 AbsoluteThickness[2], 
                 RGBColor[1, 0, 0], 
                 PointSize[Medium]], 
                
                Point[{{0.20827961037936354`, -0.11744815376381562`}, {
                 0.06911030308364147, -0.14745807288769286`}, {
                 0.20827961037936354`, 0.11744815376381562`}, {
                 0.06911030308364147, 
                 0.14745807288769286`}, {-0.27062447686165797`, 
                 0.}, {-0.2000885167457542, 0.09259655138646705}, {
                 0.3111409101013909, 
                 0.}, {-0.2000885167457542, -0.09259655138646705}}]}, 
               "Charting`Private`Tag#1"]}}, <|
            "HighlightElements" -> <|
              "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>, 
             "LayoutOptions" -> <|
              "PanelPlotLayout" -> <||>, 
               "PlotRange" -> {{-0.27062447686165797`, 
                0.3111409101013909}, {-0.14745807288769286`, 
                0.14745807288769286`}}, 
               "Frame" -> {{False, False}, {False, False}}, 
               "AxesOrigin" -> {0, 0}, "ImageSize" -> {360, 360/GoldenRatio}, 
               "Axes" -> {True, True}, "LabelStyle" -> {}, "AspectRatio" -> 
               GoldenRatio^(-1), "DefaultStyle" -> {
                 Directive[
                  AbsoluteThickness[2], 
                  RGBColor[1, 0, 0], 
                  PointSize[Medium]]}, 
               "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
                   Identity[
                    Part[#, 1]], 
                   Identity[
                    Part[#, 2]]}& ), 
                 "ScalingFunctions" -> {{Identity, Identity}, {
                   Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
               False|>, 
             "Meta" -> <|
              "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, 
               "Function" -> ListPlot, "GroupHighlight" -> False|>|>]]& )[<|
           "HighlightElements" -> <|
             "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>, 
            "LayoutOptions" -> <|
             "PanelPlotLayout" -> <||>, 
              "PlotRange" -> {{-0.27062447686165797`, 
               0.3111409101013909}, {-0.14745807288769286`, 
               0.14745807288769286`}}, 
              "Frame" -> {{False, False}, {False, False}}, 
              "AxesOrigin" -> {0, 0}, "ImageSize" -> {360, 360/GoldenRatio}, 
              "Axes" -> {True, True}, "LabelStyle" -> {}, "AspectRatio" -> 
              GoldenRatio^(-1), "DefaultStyle" -> {
                Directive[
                 AbsoluteThickness[2], 
                 RGBColor[1, 0, 0], 
                 PointSize[Medium]]}, 
              "HighlightLabelingFunctions" -> <|
               "CoordinatesToolOptions" -> ({
                  Identity[
                   Part[#, 1]], 
                  Identity[
                   Part[#, 2]]}& ), 
                "ScalingFunctions" -> {{Identity, Identity}, {
                  Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
              False|>, 
            "Meta" -> <|
             "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, 
              "Function" -> ListPlot, "GroupHighlight" -> False|>|>],
          
          ImageSizeCache->{{4.503599627370496*^15, -4.503599627370496*^15}, {
           4.503599627370496*^15, -4.503599627370496*^15}}],
         Selectable->False]},
       Annotation[{{
          Annotation[{
            Directive[
             AbsoluteThickness[2], 
             RGBColor[1, 0, 0], 
             PointSize[Medium]], 
            
            Point[{{0.20827961037936354`, -0.11744815376381562`}, {
             0.06911030308364147, -0.14745807288769286`}, {
             0.20827961037936354`, 0.11744815376381562`}, {
             0.06911030308364147, 
             0.14745807288769286`}, {-0.27062447686165797`, 
             0.}, {-0.2000885167457542, 0.09259655138646705}, {
             0.3111409101013909, 
             0.}, {-0.2000885167457542, -0.09259655138646705}}]}, 
           "Charting`Private`Tag#1"]}}, <|
        "HighlightElements" -> <|
          "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>, 
         "LayoutOptions" -> <|
          "PanelPlotLayout" -> <||>, 
           "PlotRange" -> {{-0.27062447686165797`, 
            0.3111409101013909}, {-0.14745807288769286`, 
            0.14745807288769286`}}, 
           "Frame" -> {{False, False}, {False, False}}, 
           "AxesOrigin" -> {0, 0}, "ImageSize" -> {360, 360/GoldenRatio}, 
           "Axes" -> {True, True}, "LabelStyle" -> {}, "AspectRatio" -> 
           GoldenRatio^(-1), "DefaultStyle" -> {
             Directive[
              AbsoluteThickness[2], 
              RGBColor[1, 0, 0], 
              PointSize[Medium]]}, 
           "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
               Identity[
                Part[#, 1]], 
               Identity[
                Part[#, 2]]}& ), 
             "ScalingFunctions" -> {{Identity, Identity}, {
               Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
           False|>, 
         "Meta" -> <|
          "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
           ListPlot, "GroupHighlight" -> False|>|>, 
        "DynamicHighlight"]], {{}, {}}}},
    AspectRatio->1,
    Axes->{False, False},
    AxesLabel->{
      FormBox[
       TagBox[
        StyleBox["\"p[1]\"", Bold, 14, StripOnInput -> False], HoldForm], 
       TraditionalForm], 
      FormBox[
       TagBox[
        StyleBox["\"p[4]\"", Bold, 14, StripOnInput -> False], HoldForm], 
       TraditionalForm]},
    AxesOrigin->{0, 0},
    DisplayFunction->Identity,
    Frame->{{True, True}, {True, True}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    ImagePadding->All,
    Method->{
     "DefaultGraphicsInteraction" -> {
       "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
        "Effects" -> {
         "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
          "Droplines" -> {
           "freeformCursorMode" -> True, 
            "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
      "ScalingFunctions" -> None, "TransparentPolygonMesh" -> True, 
      "AxesInFront" -> True},
    PlotLabel->FormBox[
      StyleBox["\"\[Theta] = 0.736311\"", Bold, 16, StripOnInput -> False], 
      TraditionalForm],
    PlotRange->{{-0.5, 0.5}, {-0.5, 0.5}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.02], 
       Scaled[0.02]}},
    Ticks->{Automatic, Automatic}], ",", 
   GraphicsBox[{{GraphicsComplexBox[CompressedData["
1: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
M0albKgzix7alxkOBqx++In/rMZr/gVdspu+
       "], {{
         {RGBColor[0, 0, 1], AbsoluteThickness[2.], Opacity[0.3], EdgeForm[
          None], GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJxNlldsl2UYxZ8/HUILLV20lLLKqsgUKBRBZalokSEgyhQUFJWlOBCLmri3
JsYVbzTuvfe60Cu3iTOOuPXCFfc8J8+voRcn3/t9fd9nnHOet//Bazcv2tQt
IkoKEUV6niCMEUYLK4TZwkhhkzBHGCvsEjqEDcKoyHM9hQqh2LGEXnz3e1/+
VinsKShVlPJewro3zz2E1cJcYbxQLXQXeggThHKhTqgnp/M08HSOfYXpwnCh
ing+34ezPlNDvDKhkTqcf7LQKgwQtgnHCROFSZwfyN98vlYYxHfX0kwd7nUw
3/zej9iupT/9+PwQ9jr/UJ7eu1CYQmz30MS5RUIbsbdzvkVYLOxDjCbyOMcw
4vnbVOobISwX9kOHpcI09p5MrGloOxLuZqN5d/QuRT97YRw8FsG/ud070hPl
XbQxF2PIab2L0aoX75W894CbanJXwd14vpcR15zXka+e91mRni2O3X5y3K3C
5kjvzBD2ot4K+G+Ao+HwUIPG5nwi61pq6s/edcK8SF/Uo8kg6vBzILkbyVHF
uX7ka+ZMX3T0eys19GffMDQ9KdITbeg+gv3WvIXzvTnTGLv95O/rI30zFf2q
qaUELczTTOFwOFnJe6d+o+C4CN6KwWhiOOZYdBuNxiVw1kov1nFk7J7hceh4
ILp6fQj6WNNlkR5y/oPRoBZuJ7HnUNbm+QhhPvlqiOn9G4V2zm8RDiLH2sg5
H0BPs+ipGZ6sy2GsR/Dehq5D4X0I/HmOCug2Hc2OFJaw75jI+2g4HM+Ay8fN
TSE9ZG5md+FyTheeDoCfVfBVhiYzieOapsDDBHosh4O58LA/OXzHr4HTWnhp
hwfHWEAc97qQ2K1w6/p3CKdH+ukM+lwMT4vgybqtpMaj0ckxp7G3kz/z00K9
y6jZ/C2Fw8no6vz21HL4di8r6Mf6mz/74UxhJ+cXU5vzHBXprTq4XAWH5vtE
+HaN64i3gLoHws1a+JmPlubh2Mh70LrbJ+vhwPqshvt55HbeUvZ7DnZx3lr4
TtqCbvbg8ZEz5Hq38t0+88zbm6ewbkHbNejo/1Eb0dPabmO9nTOdd/6pkX71
fXIaGteqicfotU7rp+n1L+E3zn8l3Bjpx1eF5+m7j/a/gJb28hP0/b5wfeRs
Ver7fXBfrfVD1F6l9QWRfrF37Ks2tLdX7JNu2vN2pDfvFF6kftf1B7XdItQX
0i+uq3sha/tX+I+e/xbeRa/fhSvgpLiQv3nMxQA9n0X/gtYvodHVvHv9RmQQ
69eBlt3QcxcavyPcFunlXtp7VqRnvxeeIb5rfA4OK7Q+O/JeuFL4E33vEG6P
vDs+FM7BI98I58FnP519MtK/vbU+P9KDjVo/EumjGq0vwhf3CA2FvDuugpcC
/N0cyaHnZycabKDPzvu7g379O8Hz7zmz93eg4T/oZI3egy9z01fxH4ycdXP/
Cvy7lnsj63lZuAuurPmt6H55pM+WwJ91ModP0b97twdfj9zTpG9vRc6En2+y
vi7Sl/ak+f4Azj8SPo6cvWuE0kJ68VqhrJBcPEAPrv8XNLa+nwqfRP5e/lL4
IvI38g2RM+N5OVf4OvJOt56/oulnwueRd9B3wsWR98G3vHv9s/ATfP8o/BA5
uzdFzo9n5zV8Y89cFjnDnt/78YT90FPP8kLekXdHes69P4pX7JOH8Yp9cmHk
rHpO7TXPsP12Cfyaz0sj7452dLPXrd3/vE/d8Q==
             "]], PolygonBox[CompressedData["
1:eJwt0+dLlWEYx/HrnKxo/BO9SogselNC2t5DK7I9PJmklSOlHUgZtoNs7x1B
w7aZGGTLNkJRtGxi0V40qPxe3L8XH+6H8zznHtf1u1vFcofmRM1sAOJQgeuY
hMFoFjHbwDga81CEqxiLrjiKbRiP3liCGoxDB+zBOoxCR3xDS+ZcwJiGO7iN
eAxHCa5hAvpYWHu13vkejqAaI9Adx3ERI9EX7/EWucjHZVzRXqPayyqkaE9+
1nIM0pl97aXopz00Z6/3GDtjvs5ejJ6qwUI8wVT0wCssRi/kYCveqDbt8Q7H
tNc8fFGNvbaFqt1hnc1r2Ih3UXTieQj24SCSMRmX8A+zMAZrsRIDkY0LWAOm
sC54iedoh+lYpDn8vwn4ge9I0hp+1hf61s98QD1M0ze7sFe9jeEEdmCiangf
DzBFe/DeHUI39bBWe/a9ZuEhNqGNvtmMR6qt/9aUSdYzzsFc3NBv/pypLGy3
kD3PxE6ctpDvdOzGOQvZzkDjSKix13Y2zuhMMdWwCe/uMiZqzV/4idaYicd4
hmloi0+Ii4S5CtCC540WsuOZ/4+/6oX3rE49SNAc3pvXFrLjPfK1P2uuRNX2
JPqrxp7Nrxay4xldhg+YoW/8bpZZuEt+R/fjI1ItZGq5hUx6Fv3O1GOLhax6
hk9ZuFP5quFv/NHZ47XWCvXO16xSjTO0xlPVyGvjd6TSQoY9u34Hb+IWhqmm
HpJSC3fVM3NePc7UN2fVU++l39kGOLGYlw==
             "]]}]}, {}, {}, {}, {}}, 
        {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[2.], 
         LineBox[CompressedData["
1:eJwt0ulWTmEAhuEdJZWhDEWDtTolh9AB5BSQMWOTonkgVKgUMqQyVOYGFBpF
FEkaFOqy+HGt+33eb+9f+0tO2bUzNSQIghJ+c5FWMvnFa/p4QeDBrL/RB/qQ
Ktbbu7WdfYzynhE+MMZ+xsnnIwV84gAbvX9ZC7lCtH1QOznMJrtei7nKZjtd
v3KURLtbu8jmGFvcXdNSKoizyzWH42y1b+lZLnCeOWZ5RSU/WOe5KPKcI/Wl
zvCdCDtXTxDr3KLPeUYGiywxz08WOMkTnnKXtd5r1seEO5/SNdqr03wj1A5j
NavocXeOKW6zw90dLeMmCXaTPuI6SfaN/9+4kXi7Qb/wmQmOMEkt2/1ep/co
IsY+pB3UsM2+pG1Us8Heo284TT9neMteBhjkHcMMkcZ9/rAc/PvvrQByCmUB

          "]]}}], {}}, {{}, 
      InterpretationBox[{
        TagBox[
         TagBox[
          {RGBColor[1, 0, 0], PointSize[Medium], AbsoluteThickness[2], 
           PointBox[{{0.20710678118654752`, -0.10355339059327376`}, {
            0., -0.14644660940672624`}, {0.20710678118654752`, 
            0.10355339059327376`}, {0., 
            0.14644660940672624`}, {-0.2928932188134525, 
            0.}, {-0.20710678118654752`, 0.10355339059327376`}, {
            0.2928932188134525, 
            0.}, {-0.20710678118654752`, -0.10355339059327376`}}]},
          Annotation[#, "Charting`Private`Tag#1"]& ],
         {
         "WolframDynamicHighlight", <|
          "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>}], 
        StyleBox[
         DynamicBox[(Charting`HighlightActionBox["DynamicHighlight", {}, 
           Slot["HighlightElements"], 
           Slot["LayoutOptions"], 
           Slot["Meta"], 
           Charting`HighlightActionFunction["DynamicHighlight", {{
              Annotation[{
                Directive[
                 AbsoluteThickness[2], 
                 RGBColor[1, 0, 0], 
                 PointSize[Medium]], 
                
                Point[{{0.20710678118654752`, -0.10355339059327376`}, {
                 0., -0.14644660940672624`}, {0.20710678118654752`, 
                 0.10355339059327376`}, {0., 
                 0.14644660940672624`}, {-0.2928932188134525, 
                 0.}, {-0.20710678118654752`, 0.10355339059327376`}, {
                 0.2928932188134525, 
                 0.}, {-0.20710678118654752`, -0.10355339059327376`}}]}, 
               "Charting`Private`Tag#1"]}}, <|
            "HighlightElements" -> <|
              "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>, 
             "LayoutOptions" -> <|
              "PanelPlotLayout" -> <||>, 
               "PlotRange" -> {{-0.2928932188134525, 
                0.2928932188134525}, {-0.14644660940672624`, 
                0.14644660940672624`}}, 
               "Frame" -> {{False, False}, {False, False}}, 
               "AxesOrigin" -> {0, 0}, "ImageSize" -> {360, 360/GoldenRatio}, 
               "Axes" -> {True, True}, "LabelStyle" -> {}, "AspectRatio" -> 
               GoldenRatio^(-1), "DefaultStyle" -> {
                 Directive[
                  AbsoluteThickness[2], 
                  RGBColor[1, 0, 0], 
                  PointSize[Medium]]}, 
               "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
                   Identity[
                    Part[#, 1]], 
                   Identity[
                    Part[#, 2]]}& ), 
                 "ScalingFunctions" -> {{Identity, Identity}, {
                   Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
               False|>, 
             "Meta" -> <|
              "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, 
               "Function" -> ListPlot, "GroupHighlight" -> False|>|>]]& )[<|
           "HighlightElements" -> <|
             "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>, 
            "LayoutOptions" -> <|
             "PanelPlotLayout" -> <||>, 
              "PlotRange" -> {{-0.2928932188134525, 
               0.2928932188134525}, {-0.14644660940672624`, 
               0.14644660940672624`}}, 
              "Frame" -> {{False, False}, {False, False}}, 
              "AxesOrigin" -> {0, 0}, "ImageSize" -> {360, 360/GoldenRatio}, 
              "Axes" -> {True, True}, "LabelStyle" -> {}, "AspectRatio" -> 
              GoldenRatio^(-1), "DefaultStyle" -> {
                Directive[
                 AbsoluteThickness[2], 
                 RGBColor[1, 0, 0], 
                 PointSize[Medium]]}, 
              "HighlightLabelingFunctions" -> <|
               "CoordinatesToolOptions" -> ({
                  Identity[
                   Part[#, 1]], 
                  Identity[
                   Part[#, 2]]}& ), 
                "ScalingFunctions" -> {{Identity, Identity}, {
                  Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
              False|>, 
            "Meta" -> <|
             "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, 
              "Function" -> ListPlot, "GroupHighlight" -> False|>|>],
          
          ImageSizeCache->{{4.503599627370496*^15, -4.503599627370496*^15}, {
           4.503599627370496*^15, -4.503599627370496*^15}}],
         Selectable->False]},
       Annotation[{{
          Annotation[{
            Directive[
             AbsoluteThickness[2], 
             RGBColor[1, 0, 0], 
             PointSize[Medium]], 
            
            Point[{{0.20710678118654752`, -0.10355339059327376`}, {
             0., -0.14644660940672624`}, {0.20710678118654752`, 
             0.10355339059327376`}, {0., 
             0.14644660940672624`}, {-0.2928932188134525, 
             0.}, {-0.20710678118654752`, 0.10355339059327376`}, {
             0.2928932188134525, 
             0.}, {-0.20710678118654752`, -0.10355339059327376`}}]}, 
           "Charting`Private`Tag#1"]}}, <|
        "HighlightElements" -> <|
          "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>, 
         "LayoutOptions" -> <|
          "PanelPlotLayout" -> <||>, 
           "PlotRange" -> {{-0.2928932188134525, 
            0.2928932188134525}, {-0.14644660940672624`, 
            0.14644660940672624`}}, 
           "Frame" -> {{False, False}, {False, False}}, 
           "AxesOrigin" -> {0, 0}, "ImageSize" -> {360, 360/GoldenRatio}, 
           "Axes" -> {True, True}, "LabelStyle" -> {}, "AspectRatio" -> 
           GoldenRatio^(-1), "DefaultStyle" -> {
             Directive[
              AbsoluteThickness[2], 
              RGBColor[1, 0, 0], 
              PointSize[Medium]]}, 
           "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
               Identity[
                Part[#, 1]], 
               Identity[
                Part[#, 2]]}& ), 
             "ScalingFunctions" -> {{Identity, Identity}, {
               Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
           False|>, 
         "Meta" -> <|
          "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
           ListPlot, "GroupHighlight" -> False|>|>, 
        "DynamicHighlight"]], {{}, {}}}},
    AspectRatio->1,
    Axes->{False, False},
    AxesLabel->{
      FormBox[
       TagBox[
        StyleBox["\"p[1]\"", Bold, 14, StripOnInput -> False], HoldForm], 
       TraditionalForm], 
      FormBox[
       TagBox[
        StyleBox["\"p[4]\"", Bold, 14, StripOnInput -> False], HoldForm], 
       TraditionalForm]},
    AxesOrigin->{0, 0},
    DisplayFunction->Identity,
    Frame->{{True, True}, {True, True}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    ImagePadding->All,
    Method->{
     "DefaultGraphicsInteraction" -> {
       "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
        "Effects" -> {
         "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
          "Droplines" -> {
           "freeformCursorMode" -> True, 
            "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
      "ScalingFunctions" -> None, "TransparentPolygonMesh" -> True, 
      "AxesInFront" -> True},
    PlotLabel->FormBox[
      StyleBox["\"\[Theta] = 0.785398\"", Bold, 16, StripOnInput -> False], 
      TraditionalForm],
    PlotRange->{{-0.5, 0.5}, {-0.5, 0.5}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.02], 
       Scaled[0.02]}},
    Ticks->{Automatic, Automatic}]}], "}"}]], "Output",
 CellChangeTimes->{3.953867119328242*^9, 3.9539609161111403`*^9, 
  3.954298014740806*^9, 3.95430352248584*^9, 3.954303628712368*^9, 
  3.954303681998762*^9, 3.954921509331101*^9},
 CellLabel->
  "Out[112]=",ExpressionUUID->"61ceb29b-8577-4487-9806-c71e25ec0c95"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Export", "[", 
  RowBox[{"\"\</Users/andrea/Desktop/Local_Polytopes.png\>\"", ",", 
   RowBox[{"GraphicsGrid", "[", 
    RowBox[{"Partition", "[", 
     RowBox[{"frames2", ",", "4"}], "]"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.953867131419776*^9, 3.95386713142138*^9}, {
   3.953867265663023*^9, 3.95386727022195*^9}, {3.953867965503222*^9, 
   3.953867973328175*^9}, 3.954303672833981*^9},
 CellLabel->
  "In[133]:=",ExpressionUUID->"16743e58-f419-4844-b6e4-2958009fccd4"],

Cell[BoxData["\<\"/Users/andrea/Desktop/Local_Polytopes.png\"\>"], "Output",
 CellChangeTimes->{{3.9538672789962606`*^9, 3.9538672857549057`*^9}, 
   3.95396091657443*^9, 3.954298015751985*^9, 3.954303634087206*^9, 
   3.954303686273247*^9},
 CellLabel->
  "Out[133]=",ExpressionUUID->"2788cccf-30e7-40c5-85a6-9ed12e608d9a"]
}, Open  ]],

Cell["\<\
Finally, we want to extract the coordinates of the vertices for every \
considered value of theta.\
\>", "Text",
 CellChangeTimes->{{3.9543036966055593`*^9, 
  3.95430372585244*^9}},ExpressionUUID->"d4ea1476-386e-4a01-bc32-\
91f46c5225ab"],

Cell[BoxData[
 RowBox[{
  RowBox[{"vertexCoordsPerTheta", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", "verts", "}"}], ",", 
       RowBox[{"(*", 
        RowBox[{
        "Choose", " ", "the", " ", "correct", " ", "vertex", " ", "list", " ",
          "based", " ", "on", " ", "theta"}], "*)"}], 
       RowBox[{
        RowBox[{"verts", "=", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"th", ">", "\[Theta]T"}], ",", "v", ",", "v2"}], "]"}]}], 
        ";", "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{
         "Evaluate", " ", "the", " ", "vertex", " ", "list", " ", "with", " ",
           "the", " ", "current", " ", "theta"}], "*)"}], 
        RowBox[{"verts", "/.", " ", 
         RowBox[{"\[Theta]", "->", "th"}]}]}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"th", ",", 
       RowBox[{
        RowBox[{"\[Pi]", "/", "8"}], "+", 
        RowBox[{"\[Pi]", "/", "64"}]}], ",", 
       RowBox[{"\[Pi]", "/", "4"}], ",", 
       RowBox[{"\[Pi]", "/", "64"}]}], "}"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.954303851716531*^9, 3.95430385227069*^9}},
 CellLabel->
  "In[113]:=",ExpressionUUID->"4e85278b-7629-4f30-b105-f6b55305eed3"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"vertexCoordsPerTheta", "[", 
   RowBox[{"[", "1", "]"}], "]"}], "//", "N"}]], "Input",
 CellChangeTimes->{{3.954303861021484*^9, 3.954303880080855*^9}},
 CellLabel->
  "In[114]:=",ExpressionUUID->"07776b3f-bb5b-4d39-88e0-82061f9254bb"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.05394890518121988`"}], ",", 
     RowBox[{"-", "3.6245274314953894`*^-15"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.04715967991782621`"}], ",", "0.057558202465403496`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.20313889165984247`", ",", "0.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.12547474026989672`", ",", "0.17486269289057416`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.04715967991782614`"}], ",", 
     RowBox[{"-", "0.057558202465402074`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.12547474026989652`", ",", 
     RowBox[{"-", "0.17486269289058065`"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.954303866503214*^9, 3.95430388208027*^9}, 
   3.954921527870586*^9},
 CellLabel->
  "Out[114]=",ExpressionUUID->"8d4652a9-82c4-4e96-a0f6-81628606ea41"]
}, Open  ]],

Cell["Maybe this format is also useful:", "Text",
 CellChangeTimes->{{3.954304026404521*^9, 
  3.954304037011944*^9}},ExpressionUUID->"78ba1865-5715-4400-ab93-\
e7df8f996195"],

Cell[BoxData[
 RowBox[{
  RowBox[{"vertexCoordsWithTheta", "=", 
   RowBox[{"N", "[", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Module", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"verts", ",", "currentVerts"}], "}"}], ",", 
        RowBox[{
         RowBox[{"verts", "=", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"th", ">", "\[Theta]T"}], ",", "v", ",", "v2"}], "]"}]}], 
         ";", "\[IndentingNewLine]", 
         RowBox[{"currentVerts", "=", 
          RowBox[{"verts", "/.", " ", 
           RowBox[{"\[Theta]", "->", "th"}]}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"N", "[", "th", "]"}], ",", "currentVerts"}], "}"}]}]}], 
       "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"th", ",", 
        RowBox[{
         RowBox[{"\[Pi]", "/", "8"}], "+", 
         RowBox[{"\[Pi]", "/", "64"}]}], ",", 
        RowBox[{"\[Pi]", "/", "4"}], ",", 
        RowBox[{"\[Pi]", "/", "64"}]}], "}"}]}], "]"}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.954304021606935*^9, 3.9543040216080513`*^9}, {
  3.95430408859615*^9, 3.954304092981934*^9}},
 CellLabel->
  "In[115]:=",ExpressionUUID->"c2852e66-17f8-4cda-aa34-b014ef2ee683"],

Cell[CellGroupData[{

Cell[BoxData["vertexCoordsWithTheta"], "Input",
 CellChangeTimes->{{3.954304040781555*^9, 3.954304096162262*^9}},
 CellLabel->
  "In[116]:=",ExpressionUUID->"a437a8ed-33df-4ae4-aa4d-1fd5922b97b0"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0.44178646691106466`", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "0.05394890518121988`"}], ",", 
         RowBox[{"-", "3.6245274314953894`*^-15"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "0.04715967991782621`"}], ",", 
         "0.057558202465403496`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0.20313889165984247`", ",", "0.`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0.12547474026989672`", ",", "0.17486269289057416`"}], "}"}], 
       ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "0.04715967991782614`"}], ",", 
         RowBox[{"-", "0.057558202465402074`"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0.12547474026989652`", ",", 
         RowBox[{"-", "0.17486269289058065`"}]}], "}"}]}], "}"}]}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"0.4908738521234052`", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "0.10157730540543895`"}], ",", 
         RowBox[{"-", "3.791637280096456`*^-15"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "0.08692000551159267`"}], ",", "0.06135725341404975`"}],
         "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0.2835306787518958`", ",", "3.5278401585070884`*^-15"}], 
        "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0.1763915949092822`", ",", "0.16067802896433972`"}], "}"}], 
       ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "0.08692000551159283`"}], ",", 
         RowBox[{"-", "0.061357253414049684`"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0.17639159490928238`", ",", 
         RowBox[{"-", "0.1606780289643377`"}]}], "}"}]}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.5399612373357456`", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "0.14385074145234047`"}], ",", 
         RowBox[{"-", "1.409782930653796`*^-15"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "0.1202873074589905`"}], ",", "0.065667679487493`"}], 
        "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0.31865945156073555`", ",", "4.542492773133833`*^-15"}], 
        "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0.19574553565016972`", ",", "0.15463202492139835`"}], "}"}], 
       ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "0.12028730745899072`"}], ",", 
         RowBox[{"-", "0.06566767948749341`"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0.19574553565017014`", ",", 
         RowBox[{"-", "0.15463202492139783`"}]}], "}"}]}], "}"}]}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"0.5890486225480862`", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "0.18147912902285462`"}], ",", "0.`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "0.14796010969859458`"}], ",", "0.07068125923672561`"}],
         "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0.331821362080701`", ",", "1.7824877637421576`*^-15"}], 
        "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0.198912367379658`", ",", "0.15328148243818793`"}], "}"}], 
       ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "0.1479601096985946`"}], ",", 
         RowBox[{"-", "0.07068125923672575`"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0.198912367379658`", ",", 
         RowBox[{"-", "0.1532814824381885`"}]}], "}"}]}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.6381360077604268`", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "0.21496557885394985`"}], ",", 
         "6.705813024996573`*^-16"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "0.170380684618556`"}], ",", "0.0766282596119003`"}], 
        "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0.33236775670541285`", ",", 
         RowBox[{"-", "6.48009568522108`*^-16"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0.19274140884701269`", ",", "0.15520962098245153`"}], "}"}], 
       ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "0.17038068461855593`"}], ",", 
         RowBox[{"-", "0.07662825961190016`"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0.19274140884701263`", ",", 
         RowBox[{"-", "0.15520962098245114`"}]}], "}"}]}], "}"}]}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"0.6872233929727672`", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0.2027301701096902`", ",", 
         RowBox[{"-", "0.1354181883063053`"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0.1363050252500824`", ",", 
         RowBox[{"-", "0.15066174518176736`"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0.20273017010969008`", ",", "0.13541818830630553`"}], "}"}], 
       ",", 
       RowBox[{"{", 
        RowBox[{"0.1363050252500824`", ",", "0.15066174518176767`"}], "}"}], 
       ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "0.24463211264929655`"}], ",", 
         "3.1250968674757104`*^-16"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "0.187761274920686`"}], ",", "0.08380254865595811`"}], 
        "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0.3247116071229631`", ",", "1.0370216886731098`*^-16"}], 
        "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "0.18776127492068592`"}], ",", 
         RowBox[{"-", "0.08380254865595799`"}]}], "}"}]}], "}"}]}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"0.7363107781851077`", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0.20827961037936363`", ",", 
         RowBox[{"-", "0.11744815376381548`"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0.06911030308364173`", ",", 
         RowBox[{"-", "0.14745807288769272`"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0.20827961037936327`", ",", "0.11744815376381564`"}], "}"}], 
       ",", 
       RowBox[{"{", 
        RowBox[{"0.06911030308364145`", ",", "0.14745807288769316`"}], "}"}], 
       ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "0.27062447686165797`"}], ",", "0.`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "0.200088516745754`"}], ",", "0.09259655138646679`"}], 
        "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0.31114091010139083`", ",", "4.450393806354343`*^-17"}], 
        "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "0.20008851674575448`"}], ",", 
         RowBox[{"-", "0.09259655138646698`"}]}], "}"}]}], "}"}]}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"0.7853981633974483`", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0.20710678118654754`", ",", 
         RowBox[{"-", "0.10355339059327362`"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0.`", ",", 
         RowBox[{"-", "0.14644660940672652`"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0.20710678118654754`", ",", "0.10355339059327362`"}], "}"}], 
       ",", 
       RowBox[{"{", 
        RowBox[{"0.`", ",", "0.14644660940672652`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "0.2928932188134524`"}], ",", "0.`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "0.20710678118654754`"}], ",", "0.10355339059327362`"}],
         "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0.2928932188134524`", ",", "0.`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "0.20710678118654754`"}], ",", 
         RowBox[{"-", "0.10355339059327362`"}]}], "}"}]}], "}"}]}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.954304045895221*^9, 3.954304098452224*^9}, 
   3.954921533126297*^9},
 CellLabel->
  "Out[116]=",ExpressionUUID->"b870b39d-8717-4a3a-a6f9-77c712a86022"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Export", "[", 
  RowBox[{
  "\"\</Users/andrea/Desktop/vertexCoords.json\>\"", ",", 
   "vertexCoordsWithTheta"}], "]"}]], "Input",
 CellChangeTimes->{{3.954304114511445*^9, 3.954304114513131*^9}, {
  3.954304160587536*^9, 3.954304190491832*^9}},
 CellLabel->
  "In[146]:=",ExpressionUUID->"0393c796-2d97-48e0-9835-2e73068a7e32"],

Cell[BoxData["\<\"/Users/andrea/Desktop/vertexCoords.json\"\>"], "Output",
 CellChangeTimes->{3.954304120482527*^9, 3.9543041920327044`*^9},
 CellLabel->
  "Out[146]=",ExpressionUUID->"b26fdda4-d7b1-471b-a5d2-53a22cf174d9"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Quantum bounds", "Section",
 CellChangeTimes->{{3.953867898339332*^9, 
  3.953867901193609*^9}},ExpressionUUID->"8ff309c5-5235-4748-9abe-\
f6d54d37fba8"],

Cell["\<\
We now want to find quantum bounds for the Bell expression. We may start \
implementing the NPA hierarchy with Python and try to see if the behavior is \
the same as in the Tsirelson\[CloseCurlyQuote]s case!\
\>", "Text",
 CellChangeTimes->{{3.953868390561499*^9, 
  3.953868472824831*^9}},ExpressionUUID->"95c46a15-f38a-4472-b993-\
9f4258e42b37"],

Cell[CellGroupData[{

Cell["Changing notation", "Subsection",
 CellChangeTimes->{{3.9538701326205807`*^9, 
  3.953870135789055*^9}},ExpressionUUID->"837283f9-9c68-4aa5-ba46-\
26ad4d4a90b6"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Mprime", " ", ":=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"B", "[", "0", "]"}], ",", 
     RowBox[{"B", "[", "1", "]"}], ",", 
     RowBox[{"A", "[", "0", "]"}], ",", 
     RowBox[{
      RowBox[{"A", "[", "0", "]"}], 
      RowBox[{"B", "[", "0", "]"}]}], ",", " ", 
     RowBox[{
      RowBox[{"A", "[", "0", "]"}], 
      RowBox[{"B", "[", "1", "]"}]}], ",", 
     RowBox[{"A", "[", "1", "]"}], ",", 
     RowBox[{
      RowBox[{"A", "[", "1", "]"}], 
      RowBox[{"B", "[", "0", "]"}]}], ",", 
     RowBox[{
      RowBox[{"A", "[", "1", "]"}], 
      RowBox[{"B", "[", "1", "]"}]}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"reducedBell", "[", 
    RowBox[{"A_", ",", "B_"}], "]"}], "=", 
   RowBox[{"Collect", "[", 
    RowBox[{
     RowBox[{"Simplify", "[", 
      RowBox[{
       RowBox[{"Transpose", "[", "\[Beta]", "]"}], ".", "Mprime"}], " ", 
      "]"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"p", "[", "1", "]"}], ",", 
       RowBox[{"p", "[", "4", "]"}]}], "}"}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{
  3.953870233561125*^9, {3.953870536526121*^9, 3.953870565182417*^9}},
 CellLabel->
  "In[127]:=",ExpressionUUID->"dd8a181e-985f-46ef-a754-49f7af50cc5b"],

Cell["Introduced the notation used for the Python package,", "Text",
 CellChangeTimes->{{3.9538704032606163`*^9, 3.953870418936808*^9}, {
  3.953870578851759*^9, 
  3.953870582827018*^9}},ExpressionUUID->"3db085cb-8d82-4eb1-9b5c-\
9791515509dd"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"AA", "[", "i_", "]"}], ":=", " ", 
   RowBox[{
    RowBox[{"2", 
     RowBox[{"A", "[", 
      RowBox[{"0", ",", "i"}], "]"}]}], "-", "1"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"BB", "[", "i_", "]"}], ":=", 
   RowBox[{
    RowBox[{"2", 
     RowBox[{"B", "[", 
      RowBox[{"0", ",", "i"}], "]"}]}], "-", "1"}]}], ";"}]}], "Input",
 CellLabel->
  "In[129]:=",ExpressionUUID->"5c139a6f-3ee3-4765-8ec1-d68e1849a941"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"reducedexpr", "=", 
  RowBox[{"Collect", "[", 
   RowBox[{
    RowBox[{"FullSimplify", "[", 
     RowBox[{"reducedBell", "[", 
      RowBox[{"AA", ",", "BB"}], "]"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"p", "[", "1", "]"}], ",", 
      RowBox[{"p", "[", "4", "]"}]}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.9538704217944517`*^9, 3.953870428602078*^9}, {
  3.953870481653408*^9, 3.953870483825731*^9}, {3.953870615581909*^9, 
  3.953870658753182*^9}, {3.953870703331545*^9, 3.953870709170735*^9}},
 CellLabel->
  "In[131]:=",ExpressionUUID->"05f66a51-f64c-4096-8888-c4432fd5bfb4"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   FractionBox["1", "4"], " ", 
   RowBox[{"p", "[", "4", "]"}], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"4", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "2"}], "+", 
        RowBox[{"4", " ", 
         RowBox[{"A", "[", 
          RowBox[{"0", ",", "1"}], "]"}]}]}], ")"}]}], "-", 
     RowBox[{"8", " ", 
      SqrtBox["2"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        RowBox[{"2", " ", 
         RowBox[{"A", "[", 
          RowBox[{"0", ",", "1"}], "]"}]}]}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        RowBox[{"B", "[", 
         RowBox[{"0", ",", "0"}], "]"}], "+", 
        RowBox[{"B", "[", 
         RowBox[{"0", ",", "1"}], "]"}]}], ")"}], " ", 
      RowBox[{"Cos", "[", 
       RowBox[{"2", " ", "\[Theta]"}], "]"}]}], "+", 
     RowBox[{"8", " ", 
      SqrtBox["2"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", 
         RowBox[{"B", "[", 
          RowBox[{"0", ",", "0"}], "]"}]}], "+", 
        RowBox[{"B", "[", 
         RowBox[{"0", ",", "1"}], "]"}]}], ")"}], " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"2", " ", "\[Theta]"}], "]"}]}]}], ")"}]}], "+", 
  RowBox[{
   FractionBox["1", "4"], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"4", " ", 
      SqrtBox["2"]}], "-", 
     RowBox[{"8", " ", 
      SqrtBox["2"], " ", 
      RowBox[{"A", "[", 
       RowBox[{"0", ",", "0"}], "]"}]}], "-", 
     RowBox[{"4", " ", 
      SqrtBox["2"], " ", 
      RowBox[{"B", "[", 
       RowBox[{"0", ",", "0"}], "]"}]}], "+", 
     RowBox[{"8", " ", 
      SqrtBox["2"], " ", 
      RowBox[{"A", "[", 
       RowBox[{"0", ",", "0"}], "]"}], " ", 
      RowBox[{"B", "[", 
       RowBox[{"0", ",", "0"}], "]"}]}], "-", 
     RowBox[{"4", " ", 
      SqrtBox["2"], " ", 
      RowBox[{"B", "[", 
       RowBox[{"0", ",", "1"}], "]"}]}], "+", 
     RowBox[{"8", " ", 
      SqrtBox["2"], " ", 
      RowBox[{"A", "[", 
       RowBox[{"0", ",", "0"}], "]"}], " ", 
      RowBox[{"B", "[", 
       RowBox[{"0", ",", "1"}], "]"}]}], "+", 
     RowBox[{
      SqrtBox["2"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        RowBox[{"2", " ", 
         RowBox[{"A", "[", 
          RowBox[{"0", ",", "1"}], "]"}]}]}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"B", "[", 
         RowBox[{"0", ",", "0"}], "]"}], "-", 
        RowBox[{"B", "[", 
         RowBox[{"0", ",", "1"}], "]"}]}], ")"}], " ", 
      RowBox[{"Cot", "[", "\[Theta]", "]"}]}], "-", 
     RowBox[{
      SqrtBox["2"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        RowBox[{"A", "[", 
         RowBox[{"0", ",", "0"}], "]"}]}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        RowBox[{"B", "[", 
         RowBox[{"0", ",", "0"}], "]"}], "+", 
        RowBox[{"B", "[", 
         RowBox[{"0", ",", "1"}], "]"}]}], ")"}], " ", 
      SuperscriptBox[
       RowBox[{"Csc", "[", "\[Theta]", "]"}], "2"]}], "-", 
     RowBox[{
      SqrtBox["2"], " ", 
      RowBox[{"A", "[", 
       RowBox[{"0", ",", "0"}], "]"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        RowBox[{"B", "[", 
         RowBox[{"0", ",", "0"}], "]"}], "+", 
        RowBox[{"B", "[", 
         RowBox[{"0", ",", "1"}], "]"}]}], ")"}], " ", 
      SuperscriptBox[
       RowBox[{"Sec", "[", "\[Theta]", "]"}], "2"]}], "+", 
     RowBox[{
      SqrtBox["2"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        RowBox[{"2", " ", 
         RowBox[{"A", "[", 
          RowBox[{"0", ",", "1"}], "]"}]}]}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"B", "[", 
         RowBox[{"0", ",", "0"}], "]"}], "-", 
        RowBox[{"B", "[", 
         RowBox[{"0", ",", "1"}], "]"}]}], ")"}], " ", 
      RowBox[{"Tan", "[", "\[Theta]", "]"}]}]}], ")"}]}], "+", 
  RowBox[{
   FractionBox["1", "4"], " ", 
   RowBox[{"p", "[", "1", "]"}], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"2", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "2"}], "+", 
        SqrtBox["2"]}], ")"}]}], "+", 
     RowBox[{"8", " ", 
      RowBox[{"A", "[", 
       RowBox[{"0", ",", "0"}], "]"}]}], "-", 
     RowBox[{"2", " ", 
      SqrtBox["2"], " ", 
      RowBox[{"B", "[", 
       RowBox[{"0", ",", "0"}], "]"}]}], "-", 
     RowBox[{"2", " ", 
      SqrtBox["2"], " ", 
      RowBox[{"B", "[", 
       RowBox[{"0", ",", "1"}], "]"}]}], "-", 
     RowBox[{
      SqrtBox["2"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        RowBox[{"2", " ", 
         RowBox[{"A", "[", 
          RowBox[{"0", ",", "1"}], "]"}]}]}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"B", "[", 
         RowBox[{"0", ",", "0"}], "]"}], "-", 
        RowBox[{"B", "[", 
         RowBox[{"0", ",", "1"}], "]"}]}], ")"}], " ", 
      RowBox[{"Cot", "[", "\[Theta]", "]"}]}], "+", 
     RowBox[{
      SqrtBox["2"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        RowBox[{"A", "[", 
         RowBox[{"0", ",", "0"}], "]"}]}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        RowBox[{"B", "[", 
         RowBox[{"0", ",", "0"}], "]"}], "+", 
        RowBox[{"B", "[", 
         RowBox[{"0", ",", "1"}], "]"}]}], ")"}], " ", 
      SuperscriptBox[
       RowBox[{"Csc", "[", "\[Theta]", "]"}], "2"]}], "-", 
     RowBox[{
      SqrtBox["2"], " ", 
      RowBox[{"A", "[", 
       RowBox[{"0", ",", "0"}], "]"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        RowBox[{"B", "[", 
         RowBox[{"0", ",", "0"}], "]"}], "+", 
        RowBox[{"B", "[", 
         RowBox[{"0", ",", "1"}], "]"}]}], ")"}], " ", 
      SuperscriptBox[
       RowBox[{"Sec", "[", "\[Theta]", "]"}], "2"]}], "+", 
     RowBox[{
      SqrtBox["2"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        RowBox[{"2", " ", 
         RowBox[{"A", "[", 
          RowBox[{"0", ",", "1"}], "]"}]}]}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"B", "[", 
         RowBox[{"0", ",", "0"}], "]"}], "-", 
        RowBox[{"B", "[", 
         RowBox[{"0", ",", "1"}], "]"}]}], ")"}], " ", 
      RowBox[{"Tan", "[", "\[Theta]", "]"}]}]}], ")"}]}]}]], "Output",
 CellChangeTimes->{3.95387075947423*^9, 3.953960957916678*^9, 
  3.954298057046034*^9},
 CellLabel->
  "Out[131]=",ExpressionUUID->"33ccc0f6-e24c-43db-93f5-d2640fcd1824"]
}, Open  ]]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["SOS Decomposition", "Section",
 CellChangeTimes->{{3.954405205416668*^9, 
  3.954405209421492*^9}},ExpressionUUID->"77815da3-9c8d-4680-bfa4-\
3554898df571"],

Cell["\<\
We now want to find an SOS decomposition for some of the vertices of the \
local/quantum dual polytope. First, we look at vertices 5 and 7, since for \
these vertices p[4] = 0, and the Bell expression is way easier. We already \
have an ansatz for an SOS decomposition, since we know at least that in the \
\\theta = \\pi/4 case, we have the SOS decomposition that Victor found.\
\>", "Text",
 CellChangeTimes->{{3.954405234698886*^9, 3.954405241300571*^9}, {
  3.954405380343548*^9, 3.9544055123856916`*^9}, {3.954405543892273*^9, 
  3.9544055562238894`*^9}},ExpressionUUID->"12bc4fe9-ac76-4fae-a4cc-\
4a248a8275c9"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Transpose", "[", "\[Beta]", "]"}], ".", "M"}], " ", "/.", 
   RowBox[{
    RowBox[{"p", "[", "4", "]"}], "->", "0"}]}], "//", "Simplify"}]], "Input",\

 CellChangeTimes->{{3.954401963096169*^9, 3.954401972207635*^9}},
 CellLabel->
  "In[157]:=",ExpressionUUID->"487063ff-dd8e-4008-ae9f-1df60226e07d"],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "16"], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"16", " ", 
     RowBox[{"A", "[", "0", "]"}], " ", 
     RowBox[{"p", "[", "1", "]"}]}], "-", 
    RowBox[{"4", " ", 
     SqrtBox["2"], " ", 
     SuperscriptBox[
      RowBox[{"Csc", "[", 
       RowBox[{"2", " ", "\[Theta]"}], "]"}], "2"], " ", 
     RowBox[{
      RowBox[{"A", "[", "0", "]"}], ".", 
      RowBox[{"B", "[", "0", "]"}]}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Cos", "[", 
        RowBox[{"4", " ", "\[Theta]"}], "]"}], "-", 
       RowBox[{
        RowBox[{"Cos", "[", 
         RowBox[{"2", " ", "\[Theta]"}], "]"}], " ", 
        RowBox[{"p", "[", "1", "]"}]}]}], ")"}]}], "-", 
    RowBox[{"4", " ", 
     SqrtBox["2"], " ", 
     SuperscriptBox[
      RowBox[{"Csc", "[", 
       RowBox[{"2", " ", "\[Theta]"}], "]"}], "2"], " ", 
     RowBox[{
      RowBox[{"A", "[", "0", "]"}], ".", 
      RowBox[{"B", "[", "1", "]"}]}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Cos", "[", 
        RowBox[{"4", " ", "\[Theta]"}], "]"}], "-", 
       RowBox[{
        RowBox[{"Cos", "[", 
         RowBox[{"2", " ", "\[Theta]"}], "]"}], " ", 
        RowBox[{"p", "[", "1", "]"}]}]}], ")"}]}], "-", 
    RowBox[{"4", " ", 
     SqrtBox["2"], " ", 
     RowBox[{"Csc", "[", 
      RowBox[{"2", " ", "\[Theta]"}], "]"}], " ", 
     RowBox[{
      RowBox[{"A", "[", "1", "]"}], ".", 
      RowBox[{"B", "[", "0", "]"}]}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", 
       RowBox[{
        RowBox[{"Cos", "[", 
         RowBox[{"2", " ", "\[Theta]"}], "]"}], " ", 
        RowBox[{"p", "[", "1", "]"}]}]}], ")"}]}], "+", 
    RowBox[{"4", " ", 
     SqrtBox["2"], " ", 
     RowBox[{"Csc", "[", 
      RowBox[{"2", " ", "\[Theta]"}], "]"}], " ", 
     RowBox[{
      RowBox[{"A", "[", "1", "]"}], ".", 
      RowBox[{"B", "[", "1", "]"}]}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", 
       RowBox[{
        RowBox[{"Cos", "[", 
         RowBox[{"2", " ", "\[Theta]"}], "]"}], " ", 
        RowBox[{"p", "[", "1", "]"}]}]}], ")"}]}], "+", 
    RowBox[{"2", " ", 
     SqrtBox["2"], " ", 
     RowBox[{"B", "[", "0", "]"}], " ", 
     SuperscriptBox[
      RowBox[{"Csc", "[", 
       RowBox[{"2", " ", "\[Theta]"}], "]"}], "2"], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"2", " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"2", " ", "\[Theta]"}], "]"}]}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "3"}], "+", 
          RowBox[{"Cos", "[", 
           RowBox[{"4", " ", "\[Theta]"}], "]"}]}], ")"}], " ", 
        RowBox[{"p", "[", "1", "]"}]}]}], ")"}]}], "+", 
    FractionBox[
     RowBox[{
      RowBox[{"B", "[", "1", "]"}], " ", 
      SuperscriptBox[
       RowBox[{"Csc", "[", "\[Theta]", "]"}], "2"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"2", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"2", " ", "\[Theta]"}], "]"}]}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "3"}], "+", 
           RowBox[{"Cos", "[", 
            RowBox[{"4", " ", "\[Theta]"}], "]"}]}], ")"}], " ", 
         RowBox[{"p", "[", "1", "]"}]}]}], ")"}], " ", 
      SuperscriptBox[
       RowBox[{"Sec", "[", "\[Theta]", "]"}], "2"]}], 
     SqrtBox["2"]]}], ")"}]}]], "Output",
 CellChangeTimes->{3.9544019762248774`*^9},
 CellLabel->
  "Out[157]=",ExpressionUUID->"b5b37e09-a8ee-4faa-9664-67b29156fac9"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Interesting vertex", "Subsection",
 CellChangeTimes->{{3.954921556869336*^9, 
  3.954921562212586*^9}},ExpressionUUID->"2555635d-4c42-4153-888a-\
c623266a5873"],

Cell["\<\
The interesting vertex, that can be already reached with the local level 1 of \
the hierarchy is the 7th\
\>", "Text",
 CellChangeTimes->{{3.954921648638729*^9, 
  3.954921693596176*^9}},ExpressionUUID->"bc71faec-b8b3-4be1-a149-\
d0f1789a3408"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"v", "[", 
   RowBox[{"[", "7", "]"}], "]"}], "//", "FullSimplify"}]], "Input",
 CellChangeTimes->{{3.954921564553244*^9, 3.954921574382107*^9}},
 CellLabel->
  "In[118]:=",ExpressionUUID->"4b1f1c52-0340-421d-a7d4-0be92a22df68"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox[
    RowBox[{
     RowBox[{"2", " ", 
      SqrtBox["2"]}], "+", 
     RowBox[{
      SqrtBox["2"], " ", 
      SuperscriptBox[
       RowBox[{"Csc", "[", 
        RowBox[{"2", " ", "\[Theta]"}], "]"}], "2"]}], "-", 
     RowBox[{"2", " ", 
      RowBox[{"Csc", "[", "\[Theta]", "]"}], " ", 
      RowBox[{"Sec", "[", "\[Theta]", "]"}]}]}], 
    RowBox[{
     RowBox[{"2", " ", 
      SqrtBox["2"]}], "+", 
     RowBox[{
      RowBox[{"Cot", "[", 
       RowBox[{"2", " ", "\[Theta]"}], "]"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "2"}], "+", 
        RowBox[{
         SqrtBox["2"], " ", 
         RowBox[{"Csc", "[", 
          RowBox[{"2", " ", "\[Theta]"}], "]"}]}]}], ")"}]}], "-", 
     RowBox[{
      RowBox[{"Csc", "[", "\[Theta]", "]"}], " ", 
      RowBox[{"Sec", "[", "\[Theta]", "]"}]}]}]], ",", "0"}], "}"}]], "Output",\

 CellChangeTimes->{{3.954921568681576*^9, 3.95492157519449*^9}},
 CellLabel->
  "Out[118]=",ExpressionUUID->"c37581bf-7b10-40fd-8fbb-a09f5bca344b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"v", "[", 
   RowBox[{"[", "7", "]"}], "]"}], "/.", 
  RowBox[{"\[Theta]", "->", 
   RowBox[{"\[Pi]", "/", "4"}]}]}]], "Input",
 CellChangeTimes->{{3.954921582791363*^9, 3.954921599373536*^9}, {
  3.954921770788545*^9, 3.954921771134068*^9}},
 CellLabel->
  "In[121]:=",ExpressionUUID->"efb05761-d197-41e8-b858-5879505eb178"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    FractionBox["1", "2"], " ", 
    RowBox[{"(", 
     RowBox[{"2", "-", 
      SqrtBox["2"]}], ")"}]}], ",", "0"}], "}"}]], "Output",
 CellChangeTimes->{{3.954921594457944*^9, 3.95492160003899*^9}, 
   3.954921771819591*^9},
 CellLabel->
  "Out[121]=",ExpressionUUID->"124ace44-639e-47c9-9147-4519c68f7fe1"]
}, Open  ]],

Cell["The remaining vertices (for the first regime are given by:", "Text",
 CellChangeTimes->{{3.95492180823044*^9, 
  3.954921827098111*^9}},ExpressionUUID->"7210f98f-ad0e-40b2-baea-\
2a0b364dc819"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"v", "//", "FullSimplify"}]], "Input",
 CellChangeTimes->{{3.954921790296825*^9, 3.95492179387376*^9}},
 CellLabel->
  "In[122]:=",ExpressionUUID->"85e52e9a-b133-45ac-a242-d255b6313141"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     FractionBox[
      RowBox[{"2", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Cos", "[", 
          RowBox[{"2", " ", "\[Theta]"}], "]"}], "-", 
         RowBox[{"Sin", "[", 
          RowBox[{"2", " ", "\[Theta]"}], "]"}]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", "-", 
            RowBox[{"2", " ", 
             SqrtBox["2"]}]}], ")"}], " ", 
          RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", 
            SqrtBox["2"]}], ")"}], " ", 
          RowBox[{"Cos", "[", 
           RowBox[{"3", " ", "\[Theta]"}], "]"}]}], "-", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "3"}], "+", 
            SqrtBox["2"]}], ")"}], " ", 
          RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
         RowBox[{"Sin", "[", 
          RowBox[{"3", " ", "\[Theta]"}], "]"}]}], ")"}]}], 
      RowBox[{
       RowBox[{
        RowBox[{"-", "3"}], " ", 
        SqrtBox["2"], " ", 
        RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
       RowBox[{
        SqrtBox["2"], " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"5", " ", "\[Theta]"}], "]"}]}], "-", 
       RowBox[{"3", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "2"}], "+", 
          SqrtBox["2"]}], ")"}], " ", 
        RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
       RowBox[{"2", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"3", " ", "\[Theta]"}], "]"}]}], "+", 
       RowBox[{
        SqrtBox["2"], " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"5", " ", "\[Theta]"}], "]"}]}]}]], ",", 
     RowBox[{"-", 
      FractionBox[
       RowBox[{"2", " ", 
        RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "4"}], "+", 
          RowBox[{"3", " ", 
           SqrtBox["2"]}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "2"}], "+", 
             SqrtBox["2"]}], ")"}], " ", 
           RowBox[{"Cot", "[", "\[Theta]", "]"}]}]}], ")"}], " ", 
        SuperscriptBox[
         RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}], 
       RowBox[{
        RowBox[{
         RowBox[{"-", "3"}], " ", 
         SqrtBox["2"], " ", 
         RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
        RowBox[{
         SqrtBox["2"], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"5", " ", "\[Theta]"}], "]"}]}], "-", 
        RowBox[{"3", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "2"}], "+", 
           SqrtBox["2"]}], ")"}], " ", 
         RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
        RowBox[{"2", " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"3", " ", "\[Theta]"}], "]"}]}], "+", 
        RowBox[{
         SqrtBox["2"], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"5", " ", "\[Theta]"}], "]"}]}]}]]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", 
      FractionBox[
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "2"}], "+", 
          SqrtBox["2"]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Cos", "[", 
           RowBox[{"2", " ", "\[Theta]"}], "]"}], "+", 
          RowBox[{"Cos", "[", 
           RowBox[{"6", " ", "\[Theta]"}], "]"}]}], ")"}]}], 
       RowBox[{"4", "-", 
        RowBox[{"3", " ", 
         SqrtBox["2"]}], "+", 
        RowBox[{
         SqrtBox["2"], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"4", " ", "\[Theta]"}], "]"}]}]}]]}], ",", 
     FractionBox[
      RowBox[{
       RowBox[{"(", 
        RowBox[{"3", "-", 
         RowBox[{"2", " ", 
          SqrtBox["2"]}]}], ")"}], " ", 
       SuperscriptBox[
        RowBox[{"Sin", "[", 
         RowBox[{"2", " ", "\[Theta]"}], "]"}], "2"]}], 
      RowBox[{
       RowBox[{"-", "3"}], "+", 
       RowBox[{"2", " ", 
        SqrtBox["2"]}], "+", 
       RowBox[{"Cos", "[", 
        RowBox[{"4", " ", "\[Theta]"}], "]"}]}]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox[
      RowBox[{"2", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Cos", "[", 
          RowBox[{"2", " ", "\[Theta]"}], "]"}], "-", 
         RowBox[{"Sin", "[", 
          RowBox[{"2", " ", "\[Theta]"}], "]"}]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", "-", 
            RowBox[{"2", " ", 
             SqrtBox["2"]}]}], ")"}], " ", 
          RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", 
            SqrtBox["2"]}], ")"}], " ", 
          RowBox[{"Cos", "[", 
           RowBox[{"3", " ", "\[Theta]"}], "]"}]}], "-", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "3"}], "+", 
            SqrtBox["2"]}], ")"}], " ", 
          RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
         RowBox[{"Sin", "[", 
          RowBox[{"3", " ", "\[Theta]"}], "]"}]}], ")"}]}], 
      RowBox[{
       RowBox[{
        RowBox[{"-", "3"}], " ", 
        SqrtBox["2"], " ", 
        RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
       RowBox[{
        SqrtBox["2"], " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"5", " ", "\[Theta]"}], "]"}]}], "-", 
       RowBox[{"3", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "2"}], "+", 
          SqrtBox["2"]}], ")"}], " ", 
        RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
       RowBox[{"2", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"3", " ", "\[Theta]"}], "]"}]}], "+", 
       RowBox[{
        SqrtBox["2"], " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"5", " ", "\[Theta]"}], "]"}]}]}]], ",", 
     FractionBox[
      RowBox[{"2", " ", 
       RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "4"}], "+", 
         RowBox[{"3", " ", 
          SqrtBox["2"]}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "2"}], "+", 
            SqrtBox["2"]}], ")"}], " ", 
          RowBox[{"Cot", "[", "\[Theta]", "]"}]}]}], ")"}], " ", 
       SuperscriptBox[
        RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}], 
      RowBox[{
       RowBox[{
        RowBox[{"-", "3"}], " ", 
        SqrtBox["2"], " ", 
        RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
       RowBox[{
        SqrtBox["2"], " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"5", " ", "\[Theta]"}], "]"}]}], "-", 
       RowBox[{"3", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "2"}], "+", 
          SqrtBox["2"]}], ")"}], " ", 
        RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
       RowBox[{"2", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"3", " ", "\[Theta]"}], "]"}]}], "+", 
       RowBox[{
        SqrtBox["2"], " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"5", " ", "\[Theta]"}], "]"}]}]}]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", 
      FractionBox[
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "2"}], "+", 
          SqrtBox["2"]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Cos", "[", 
           RowBox[{"2", " ", "\[Theta]"}], "]"}], "+", 
          RowBox[{"Cos", "[", 
           RowBox[{"6", " ", "\[Theta]"}], "]"}]}], ")"}]}], 
       RowBox[{"4", "-", 
        RowBox[{"3", " ", 
         SqrtBox["2"]}], "+", 
        RowBox[{
         SqrtBox["2"], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"4", " ", "\[Theta]"}], "]"}]}]}]]}], ",", 
     FractionBox[
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "3"}], "+", 
         RowBox[{"2", " ", 
          SqrtBox["2"]}]}], ")"}], " ", 
       SuperscriptBox[
        RowBox[{"Sin", "[", 
         RowBox[{"2", " ", "\[Theta]"}], "]"}], "2"]}], 
      RowBox[{
       RowBox[{"-", "3"}], "+", 
       RowBox[{"2", " ", 
        SqrtBox["2"]}], "+", 
       RowBox[{"Cos", "[", 
        RowBox[{"4", " ", "\[Theta]"}], "]"}]}]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox[
      RowBox[{
       RowBox[{"4", " ", 
        SqrtBox["2"]}], "+", 
       RowBox[{"2", " ", 
        RowBox[{"Csc", "[", 
         RowBox[{"2", " ", "\[Theta]"}], "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "4"}], "+", 
          RowBox[{
           SqrtBox["2"], " ", 
           RowBox[{"Csc", "[", 
            RowBox[{"2", " ", "\[Theta]"}], "]"}]}]}], ")"}]}]}], 
      RowBox[{
       RowBox[{
        RowBox[{"-", "4"}], " ", 
        RowBox[{"(", 
         RowBox[{
          SqrtBox["2"], "+", 
          RowBox[{"Cot", "[", 
           RowBox[{"2", " ", "\[Theta]"}], "]"}]}], ")"}]}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"2", "+", 
          RowBox[{
           SqrtBox["2"], " ", 
           RowBox[{"Cot", "[", 
            RowBox[{"2", " ", "\[Theta]"}], "]"}]}]}], ")"}], " ", 
        RowBox[{"Csc", "[", "\[Theta]", "]"}], " ", 
        RowBox[{"Sec", "[", "\[Theta]", "]"}]}]}]], ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox[
      RowBox[{"2", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Cos", "[", 
          RowBox[{"2", " ", "\[Theta]"}], "]"}], "+", 
         RowBox[{"Sin", "[", 
          RowBox[{"2", " ", "\[Theta]"}], "]"}]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "3"}], "+", 
            SqrtBox["2"]}], ")"}], " ", 
          RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
         RowBox[{"Cos", "[", 
          RowBox[{"3", " ", "\[Theta]"}], "]"}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", 
            RowBox[{"2", " ", 
             SqrtBox["2"]}]}], ")"}], " ", 
          RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", 
            SqrtBox["2"]}], ")"}], " ", 
          RowBox[{"Sin", "[", 
           RowBox[{"3", " ", "\[Theta]"}], "]"}]}]}], ")"}]}], 
      RowBox[{
       RowBox[{"3", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "2"}], "+", 
          SqrtBox["2"]}], ")"}], " ", 
        RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
       RowBox[{"2", " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"3", " ", "\[Theta]"}], "]"}]}], "-", 
       RowBox[{
        SqrtBox["2"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Cos", "[", 
           RowBox[{"5", " ", "\[Theta]"}], "]"}], "-", 
          RowBox[{"3", " ", 
           RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
          RowBox[{"Sin", "[", 
           RowBox[{"5", " ", "\[Theta]"}], "]"}]}], ")"}]}]}]], ",", 
     RowBox[{"-", 
      FractionBox[
       RowBox[{"2", " ", 
        RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "2"}], "+", 
          SqrtBox["2"], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "4"}], "+", 
             RowBox[{"3", " ", 
              SqrtBox["2"]}]}], ")"}], " ", 
           RowBox[{"Cot", "[", "\[Theta]", "]"}]}]}], ")"}], " ", 
        SuperscriptBox[
         RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}], 
       RowBox[{
        RowBox[{"3", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "2"}], "+", 
           SqrtBox["2"]}], ")"}], " ", 
         RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
        RowBox[{"2", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"3", " ", "\[Theta]"}], "]"}]}], "-", 
        RowBox[{
         SqrtBox["2"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"Cos", "[", 
            RowBox[{"5", " ", "\[Theta]"}], "]"}], "-", 
           RowBox[{"3", " ", 
            RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
           RowBox[{"Sin", "[", 
            RowBox[{"5", " ", "\[Theta]"}], "]"}]}], ")"}]}]}]]}]}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox[
      RowBox[{
       RowBox[{"2", " ", 
        SqrtBox["2"]}], "+", 
       RowBox[{
        SqrtBox["2"], " ", 
        SuperscriptBox[
         RowBox[{"Csc", "[", 
          RowBox[{"2", " ", "\[Theta]"}], "]"}], "2"]}], "-", 
       RowBox[{"2", " ", 
        RowBox[{"Csc", "[", "\[Theta]", "]"}], " ", 
        RowBox[{"Sec", "[", "\[Theta]", "]"}]}]}], 
      RowBox[{
       RowBox[{"2", " ", 
        SqrtBox["2"]}], "+", 
       RowBox[{
        RowBox[{"Cot", "[", 
         RowBox[{"2", " ", "\[Theta]"}], "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "2"}], "+", 
          RowBox[{
           SqrtBox["2"], " ", 
           RowBox[{"Csc", "[", 
            RowBox[{"2", " ", "\[Theta]"}], "]"}]}]}], ")"}]}], "-", 
       RowBox[{
        RowBox[{"Csc", "[", "\[Theta]", "]"}], " ", 
        RowBox[{"Sec", "[", "\[Theta]", "]"}]}]}]], ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox[
      RowBox[{"2", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Cos", "[", 
          RowBox[{"2", " ", "\[Theta]"}], "]"}], "+", 
         RowBox[{"Sin", "[", 
          RowBox[{"2", " ", "\[Theta]"}], "]"}]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "3"}], "+", 
            SqrtBox["2"]}], ")"}], " ", 
          RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
         RowBox[{"Cos", "[", 
          RowBox[{"3", " ", "\[Theta]"}], "]"}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", 
            RowBox[{"2", " ", 
             SqrtBox["2"]}]}], ")"}], " ", 
          RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", 
            SqrtBox["2"]}], ")"}], " ", 
          RowBox[{"Sin", "[", 
           RowBox[{"3", " ", "\[Theta]"}], "]"}]}]}], ")"}]}], 
      RowBox[{
       RowBox[{"3", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "2"}], "+", 
          SqrtBox["2"]}], ")"}], " ", 
        RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
       RowBox[{"2", " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"3", " ", "\[Theta]"}], "]"}]}], "-", 
       RowBox[{
        SqrtBox["2"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Cos", "[", 
           RowBox[{"5", " ", "\[Theta]"}], "]"}], "-", 
          RowBox[{"3", " ", 
           RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
          RowBox[{"Sin", "[", 
           RowBox[{"5", " ", "\[Theta]"}], "]"}]}], ")"}]}]}]], ",", 
     FractionBox[
      RowBox[{"2", " ", 
       RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "2"}], "+", 
         SqrtBox["2"], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "4"}], "+", 
            RowBox[{"3", " ", 
             SqrtBox["2"]}]}], ")"}], " ", 
          RowBox[{"Cot", "[", "\[Theta]", "]"}]}]}], ")"}], " ", 
       SuperscriptBox[
        RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}], 
      RowBox[{
       RowBox[{"3", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "2"}], "+", 
          SqrtBox["2"]}], ")"}], " ", 
        RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
       RowBox[{"2", " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"3", " ", "\[Theta]"}], "]"}]}], "-", 
       RowBox[{
        SqrtBox["2"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Cos", "[", 
           RowBox[{"5", " ", "\[Theta]"}], "]"}], "-", 
          RowBox[{"3", " ", 
           RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
          RowBox[{"Sin", "[", 
           RowBox[{"5", " ", "\[Theta]"}], "]"}]}], ")"}]}]}]]}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.9549217977741756`*^9},
 CellLabel->
  "Out[122]=",ExpressionUUID->"2540861e-961c-4d8f-81e2-a232d9dbd0f7"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1299, 916},
WindowMargins->{{72, Automatic}, {Automatic, 0}},
FrontEndVersion->"14.0 for Mac OS X ARM (64-bit) (December 12, 2023)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"ffa36584-0862-4349-8d77-778999016c46"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 295, 4, 98, "Title",ExpressionUUID->"dcb3ea09-9dd6-4189-9e5e-3fa5f8524803"],
Cell[CellGroupData[{
Cell[900, 30, 211, 4, 67, "Section",ExpressionUUID->"2ca0f123-cff7-42db-ad21-d548abc35ad7"],
Cell[1114, 36, 724, 12, 81, "Text",ExpressionUUID->"c84f387f-23ac-46df-b4cd-c1cc27668cfb"],
Cell[1841, 50, 343, 5, 35, "Text",ExpressionUUID->"14a013af-677f-4368-91af-925178ce43d1"],
Cell[2187, 57, 740, 17, 92, "Input",ExpressionUUID->"8327d7d9-7500-4a71-9335-74a775d7c258"],
Cell[2930, 76, 296, 7, 35, "Text",ExpressionUUID->"4b787d6e-0968-4f05-bae8-abd46b2bbe94"],
Cell[3229, 85, 1539, 40, 196, "Input",ExpressionUUID->"badd97e2-0a44-4ad9-b5b8-3aefa39ce14b"],
Cell[CellGroupData[{
Cell[4793, 129, 279, 4, 53, "Subsection",ExpressionUUID->"ba18c35b-6aa4-44d2-a27a-e73e0f227d5c"],
Cell[5075, 135, 236, 4, 35, "Text",ExpressionUUID->"00b2c191-dbb1-47d5-97c4-0dbf6f53a9fb"],
Cell[5314, 141, 1953, 51, 92, "Input",ExpressionUUID->"63bde641-a49d-4e07-8961-7d02d4e2c04a"],
Cell[7270, 194, 274, 6, 35, "Text",ExpressionUUID->"c627de52-ad44-48aa-ba05-a7b40f349194"],
Cell[CellGroupData[{
Cell[7569, 204, 2689, 69, 155, "Input",ExpressionUUID->"36082a2a-478b-45d5-a771-917794351aa2"],
Cell[10261, 275, 3810, 107, 175, "Output",ExpressionUUID->"761a3772-be44-4e4e-9b5a-abd298447e7a"]
}, Open  ]],
Cell[14086, 385, 166, 3, 35, "Text",ExpressionUUID->"3d40848f-1b99-44fc-9f26-88525d0d6c65"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[14301, 394, 323, 5, 53, "Section",ExpressionUUID->"c049268a-e810-4816-a8ae-3af2f222e93e"],
Cell[CellGroupData[{
Cell[14649, 403, 158, 3, 53, "Subsection",ExpressionUUID->"0c3b35a6-30f9-4b19-b6a9-28a5f5f60e90"],
Cell[14810, 408, 249, 6, 35, "Text",ExpressionUUID->"820abb7e-e243-4fba-91cb-9597aabde602"],
Cell[15062, 416, 992, 21, 288, "Text",ExpressionUUID->"dcf98ff1-e68c-47ee-ab66-895385e6abb2"],
Cell[16057, 439, 338, 7, 58, "Text",ExpressionUUID->"8f74e670-70b4-41dd-acd3-318c44caee03"],
Cell[16398, 448, 549, 11, 81, "Text",ExpressionUUID->"735a4a7d-6e5b-4d26-a963-ef30d6910462"]
}, Closed]],
Cell[CellGroupData[{
Cell[16984, 464, 450, 7, 36, "Subsection",ExpressionUUID->"8647fc6b-aa9f-407a-a33b-6c9da7311d3c"],
Cell[17437, 473, 394, 6, 35, "Text",ExpressionUUID->"e7c6e0d7-e6fb-49b7-9ab9-78318116cc4a"],
Cell[17834, 481, 730, 14, 127, "Text",ExpressionUUID->"bfc7984e-9313-4c15-8f37-8c686c38f223"],
Cell[18567, 497, 312, 7, 35, "Text",ExpressionUUID->"d739b726-2549-4c95-972d-14fb395b8626"],
Cell[18882, 506, 906, 26, 72, "Input",ExpressionUUID->"d16642fd-3dcb-4924-9140-e4676220a611"],
Cell[19791, 534, 410, 8, 58, "Text",ExpressionUUID->"5ca00362-28a0-4a2d-b8fd-9f53b1cd5257"],
Cell[20204, 544, 997, 16, 104, "Text",ExpressionUUID->"91f2257a-2cab-48a7-b25d-f7dc28ba41e8"]
}, Closed]],
Cell[CellGroupData[{
Cell[21238, 565, 337, 5, 36, "Subsection",ExpressionUUID->"eb67727b-3ac8-43b8-ae00-12dece277c9a"],
Cell[21578, 572, 583, 13, 173, "Text",ExpressionUUID->"fa2af2bc-c901-425c-be7f-1757e890814f"],
Cell[22164, 587, 192, 3, 35, "Text",ExpressionUUID->"552e86b3-5fb2-49c3-80f0-a476a125b516"],
Cell[22359, 592, 1569, 43, 128, "Input",ExpressionUUID->"78e46aae-65e3-4e1a-8b03-878fa78203c4"],
Cell[23931, 637, 184, 2, 35, "Text",ExpressionUUID->"f725d25b-9054-454f-8749-c35fbef6d77a"],
Cell[CellGroupData[{
Cell[24140, 643, 458, 12, 29, "Input",ExpressionUUID->"ee982167-0814-49ea-9d4e-15acd8df6b31"],
Cell[24601, 657, 739, 16, 33, "Output",ExpressionUUID->"058f87d9-40d1-421c-9030-cafca98c8a26"]
}, Open  ]],
Cell[25355, 676, 281, 6, 35, "Text",ExpressionUUID->"e8961936-4b87-4355-a569-5208e17c655c"],
Cell[25639, 684, 296, 7, 35, "Text",ExpressionUUID->"aecf706c-5f0d-4dbd-99d6-fb73b84cd211"],
Cell[25938, 693, 578, 14, 29, "Input",ExpressionUUID->"a477ce92-ac22-4298-a288-8fc007454204"],
Cell[26519, 709, 426, 8, 35, "Text",ExpressionUUID->"635becf1-7147-49c3-8288-00c230216ee0"],
Cell[CellGroupData[{
Cell[26970, 721, 416, 8, 29, "Input",ExpressionUUID->"cf063eb3-4a65-40d6-a94d-d0e4510c7870"],
Cell[27389, 731, 507, 7, 49, "Output",ExpressionUUID->"49177f7a-9691-4684-95d9-8daa8ee52ece"]
}, Open  ]],
Cell[27911, 741, 207, 4, 35, "Text",ExpressionUUID->"eddc955e-08a7-4815-8d57-a70f01d985a1"]
}, Closed]],
Cell[CellGroupData[{
Cell[28155, 750, 395, 6, 36, "Subsection",ExpressionUUID->"fe19328c-215b-4985-87cd-57f5173c7414"],
Cell[28553, 758, 591, 11, 58, "Text",ExpressionUUID->"a56f4cda-9def-4d76-87ec-d5ee7c34268d"],
Cell[29147, 771, 1558, 45, 128, "Input",ExpressionUUID->"ece41761-de8a-4398-86ac-de6f67195467"],
Cell[30708, 818, 661, 17, 51, "Input",ExpressionUUID->"b319af5a-e241-4b67-b01b-ade6284a0b76"],
Cell[31372, 837, 421, 8, 35, "Text",ExpressionUUID->"3640dd44-5dae-4464-b9f0-599ba5e69d2a"],
Cell[CellGroupData[{
Cell[31818, 849, 1850, 52, 113, "Input",ExpressionUUID->"6c718416-c4db-4e94-9028-83ba715d392d"],
Cell[33671, 903, 2729, 77, 96, "Output",ExpressionUUID->"89f0b19a-c01b-4bb8-b082-245ddfac3d70"]
}, Open  ]],
Cell[36415, 983, 330, 7, 35, "Text",ExpressionUUID->"31db25f1-5261-468a-b193-51670c4b4c52"],
Cell[36748, 992, 518, 10, 29, "Input",ExpressionUUID->"29f9dbdc-e378-47bd-b65d-45dddc4d6e16"],
Cell[37269, 1004, 771, 18, 29, "Input",ExpressionUUID->"19d42016-231f-4a64-bfeb-35ceeb225578"],
Cell[38043, 1024, 553, 21, 357, "Text",ExpressionUUID->"8972f220-ed72-4751-8d85-41ece0beae74"],
Cell[38599, 1047, 392, 8, 35, "Text",ExpressionUUID->"a862ac80-ebe7-48e3-b588-ae62762f9787"],
Cell[CellGroupData[{
Cell[39016, 1059, 1320, 30, 72, "Input",ExpressionUUID->"9ba865e9-333d-49e6-a4de-6f760285435f"],
Cell[40339, 1091, 13381, 365, 175, "Output",ExpressionUUID->"7b329478-6184-46cd-b437-ccb230a33294"]
}, Open  ]],
Cell[53735, 1459, 544, 10, 58, "Text",ExpressionUUID->"0b0084f4-5c03-4be6-9192-420e61a39f17"],
Cell[CellGroupData[{
Cell[54304, 1473, 255, 5, 29, "Input",ExpressionUUID->"4bbe5081-360c-4a4c-9560-ececbbb547ce"],
Cell[54562, 1480, 600, 12, 49, "Output",ExpressionUUID->"c47e9987-7357-4ec6-beeb-101fa21b9ecf"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[55211, 1498, 271, 4, 36, "Subsection",ExpressionUUID->"e4d1b804-7729-40a7-a932-75cff0722664"],
Cell[55485, 1504, 467, 8, 58, "Text",ExpressionUUID->"2921443a-1b4d-49aa-89dc-5f71b7ca96d3"],
Cell[CellGroupData[{
Cell[55977, 1516, 469, 10, 29, "Input",ExpressionUUID->"0725267d-da43-4f9a-bc5b-c85d6957f20e"],
Cell[56449, 1528, 627, 12, 49, "Output",ExpressionUUID->"3a35e860-d4cd-4a3c-b961-cb96709458b3"]
}, Open  ]],
Cell[57091, 1543, 178, 3, 35, "Text",ExpressionUUID->"63ed88a3-0eb0-411f-a058-acebeaf7b21e"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[57318, 1552, 260, 4, 53, "Section",ExpressionUUID->"f3c0755e-5d50-4250-958d-2d96d08fde14"],
Cell[CellGroupData[{
Cell[57603, 1560, 170, 3, 53, "Subsection",ExpressionUUID->"45144e33-9f85-406d-bf78-bf001af8674d"],
Cell[57776, 1565, 429, 8, 58, "Text",ExpressionUUID->"5737b7fd-a7cd-4d15-ba41-e494ebee6e36"],
Cell[58208, 1575, 294, 5, 29, "Input",ExpressionUUID->"7efca654-83ed-4406-948e-3f021f253960"],
Cell[58505, 1582, 1425, 39, 113, "Input",ExpressionUUID->"5f717478-6696-40e9-8b4c-b0f0004d28d9"],
Cell[59933, 1623, 1477, 41, 113, "Input",ExpressionUUID->"5e19be52-faff-4972-9d9e-2a18eba04585"],
Cell[CellGroupData[{
Cell[61435, 1668, 508, 9, 29, "Input",ExpressionUUID->"954c0a18-de02-4f43-a1fa-f0c1f3cb610e"],
Cell[61946, 1679, 2574, 69, 89, "Output",ExpressionUUID->"fe9225b2-c804-45a3-992c-5521f76c6368"]
}, Open  ]],
Cell[CellGroupData[{
Cell[64557, 1753, 535, 10, 29, "Input",ExpressionUUID->"4cfead56-444e-479c-b0d5-60204b206256"],
Cell[65095, 1765, 2348, 65, 68, "Output",ExpressionUUID->"049f60ff-c7ea-4d3f-9d4f-ee5034a87196"]
}, Open  ]],
Cell[67458, 1833, 926, 26, 72, "Input",ExpressionUUID->"019d0325-dfda-4e32-8259-b51363f3519d"],
Cell[68387, 1861, 369, 7, 35, "Text",ExpressionUUID->"9fe0080f-839a-44f9-93ed-f049a4993b19"]
}, Closed]],
Cell[CellGroupData[{
Cell[68793, 1873, 216, 4, 36, "Subsection",ExpressionUUID->"f49be4d7-727f-4acc-a699-9cfc567adc8e"],
Cell[69012, 1879, 274, 6, 35, "Text",ExpressionUUID->"51cfc50a-d7ee-4295-b5d6-ba663c26415d"],
Cell[69289, 1887, 831, 23, 168, "Input",ExpressionUUID->"91df54f5-7ebc-4ae8-82f9-976516356083"],
Cell[70123, 1912, 223, 4, 35, "Text",ExpressionUUID->"25cdbac9-1fe7-481f-bf8c-66d81c2c5a68"],
Cell[CellGroupData[{
Cell[70371, 1920, 512, 9, 29, "Input",ExpressionUUID->"30778cd2-456c-4817-99e9-9f6f776c02d9"],
Cell[70886, 1931, 1075, 26, 46, "Output",ExpressionUUID->"62c98c92-38d7-418c-9046-8abc4bf75400"]
}, Open  ]],
Cell[CellGroupData[{
Cell[71998, 1962, 225, 4, 29, "Input",ExpressionUUID->"4b45ee6d-9e54-4fe4-9480-ee484388b5f8"],
Cell[72226, 1968, 521, 13, 62, "Output",ExpressionUUID->"09fd6d70-871e-4b86-8db2-1807b2a293c2"]
}, Open  ]],
Cell[72762, 1984, 351, 5, 35, "Text",ExpressionUUID->"c7a6b35e-aa7f-4ae2-87c0-d5bf8a31918e"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[73162, 1995, 156, 3, 53, "Section",ExpressionUUID->"3cdce05c-2828-4aec-84fd-6004eb45cea9"],
Cell[CellGroupData[{
Cell[73343, 2002, 163, 3, 54, "Subsection",ExpressionUUID->"15342873-8670-4819-a881-8b9c83a2b7c0"],
Cell[73509, 2007, 753, 22, 157, "Input",ExpressionUUID->"d5a6fe5e-68a2-4982-b325-153a91c5c060"],
Cell[74265, 2031, 327, 8, 81, "Text",ExpressionUUID->"3eaa7ef8-c1f3-4aa4-afa9-2ff24bbcefc8"],
Cell[74595, 2041, 912, 17, 173, "Text",ExpressionUUID->"4083e1ee-a4bc-4338-8a4f-bb1f6b73f640"],
Cell[75510, 2060, 374, 7, 58, "Text",ExpressionUUID->"9d038e16-4c8f-4eee-a27c-a6ec7d00215b"],
Cell[CellGroupData[{
Cell[75909, 2071, 1488, 45, 92, "Input",ExpressionUUID->"8ae56e70-507c-4232-8223-8c03def8fa02"],
Cell[77400, 2118, 1110, 35, 175, "Output",ExpressionUUID->"19b777f0-fc3a-4450-bed7-bbd13f5f7a7d"]
}, Open  ]],
Cell[78525, 2156, 303, 6, 58, "Text",ExpressionUUID->"6db1b71d-4390-454a-87d3-e0e2868331c0"],
Cell[78831, 2164, 1114, 33, 92, "Input",ExpressionUUID->"8cb201d6-daaf-48b2-9fa4-31e44cdfac47"],
Cell[79948, 2199, 1269, 37, 51, "Input",ExpressionUUID->"30500510-e476-4e50-be6f-bba86a4bca53"],
Cell[81220, 2238, 236, 6, 35, "Text",ExpressionUUID->"5c76aad0-cb77-4530-8f90-d18d70baac5d"],
Cell[CellGroupData[{
Cell[81481, 2248, 1361, 35, 92, "Input",ExpressionUUID->"4649ec30-ec75-48e5-a499-50cbf191261e"],
Cell[82845, 2285, 516, 8, 33, "Output",ExpressionUUID->"a1db4ab3-c1ad-4adb-9de3-4bf4bdb19a44"]
}, Open  ]],
Cell[83376, 2296, 255, 6, 35, "Text",ExpressionUUID->"6925d3ad-1f3f-4e6d-92eb-43c48a06ed4d"],
Cell[83634, 2304, 233, 6, 35, "Text",ExpressionUUID->"d1d47c43-5a0d-4bd5-af94-bbdd46fa2fd0"],
Cell[CellGroupData[{
Cell[83892, 2314, 217, 3, 29, "Input",ExpressionUUID->"c122e561-cf94-4459-a4c1-bf44d206ce42"],
Cell[84112, 2319, 4977, 147, 244, "Output",ExpressionUUID->"f2bb4348-1a2b-4422-ad98-c4a9f1ac31f0"]
}, Open  ]],
Cell[89104, 2469, 186, 3, 35, "Text",ExpressionUUID->"baf73696-bbfe-4d24-91ac-821414605aa2"],
Cell[89293, 2474, 785, 21, 29, "Input",ExpressionUUID->"5548170c-928c-48f4-8ec3-f0a8d4e02485"],
Cell[90081, 2497, 234, 4, 35, "Text",ExpressionUUID->"0e925c6f-c15f-4ae8-85dc-7b4e9cd834d6"],
Cell[CellGroupData[{
Cell[90340, 2505, 542, 13, 29, "Input",ExpressionUUID->"9671b6b4-8739-4ceb-b341-fd6e311eba10"],
Cell[90885, 2520, 5451, 160, 208, "Output",ExpressionUUID->"3f2072ec-d9f8-498d-92dd-af028befce1b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[96373, 2685, 280, 6, 29, "Input",ExpressionUUID->"2186a0fa-f836-4bb8-a590-33915dd335d9"],
Cell[96656, 2693, 4238, 117, 161, "Output",ExpressionUUID->"24c98157-1dc2-4142-900a-fac6ff99c533"]
}, Open  ]],
Cell[100909, 2813, 203, 3, 35, "Text",ExpressionUUID->"f706e85a-2579-4a99-8528-39a566eb1baf"]
}, Open  ]],
Cell[CellGroupData[{
Cell[101149, 2821, 182, 3, 53, "Subsection",ExpressionUUID->"1d873b4a-28cb-4a63-8b2a-a369baad515f"],
Cell[101334, 2826, 713, 12, 104, "Text",ExpressionUUID->"e6cffacb-5a0e-45ad-8eb7-63ccfbb393f3"],
Cell[102050, 2840, 424, 10, 29, "Input",ExpressionUUID->"5e07a44f-14ba-409d-be1c-3c0e9f17ebf5"],
Cell[102477, 2852, 179, 3, 35, "Text",ExpressionUUID->"278c4390-8c0d-427f-978b-94a90338b1f3"],
Cell[102659, 2857, 479, 10, 29, "Input",ExpressionUUID->"f120e47d-0ccc-46cb-b9a8-ad1a2791e9c6"],
Cell[103141, 2869, 239, 4, 35, "Text",ExpressionUUID->"dce54cf8-1ccd-49f7-a65a-40d3a2d72409"],
Cell[CellGroupData[{
Cell[103405, 2877, 230, 4, 29, "Input",ExpressionUUID->"f1d2f7c2-b988-44b0-9ea0-5f80559a1ade"],
Cell[103638, 2883, 337, 5, 33, "Output",ExpressionUUID->"f301e642-3aef-4397-923f-15642080260b"]
}, Open  ]],
Cell[103990, 2891, 244, 4, 35, "Text",ExpressionUUID->"f8db1bcd-f1d9-484a-83e6-f1538bf22bfc"],
Cell[CellGroupData[{
Cell[104259, 2899, 213, 3, 29, "Input",ExpressionUUID->"7bbf8fe3-9325-44d7-8591-4a853c51a8ae"],
Cell[104475, 2904, 337, 5, 33, "Output",ExpressionUUID->"a4dc1e28-a173-4667-b318-0096648274b8"]
}, Open  ]],
Cell[104827, 2912, 398, 8, 35, "Text",ExpressionUUID->"d95ef77f-aaf0-4d2f-b250-1d19a00071df"],
Cell[CellGroupData[{
Cell[105250, 2924, 951, 26, 72, "Input",ExpressionUUID->"dc7439a2-4df6-4ffb-b7d7-bcc933a4d891"],
Cell[106204, 2952, 2817, 64, 87, "Output",ExpressionUUID->"d4405be3-8b2d-493e-8255-0660430808bb"]
}, Open  ]],
Cell[109036, 3019, 373, 8, 58, "Text",ExpressionUUID->"855c0f7b-a2e6-444a-88b4-43bb0c171b0a"],
Cell[109412, 3029, 652, 11, 81, "Text",ExpressionUUID->"46d50a7f-6313-4266-82be-fbb238980381"]
}, Open  ]],
Cell[CellGroupData[{
Cell[110101, 3045, 245, 4, 53, "Subsection",ExpressionUUID->"b2cfb8f3-1cea-42cd-bcb5-ae81403228a4"],
Cell[110349, 3051, 318, 7, 35, "Text",ExpressionUUID->"282e480e-db0e-477e-9334-3d9ec1325e85"],
Cell[110670, 3060, 3654, 99, 252, "Input",ExpressionUUID->"cc80f7b2-c258-4c13-a6cb-aa463b75fa2f"],
Cell[CellGroupData[{
Cell[114349, 3163, 207, 3, 29, "Input",ExpressionUUID->"bd529405-ecb4-4c56-aa84-acfcdc852e6a"],
Cell[114559, 3168, 6045, 203, 212, "Output",ExpressionUUID->"4ec91af8-d94c-4939-9da7-54bf4c1930f8"]
}, Open  ]],
Cell[120619, 3374, 326, 7, 35, "Text",ExpressionUUID->"b9c7b048-46ee-4400-b630-0fa7ee90e68d"],
Cell[120948, 3383, 474, 12, 51, "Input",ExpressionUUID->"75048449-3328-4a41-a708-37bdfae1363b"],
Cell[121425, 3397, 273, 6, 35, "Text",ExpressionUUID->"dddfcc28-7eac-4980-88f6-be8c71d90a25"],
Cell[CellGroupData[{
Cell[121723, 3407, 190, 2, 29, "Input",ExpressionUUID->"bb45f993-fc35-4502-8238-c1e8f79b775a"],
Cell[121916, 3411, 774, 22, 33, "Output",ExpressionUUID->"69f5be76-a379-4797-9136-831f2ad233ec"]
}, Open  ]],
Cell[CellGroupData[{
Cell[122727, 3438, 182, 2, 29, "Input",ExpressionUUID->"13881eff-aaa1-4828-ac45-bd11f87875ce"],
Cell[122912, 3442, 4844, 170, 212, "Output",ExpressionUUID->"4737fb9c-74c7-48f0-92b2-d2b1ff5aec74"]
}, Open  ]],
Cell[127771, 3615, 361, 7, 58, "Text",ExpressionUUID->"15593545-397b-44c8-98e6-dbac9c5c4924"],
Cell[128135, 3624, 1729, 45, 92, "Input",ExpressionUUID->"8334bb8d-9bea-4bf8-b9d9-b5db1cfec58e"],
Cell[129867, 3671, 213, 5, 35, "Text",ExpressionUUID->"e686655c-41e2-49ef-a8cf-6860fce54766"],
Cell[130083, 3678, 793, 20, 29, "Input",ExpressionUUID->"a4eb2055-2375-45a2-82d2-8d1a30458dac"],
Cell[130879, 3700, 196, 3, 35, "Text",ExpressionUUID->"547f98a4-8f1a-4dc1-8e6f-49426bba70ad"],
Cell[CellGroupData[{
Cell[131100, 3707, 364, 8, 42, "Input",ExpressionUUID->"85f3a786-a50a-4590-a063-e0098705e70e"],
Cell[131467, 3717, 2256, 81, 92, "Output",ExpressionUUID->"f2c38f95-cebc-407b-bb00-eee506fe0484"]
}, Open  ]],
Cell[CellGroupData[{
Cell[133760, 3803, 912, 21, 42, "Input",ExpressionUUID->"244d6a3b-3738-4bb0-93cf-b9dbf55c0014"],
Cell[134675, 3826, 77038, 1768, 277, "Output",ExpressionUUID->"0d2e764b-c55f-42df-b491-1259cc28c149"]
}, Open  ]],
Cell[211728, 5597, 249, 6, 35, "Text",ExpressionUUID->"8a650025-6076-42cf-91f3-8f0be5c5a762"],
Cell[CellGroupData[{
Cell[212002, 5607, 2958, 74, 196, "Input",ExpressionUUID->"d6b3f41c-ca53-468e-afab-7e30af2007b0"],
Cell[214963, 5683, 110129, 2209, 433, "Output",ExpressionUUID->"99d05673-8a5e-4a22-a00d-d040ca9ceb85"]
}, Open  ]],
Cell[325107, 7895, 197, 3, 35, "Text",ExpressionUUID->"3cd6f948-e4b1-4bd7-b4ad-75929a91b8df"],
Cell[CellGroupData[{
Cell[325329, 7902, 1631, 44, 113, "Input",ExpressionUUID->"280b5574-da30-4211-b259-001c71682cba"],
Cell[326963, 7948, 2305, 44, 169, "Output",ExpressionUUID->"b0089d21-7c9d-4862-822c-ba1dd8de89ab"],
Cell[329271, 7994, 338, 7, 28, "Message",ExpressionUUID->"4aaa49cc-d8d1-4845-9c24-de8f690199c8"]
}, Open  ]],
Cell[329624, 8004, 306, 7, 35, "Text",ExpressionUUID->"0f761761-0bcf-465b-849e-3bbf8d2e8b0b"],
Cell[329933, 8013, 519, 15, 29, "Input",ExpressionUUID->"e5d6ad88-bce7-4a01-80dc-ac64bc2cdcd7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[330489, 8033, 181, 3, 53, "Subsection",ExpressionUUID->"0a20d31c-ce99-4c28-8510-756af8d62459"],
Cell[330673, 8038, 195, 3, 35, "Text",ExpressionUUID->"50ec84f2-7323-4f80-80c3-43757ce8fd9d"],
Cell[330871, 8043, 3021, 77, 231, "Input",ExpressionUUID->"60f13985-1546-4237-b245-30fb3cead11b"],
Cell[CellGroupData[{
Cell[333917, 8124, 843, 23, 51, "Input",ExpressionUUID->"d623d7b0-765e-472e-a3d7-b0e3d2f6545d"],
Cell[334763, 8149, 2027, 41, 140, "Output",ExpressionUUID->"678674d2-f9ef-4344-9629-bb62aec6e1e3"],
Cell[336793, 8192, 420, 8, 28, "Message",ExpressionUUID->"3a447375-4b25-4f90-a0e3-3d3c3d0c389e"],
Cell[337216, 8202, 425, 8, 28, "Message",ExpressionUUID->"d425f8cc-036c-4d31-bd89-927800b51f41"],
Cell[337644, 8212, 423, 8, 28, "Message",ExpressionUUID->"45091d30-efca-4f2e-858a-b6d6f8adca77"],
Cell[338070, 8222, 426, 8, 28, "Message",ExpressionUUID->"4bc1c007-20fe-4ae1-8870-d7212caa98e0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[338533, 8235, 1415, 37, 92, "Input",ExpressionUUID->"76707d35-516c-460e-bea4-3269673b0c14"],
Cell[339951, 8274, 452619, 7718, 450, "Output",ExpressionUUID->"9ba09cc1-1138-40ce-b9b2-abb88f7625e2"]
}, Open  ]],
Cell[792585, 15995, 419, 8, 58, "Text",ExpressionUUID->"39a6f980-d2b7-4765-9e8e-03e89aecc60c"],
Cell[793007, 16005, 1105, 34, 51, "Input",ExpressionUUID->"3cb1645f-d843-41a2-b1d6-1cf0e3f47ff7"],
Cell[794115, 16041, 369, 10, 29, "Input",ExpressionUUID->"fd9cae3f-0446-4672-8a6a-6ca7a8de37e2"],
Cell[794487, 16053, 1571, 40, 72, "Input",ExpressionUUID->"81705418-9b46-47a6-a086-3ad7d65210d8"],
Cell[CellGroupData[{
Cell[796083, 16097, 318, 7, 42, "Input",ExpressionUUID->"bcabeca5-4941-4961-9b88-510330f853f1"],
Cell[796404, 16106, 973, 24, 55, "Output",ExpressionUUID->"9383ad9b-ff73-46a0-b844-5047a1ad4185"]
}, Open  ]],
Cell[797392, 16133, 464, 9, 81, "Text",ExpressionUUID->"29d41070-5fec-4191-bb8a-db97d4f6efad"],
Cell[CellGroupData[{
Cell[797881, 16146, 530, 14, 29, "Input",ExpressionUUID->"ccdaf334-891a-4c24-9143-05570882136c"],
Cell[798414, 16162, 1955, 59, 84, "Output",ExpressionUUID->"10634c00-7caf-473b-a273-d0a11ebb7c0f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[800406, 16226, 849, 18, 42, "Input",ExpressionUUID->"dc2e9a07-e63f-45a1-a76c-5f4f5b8335b2"],
Cell[801258, 16246, 2522, 57, 41, "Output",ExpressionUUID->"80d3c1d0-03c2-40d2-880e-ed2fcb5c1cc9"]
}, Open  ]],
Cell[803795, 16306, 214, 5, 35, "Text",ExpressionUUID->"9850289c-fc23-4e4f-9a47-3aaad420e288"],
Cell[CellGroupData[{
Cell[804034, 16315, 277, 5, 29, "Input",ExpressionUUID->"22d0e3d5-2147-47c3-8951-9215ec87cdc4"],
Cell[804314, 16322, 215, 4, 33, "Output",ExpressionUUID->"eff6d952-f612-4c20-9152-31e57ccce4d0"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[804578, 16332, 158, 3, 53, "Subsection",ExpressionUUID->"80247696-81e9-40ec-82db-f9c4fdb40d26"],
Cell[804739, 16337, 338, 7, 35, "Text",ExpressionUUID->"bcf228d6-50b4-4048-8c91-954803a09d8f"],
Cell[805080, 16346, 3651, 100, 300, "Input",ExpressionUUID->"167b4e72-4267-4859-b15e-38107e8c27fd"],
Cell[CellGroupData[{
Cell[808756, 16450, 186, 3, 29, "Input",ExpressionUUID->"4d298a0d-fde0-4fb7-a689-5609c524ffe4"],
Cell[808945, 16455, 2526, 79, 82, "Output",ExpressionUUID->"eb3c8550-967d-41c8-8107-25a3719687ad"]
}, Open  ]],
Cell[811486, 16537, 236, 6, 35, "Text",ExpressionUUID->"47e0de7f-fd22-4830-892f-01e404d745d7"],
Cell[CellGroupData[{
Cell[811747, 16547, 185, 3, 29, "Input",ExpressionUUID->"e3285db4-665d-4ce5-9134-3d2f6090fd60"],
Cell[811935, 16552, 5980, 203, 212, "Output",ExpressionUUID->"79a4b8d9-8745-41e2-8882-713468704204"]
}, Open  ]],
Cell[817930, 16758, 321, 7, 35, "Text",ExpressionUUID->"c3a6c55b-4338-4354-b370-6ab8c526499a"],
Cell[818254, 16767, 502, 14, 51, "Input",ExpressionUUID->"2a05fe37-460a-4657-9c7b-ca450cb190aa"],
Cell[CellGroupData[{
Cell[818781, 16785, 241, 4, 29, "Input",ExpressionUUID->"fd09e47d-43da-4a76-bcb5-986905b8f824"],
Cell[819025, 16791, 689, 20, 34, "Output",ExpressionUUID->"d05abab3-d186-48e9-8f68-a1180a4282ed"]
}, Open  ]],
Cell[819729, 16814, 1556, 43, 94, "Input",ExpressionUUID->"28a6d989-b570-4617-9cf1-ba2097c6b570"],
Cell[821288, 16859, 619, 18, 30, "Input",ExpressionUUID->"0e9e4b1a-ef12-4892-98bd-13dd5f612dec"],
Cell[821910, 16879, 259, 6, 35, "Text",ExpressionUUID->"717300fa-70bf-4d2c-9cf9-aa3007dcaa1b"],
Cell[CellGroupData[{
Cell[822194, 16889, 3277, 82, 199, "Input",ExpressionUUID->"80e8853a-8e6f-4366-9887-969e63f67cb7"],
Cell[825474, 16973, 107935, 2171, 434, "Output",ExpressionUUID->"61ceb29b-8577-4487-9806-c71e25ec0c95"]
}, Open  ]],
Cell[CellGroupData[{
Cell[933446, 19149, 509, 10, 30, "Input",ExpressionUUID->"16743e58-f419-4844-b6e4-2958009fccd4"],
Cell[933958, 19161, 324, 5, 34, "Output",ExpressionUUID->"2788cccf-30e7-40c5-85a6-9ed12e608d9a"]
}, Open  ]],
Cell[934297, 19169, 249, 6, 35, "Text",ExpressionUUID->"d4ea1476-386e-4a01-bc32-91f46c5225ab"],
Cell[934549, 19177, 1263, 33, 52, "Input",ExpressionUUID->"4e85278b-7629-4f30-b105-f6b55305eed3"],
Cell[CellGroupData[{
Cell[935837, 19214, 270, 6, 30, "Input",ExpressionUUID->"07776b3f-bb5b-4d39-88e0-82061f9254bb"],
Cell[936110, 19222, 929, 25, 37, "Output",ExpressionUUID->"8d4652a9-82c4-4e96-a0f6-81628606ea41"]
}, Open  ]],
Cell[937054, 19250, 175, 3, 35, "Text",ExpressionUUID->"78ba1865-5715-4400-ab93-e7df8f996195"],
Cell[937232, 19255, 1250, 34, 73, "Input",ExpressionUUID->"c2852e66-17f8-4cda-aa34-b014ef2ee683"],
Cell[CellGroupData[{
Cell[938507, 19293, 196, 3, 30, "Input",ExpressionUUID->"a437a8ed-33df-4ae4-aa4d-1fd5922b97b0"],
Cell[938706, 19298, 8088, 224, 313, "Output",ExpressionUUID->"b870b39d-8717-4a3a-a6f9-77c712a86022"]
}, Open  ]],
Cell[CellGroupData[{
Cell[946831, 19527, 353, 8, 30, "Input",ExpressionUUID->"0393c796-2d97-48e0-9835-2e73068a7e32"],
Cell[947187, 19537, 223, 3, 34, "Output",ExpressionUUID->"b26fdda4-d7b1-471b-a5d2-53a22cf174d9"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[947471, 19547, 159, 3, 67, "Section",ExpressionUUID->"8ff309c5-5235-4748-9abe-f6d54d37fba8"],
Cell[947633, 19552, 357, 7, 58, "Text",ExpressionUUID->"95c46a15-f38a-4472-b993-9f4258e42b37"],
Cell[CellGroupData[{
Cell[948015, 19563, 167, 3, 53, "Subsection",ExpressionUUID->"837283f9-9c68-4aa5-ba46-26ad4d4a90b6"],
Cell[948185, 19568, 1279, 38, 51, "Input",ExpressionUUID->"dd8a181e-985f-46ef-a754-49f7af50cc5b"],
Cell[949467, 19608, 245, 4, 35, "Text",ExpressionUUID->"3db085cb-8d82-4eb1-9b5c-9791515509dd"],
Cell[949715, 19614, 496, 17, 51, "Input",ExpressionUUID->"5c139a6f-3ee3-4765-8ec1-d68e1849a941"],
Cell[CellGroupData[{
Cell[950236, 19635, 638, 15, 29, "Input",ExpressionUUID->"05f66a51-f64c-4096-8888-c4432fd5bfb4"],
Cell[950877, 19652, 6630, 214, 228, "Output",ExpressionUUID->"33ccc0f6-e24c-43db-93f5-d2640fcd1824"]
}, Open  ]]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[957568, 19873, 162, 3, 53, "Section",ExpressionUUID->"77815da3-9c8d-4680-bfa4-3554898df571"],
Cell[957733, 19878, 627, 10, 58, "Text",ExpressionUUID->"12bc4fe9-ac76-4fae-a4cc-4a248a8275c9"],
Cell[CellGroupData[{
Cell[958385, 19892, 360, 10, 30, "Input",ExpressionUUID->"487063ff-dd8e-4008-ae9f-1df60226e07d"],
Cell[958748, 19904, 3521, 108, 124, "Output",ExpressionUUID->"b5b37e09-a8ee-4faa-9664-67b29156fac9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[962306, 20017, 166, 3, 54, "Subsection",ExpressionUUID->"2555635d-4c42-4153-888a-c623266a5873"],
Cell[962475, 20022, 254, 6, 35, "Text",ExpressionUUID->"bc71faec-b8b3-4be1-a149-d0f1789a3408"],
Cell[CellGroupData[{
Cell[962754, 20032, 262, 6, 30, "Input",ExpressionUUID->"4b1f1c52-0340-421d-a7d4-0be92a22df68"],
Cell[963019, 20040, 1063, 34, 61, "Output",ExpressionUUID->"c37581bf-7b10-40fd-8fbb-a09f5bca344b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[964119, 20079, 359, 9, 30, "Input",ExpressionUUID->"efb05761-d197-41e8-b858-5879505eb178"],
Cell[964481, 20090, 361, 11, 49, "Output",ExpressionUUID->"124ace44-639e-47c9-9147-4519c68f7fe1"]
}, Open  ]],
Cell[964857, 20104, 199, 3, 35, "Text",ExpressionUUID->"7210f98f-ad0e-40b2-baea-2a0b364dc819"],
Cell[CellGroupData[{
Cell[965081, 20111, 209, 4, 30, "Input",ExpressionUUID->"85e52e9a-b133-45ac-a242-d255b6313141"],
Cell[965293, 20117, 16455, 513, 448, "Output",ExpressionUUID->"2540861e-961c-4d8f-81e2-a232d9dbd0f7"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

